<!--
*
* This jhtml code demonstrates how to perform an advanced search on the
* product catalog repository.  The AdvProductSearch form handler is used to 
* take customer input and perform the search.  The formhandler is configured 
* following properties which define the search:
* 
* doKeywordSearch(true) - search for input in keyword properties
* keywordPropertyNames(keywords) - which properties to search
* doAdvancedSearch(true) - search using advanced searching criteria
* advancedSearchPropertyNames(weightRange) - advanced properties to search
* itemTypes(product) - which item types to search in.
* scope(session) - information used across multiple pages.
*
* The call to handleSearch will take the input and formhandler configuration
* and generate the query to perform on the repository.  The resultset
* will be stored in a property and displayed on the results page.
*
* The first ForEach droplet is called to iterate over each advanced search
* property name.  For each property that has specific choices as options, 
* the handler returns all possible property values from the repository.  
* This information to create a dropdown list for the customer to choose 
* from for advanced searching.  'ANY' is selected by default.  For properties
* that allow a string search like part number, this form provides an input
* box for the customer to enter a string.
*
-->

<importbean bean="/atg/commerce/catalog/AdvProductSearch">
<importbean bean="/atg/dynamo/droplet/ForEach">
<importbean bean="/atg/dynamo/droplet/Switch">
<importbean bean="/atg/userprofiling/Profile">

<form action="adv_search_results.jhtml" method="post">
<strong>Advanced</strong><BR>

Text search for <input type="text" bean="AdvProductSearch.searchInput" size=38>
<!-- use this hidden form tag to make sure the search handler is invoked if
     someone does not hit the submit button -->

<P>
and match these attributes:
<blockquote>
<droplet bean="ForEach">
  <!-- For each property specified in 
   AdvProductSearch.advancedSearchPropertyNames, retrieve all possible 
   property values.  This allows the customer
   to pick one to search on for advanced searching. -->
  <param name="array" value="bean:AdvProductSearch.propertyValuesByType">
  <oparam name="output">
  <droplet bean="Switch">
    <param name="value" value="param:key">
    <!-- One property that a product in the store can have is weight range.
     In this case, if the property is weight range, we want to put all
     possible choices in a pulldown menu. -->
    <oparam name="weightRange">Weight
      <!-- property to store the customer's selection is propertyValues -->
      <select bean="AdvProductSearch.propertyValues.weightRange">
	    <option value="">ANY
      <setvalue param="outerelem" value="param:element">
      <droplet bean="ForEach">
        <param name="array" value="param:outerelem">
        <oparam name="output">
		    <option><valueof param="element">UNDEFINED</valueof>
        </oparam>
      </droplet>
      </select><BR>
    </oparam>
    <oparam name="manufacturer">
      Manufacturer 
      <!-- property to store the customer's selection is propertyValues -->
      <select bean="AdvProductSearch.propertyValues.manufacturer">
	<option value="">ANY
      <setvalue param="outerelem" value="param:element">
      <droplet bean="ForEach">
        <param name="array" value="param:outerelem">
        <oparam name="output">
		    <option><valueof param="element">UNDEFINED</valueof>
        </oparam>
      </droplet>
      </select><br>
    </oparam>
    <oparam name="childSKUs">
      Part Number
      <!-- property to store the customer's selection is propertyValues -->
      <input type=text size=10 bean="AdvProductSearch.propertyValues.childSKUs" value=""><br> 
    </oparam>
  </droplet>
  </oparam>
</droplet>

</blockquote>

<input type="hidden" name="repositoryKey" value="bean:Profile.locale">
<input type="hidden" bean="AdvProductSearch.search" value="Search">
<input type="submit" bean="AdvProductSearch.search" value="Search">


</form>
<java>/* @version $Id: //product/B2BCommerce/version/10.0.3/release/B2BCommerce/html/sample_catalog/adv_search_form.jhtml#2 $$Change: 651448 $*/</java>

