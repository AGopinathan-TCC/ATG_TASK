**** debug	Thu Mar 01 13:40:34 IST 2012	1330589434718	/dynamusic/FactorialDroplet	number is a not a valid integer
**** debug	Thu Mar 01 13:42:42 IST 2012	1330589562625	/dynamusic/FactorialDroplet	number is a valid integer
**** debug	Thu Mar 01 13:42:59 IST 2012	1330589579625	/dynamusic/FactorialDroplet	number is a valid integer
**** debug	Thu Mar 01 13:42:59 IST 2012	1330589579625	/dynamusic/FactorialDroplet	number is a not in range
**** debug	Tue Mar 06 12:24:02 IST 2012	1331016842656	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/MyFormHandler	inside sayhello method
**** debug	Tue Mar 06 12:24:06 IST 2012	1331016846625	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: user name is either null or smaller
**** debug	Tue Mar 06 12:24:06 IST 2012	1331016846640	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:24:06 IST 2012	1331016846640	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: gender must be selected
**** debug	Tue Mar 06 12:24:06 IST 2012	1331016846640	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:24:06 IST 2012	1331016846640	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: age is not a valid number
**** debug	Tue Mar 06 12:24:06 IST 2012	1331016846640	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:24:06 IST 2012	1331016846640	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: age is not in the range our club is expecting
**** debug	Tue Mar 06 12:24:06 IST 2012	1331016846640	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:24:58 IST 2012	1331016898343	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/MyFormHandler	inside sayhello method
**** debug	Tue Mar 06 12:25:12 IST 2012	1331016912062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: user name is either null or smaller
**** debug	Tue Mar 06 12:25:12 IST 2012	1331016912062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:25:12 IST 2012	1331016912062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: gender must be selected
**** debug	Tue Mar 06 12:25:12 IST 2012	1331016912062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:25:12 IST 2012	1331016912062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: age is not a valid number
**** debug	Tue Mar 06 12:25:12 IST 2012	1331016912062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:25:12 IST 2012	1331016912062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: age is not in the range our club is expecting
**** debug	Tue Mar 06 12:25:12 IST 2012	1331016912062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:25:43 IST 2012	1331016943234	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: gender must be selected
**** debug	Tue Mar 06 12:25:46 IST 2012	1331016946046	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:25:46 IST 2012	1331016946046	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: age is not a valid number
**** debug	Tue Mar 06 12:25:46 IST 2012	1331016946046	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:25:46 IST 2012	1331016946046	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: age is not in the range our club is expecting
**** debug	Tue Mar 06 12:25:46 IST 2012	1331016946046	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:25:54 IST 2012	1331016954468	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: gender must be selected
**** debug	Tue Mar 06 12:25:54 IST 2012	1331016954468	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:25:54 IST 2012	1331016954468	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: age is not in the range our club is expecting
**** debug	Tue Mar 06 12:25:54 IST 2012	1331016954468	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:26:02 IST 2012	1331016962125	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-10/dynamusic/MyFormHandler	adding form exception: atg.droplet.DropletException: gender must be selected
**** debug	Tue Mar 06 12:26:02 IST 2012	1331016962125	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-10/dynamusic/MyFormHandler	root cause of exception: null
**** debug	Tue Mar 06 12:26:05 IST 2012	1331016965921	/dynamusic/Bike	inside starting a bike
**** debug	Tue Mar 06 12:26:05 IST 2012	1331016965937	/dynamusic/Bike	inside stopping a bike
**** debug	Tue Mar 06 12:26:42 IST 2012	1331017002328	/dynamusic/Car	inside starting a car
**** debug	Tue Mar 06 12:26:42 IST 2012	1331017002343	/dynamusic/Car	inside stopping a car
**** debug	Mon May 14 17:25:03 IST 2012	1336996503015	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Tue May 15 07:11:02 IST 2012	1337046062062	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Tue May 15 20:18:26 IST 2012	1337093306843	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Tue May 15 20:20:09 IST 2012	1337093409968	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Tue May 15 20:21:30 IST 2012	1337093490859	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Fri May 18 14:57:13 IST 2012	1337333233265	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Fri May 18 14:59:50 IST 2012	1337333390953	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Fri May 18 16:41:24 IST 2012	1337339484984	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Fri May 18 16:43:09 IST 2012	1337339589140	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Fri May 18 16:46:43 IST 2012	1337339803250	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Sun May 20 15:31:42 IST 2012	1337508102937	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Sun May 20 15:34:18 IST 2012	1337508258796	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Sun May 20 15:53:16 IST 2012	1337509396500	/atg/epub/version/VersionManagerService	Uninitializing the VersionManagerService
**** debug	Tue Jun 19 09:44:45 IST 2012	1340079285781	/dynamusic/SongsRepository	Setting invalidationAbsoluteName to /dynamusic/SongsRepository
**** debug	Tue Jun 19 09:44:45 IST 2012	1340079285781	/dynamusic/SongsRepository	SQL Repository starting up
**** debug	Tue Jun 19 09:44:45 IST 2012	1340079285781	/dynamusic/SongsRepository	parsing XML files: /dynamusic/songs.xml
**** debug	Tue Jun 19 09:44:45 IST 2012	1340079285843	/dynamusic/SongsRepository	XML parsing complete: /dynamusic/songs.xml
**** debug	Tue Jun 19 09:44:45 IST 2012	1340079285890	/dynamusic/SongsRepository	id generator is configured to autoCreate id spaces
**** debug	Tue Jun 19 09:44:45 IST 2012	1340079285890	/dynamusic/SongsRepository	Loading column infos at startup.
**** debug	Tue Jun 19 11:13:03 IST 2012	1340084583953	/dynamusic/FactorialDroplet	passed value is not a valid number
**** debug	Tue Jun 19 11:15:32 IST 2012	1340084732156	/dynamusic/FactorialDroplet	passed value is a valid integer
**** debug	Tue Jun 19 11:15:37 IST 2012	1340084737703	/dynamusic/FactorialDroplet	passed value is a valid integer
**** debug	Tue Jun 19 11:15:42 IST 2012	1340084742765	/dynamusic/FactorialDroplet	passed value is a valid integer
**** debug	Tue Jun 19 11:15:46 IST 2012	1340084746671	/dynamusic/FactorialDroplet	passed value is a valid integer
**** debug	Tue Jun 19 11:15:55 IST 2012	1340084755156	/dynamusic/FactorialDroplet	passed value is a valid integer
**** debug	Tue Jun 19 11:15:59 IST 2012	1340084759078	/dynamusic/FactorialDroplet	passed value is a valid integer
**** debug	Tue Jun 19 11:16:25 IST 2012	1340084785203	/dynamusic/FactorialDroplet	passed value is a valid integer
**** debug	Thu Jun 21 09:54:20 IST 2012	1340252660046	/dynamusic/SongsRepository	Setting invalidationAbsoluteName to /dynamusic/SongsRepository
**** debug	Thu Jun 21 09:54:20 IST 2012	1340252660046	/dynamusic/SongsRepository	SQL Repository starting up
**** debug	Thu Jun 21 09:54:20 IST 2012	1340252660046	/dynamusic/SongsRepository	parsing XML files: /dynamusic/songs.xml
**** debug	Thu Jun 21 09:54:20 IST 2012	1340252660125	/dynamusic/SongsRepository	XML parsing complete: /dynamusic/songs.xml
**** debug	Thu Jun 21 09:54:20 IST 2012	1340252660171	/dynamusic/SongsRepository	id generator is configured to autoCreate id spaces
**** debug	Thu Jun 21 09:54:20 IST 2012	1340252660171	/dynamusic/SongsRepository	Loading column infos at startup.
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864250	/dynamusic/FeaturedSongs	getSongs called for first time -- loading featured song titles now.
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	defaulting property: outerJoinSupport to value: sql92
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	p[1] = {pd} 200023 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.description, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864265	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.title, I'll Survive ) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.genre, blues) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	p[1] = {pd} 100002 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.description, His sweet, fluid, jazzy guitar style is legendary, but B.B. King's gospel-drenched singing would've been enough to make him...) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.photoURL, images/BBKing.jpg) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.name, B.B. King) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864281	/dynamusic/SongsRepository	getItem(artist:100002) -> artist:100002 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864296	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.artist, 100002) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864296	/dynamusic/SongsRepository	getItem(song:200023) -> song:200023 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864296	/dynamusic/SongsRepository	getPropertyValue(song:200023.title) -> "I'll Survive " (cached with no transaction)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	p[1] = {pd} 200036 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.description, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.title, April in Paris) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.genre, jazz) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.downloadURL, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	p[1] = {pd} 100003 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.description, In a genre dominated by effusive virtuosity, Count Basie carved out a distinctive niche for himself as a jazz minimalist, and over the course of...) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.photoURL, images/CountBasie.jpg) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.name, Count Basie) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	getItem(artist:100003) -> artist:100003 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.artist, 100003) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	getItem(song:200036) -> song:200036 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "April in Paris" (cached with no transaction)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	p[1] = {pd} 200064 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864312	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.description, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.title, Let It Be) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.genre, pop) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	p[1] = {pd} 100004 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.description, In 1964, the Beatles appeared on the Ed Sullivan show and the world of music has never been the same.  The 'Fab Four' ...) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.photoURL, images/TheBeatles.jpg) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.name, The Beatles) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	getItem(artist:100004) -> artist:100004 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.artist, 100004) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	getItem(song:200064) -> song:200064 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	getPropertyValue(song:200064.title) -> "Let It Be" (cached with no transaction)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	p[1] = {pd} 205201 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.description, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.title, Folsom Prison Blues) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.genre, country) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	p[1] = {pd} 100007 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.description, One of the towering figures of American music, Johhny Cash is part country singer, part folk hero.  Known as a prolific...) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.photoURL, images/JohnnyCash.jpg) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.name, Johnny Cash) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864328	/dynamusic/SongsRepository	getItem(artist:100007) -> artist:100007 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.artist, 100007) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	getItem(song:205201) -> song:205201 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	getPropertyValue(song:205201.title) -> "Folsom Prison Blues" (cached with no transaction)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	p[1] = {pd} 208204 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.description, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.title, From This Moment On) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.genre, country) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	p[1] = {pd} 100011 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.description, Although now ubiquituous in the world of country music, Shania Twain's first album, released in 1993, barely made...) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.photoURL, images/ShaniaTwain.jpg) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.name, Shania Twain) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864343	/dynamusic/SongsRepository	getItem(artist:100011) -> artist:100011 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.artist, 100011) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	getItem(song:208204) -> song:208204 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	getPropertyValue(song:208204.title) -> "From This Moment On" (cached with no transaction)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	p[1] = {pd} 204101 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.description, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.title, Allison) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.genre, pop) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	p[1] = {pd} 100006 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864359	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.description, Dubbed "the most talented pop tunesmith of his generation" by the New York Times in 1982, Elvis Costello (b. Declan Patrick McManus, August 25, 1955, Paddington, London) was by...) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.photoURL, images/ElvisCostello.jpg) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.name, Elvis Costello) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	getItem(artist:100006) -> artist:100006 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.artist, 100006) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	getItem(song:204101) -> song:204101 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	getPropertyValue(song:204101.title) -> "Allison" (cached with no transaction)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	p[1] = {pd} 200034 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.description, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.title, Didn't You?) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.genre, jazz) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.artist, 100003) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	getItem(song:200034) -> song:200034 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You?" (cached with no transaction)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	p[1] = {pd} 205302 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864375	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.description, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.title, It Ain't Me Babe) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.genre, country) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.artist, 100007) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	getItem(song:205302) -> song:205302 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	getPropertyValue(song:205302.title) -> "It Ain't Me Babe" (cached with no transaction)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	p[1] = {pd} 200072 (java.lang.String)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.description, __NULL__) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.title, Something) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.genre, pop) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.artist, 100004) 
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	getItem(song:200072) -> song:200072 (retrieved item from database)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/SongsRepository	getPropertyValue(song:200072.title) -> "Something" (cached with no transaction)
**** debug	Thu Jun 21 11:37:44 IST 2012	1340258864390	/dynamusic/FeaturedSongs	getSongs called, returning 4 song titles.
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	(no parameters)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	getItems(artist: [100002, 100013, 100015, 100003, 100006, 100007, 100005, 100012, 100010, 100011, 100004, 100009, 100014, 100016])
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	getPersistentItems(artist:[100013, 100015, 100005, 100012, 100010, 100009, 100014, 100016])
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	p[1] = {pd} 100013 (java.lang.String)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	p[2] = {pd} 100015 (java.lang.String)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	p[3] = {pd} 100005 (java.lang.String)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	p[4] = {pd} 100012 (java.lang.String)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	p[5] = {pd} 100010 (java.lang.String)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	p[6] = {pd} 100009 (java.lang.String)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	p[7] = {pd} 100014 (java.lang.String)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	p[8] = {pd} 100016 (java.lang.String)
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:50 IST 2012	1340258870984	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100005.description, Arguably the most famous of the composers of the Classical era, Beethoven is best known for his symphonies...) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100005.photoURL, images/Beethoven.jpg) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100005.name, Ludwig van Beethoven) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.description, For over 20 years, the Cure's ever-revolving lineup has served as a vehicle for the prolific genius of Robert Smith, one of the 1980s' most unlikely yet enduring rock stars...) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.photoURL, images/TheCure.jpg) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.name, The Cure) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100010.description, Sergei Rachmaninoff began to study piano with his mother at the age of four. He continued his studies with the great pianists Zvereff and Arenski. While still a student...) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100010.photoURL, images/Rachmaninoff.jpg) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100010.name, Sergei Rachmaninoff) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.description, Muddy Waters, king of Chicago style blues, was perhaps the single most important link between Delta acoustic blues and electric...) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.photoURL, images/MuddyWaters.jpg) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.name, Muddy Waters) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.description, The one-time frontwoman of Iceland's intensely colorful, now-defunct Sugarcubes has often been depicted as a compulsively creative, impish sexpot, and while there...) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.photoURL, images/Bjork.jpg) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.name, Bjork) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.description, The most consistently successful male artist, in terms of overall chart success, to emerge from the country ranks during the past four years, Tim McGraw is the model modern star...) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.photoURL, images/TimMcGraw.gif) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.name, Tim McGraw) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.description, The most profoundly influential singer-songwriter of the rock era, Bob Dylan (b. Robert Allen Zimmerman, May 24, 1941, Duluth, Minnesota) has released over 45 albums since his...) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.photoURL, images/BobDylan.jpg) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.name, Bob Dylan) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.description, Although barely out of her teens when her career began, Toni Braxton has always sounded far more mature than peers like Whitney Houston and Mariah Carey. Braxton admittedly has...) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.photoURL, images/ToniBraxton.jpg) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.name, Toni Braxton) 
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100002,artist:100013,artist:100015,artist:100003,artist:100006,artist:100007,artist:100005,artist:100012,artist:100010,artist:100011,artist:100004,artist:100009,artist:100014,artist:100016] (db sort: ORDER BY name ASC USECASE)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "B.B. King" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Bjork" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Bob Dylan" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Count Basie" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elvis Costello" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Johnny Cash" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Beethoven" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Muddy Waters" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871000	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Sergei Rachmaninoff" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871015	/dynamusic/SongsRepository	getPropertyValue(artist:100011.name) -> "Shania Twain" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871015	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Beatles" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871015	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Cure" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871015	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Tim McGraw" (cached with no transaction)
**** debug	Thu Jun 21 11:37:51 IST 2012	1340258871015	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Toni Braxton" (cached with no transaction)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876390	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "B.B. King" (cached with no transaction)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876421	/dynamusic/SongsRepository	getPropertyValue(artist:100002.photoURL) -> "images/BBKing.jpg" (cached with no transaction)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876421	/dynamusic/SongsRepository	getPropertyValue(artist:100002.description) -> "His sweet, fluid, jazzy guitar style is legendary, but B.B. King's gospel-drenched singing would've been enough to make him..." (cached with no transaction)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876421	/dynamusic/SongsRepository	getPropertyValue(artist:100002.id) -> "100002" (id property)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist t2
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	  WHERE t2.id=t1.artist
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	    AND (t2.id = ?)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	p[1] = {pd: id} 100002 (java.lang.String)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	getItems(album: [300001, 300002, 300003])
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	getPersistentItems(album:[300001, 300002, 300003])
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.cover,t1.artist,t1.published,t1.title
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	p[1] = {pd} 300001 (java.lang.String)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	p[2] = {pd} 300002 (java.lang.String)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	p[3] = {pd} 300003 (java.lang.String)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.description, One of the greatest concert recordings of all time, this is an essential recording for BB King fans and blues fans in general.  The "captive audience" in an Illinois prison...) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.coverURL, images/LiveInCookCountyJail.jpg) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.date, 3/4/1977 11:06:00) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.title, Live in Cook County Jail) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.description, This CD illustrates just how far BB King has come from Itta Bena, Mississippi.  A series of guest shots by such artists as Van Morrison, Tracy Chapman...) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.coverURL, images/DeucesWild.jpg) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.date, 11/4/1997 09:30:00) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.title, Deuces Wild) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.description, Opting for simplicity this time around, B.B. King gets by with a little help from his excellent backing band, producing an album that's evocative of...) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.coverURL, images/BluesOnTheBayou.jpg) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.date, 10/20/1998 10:49:00) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.title, Blues on the Bayou) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	getItems(artist: [100002, 100002, 100002])
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.artist, 100002) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.artist, 100002) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.artist, 100002) 
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876437	/dynamusic/SongsRepository	executeQuery(album,0,3,artist.id = ?) -> [album:300001,album:300002,album:300003] (unsorted)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876453	/dynamusic/SongsRepository	getPropertyValue(album:300001.id) -> "300001" (id property)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876453	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live in Cook County Jail" (cached with no transaction)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876453	/dynamusic/SongsRepository	getPropertyValue(album:300002.id) -> "300002" (id property)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876453	/dynamusic/SongsRepository	getPropertyValue(album:300002.title) -> "Deuces Wild" (cached with no transaction)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876453	/dynamusic/SongsRepository	getPropertyValue(album:300003.id) -> "300003" (id property)
**** debug	Thu Jun 21 11:37:56 IST 2012	1340258876453	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Blues on the Bayou" (cached with no transaction)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=song)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	 {{all}}
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	(no parameters)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	count: all, num = 141
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	 SELECT t1.id,t1.title
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	 ORDER BY t1.title ASC
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	(no parameters)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642812	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	getItems(song: [600039, 204102, 204304, 206304, 209303, 204301, 210104, 204101, 213201, 208301, 200036, 210201, 210103, 200021, 200043, 200052, 204201, 200022, 206301, 213202, 213203, 210302, 213101, 200073, 207103, 207102, 207101, 209302, 200035, 211101, 209102, 200059, 200034, 200037, 212402, 206104, 206303, 205201, 208204, 200054, 208102, 204303, 205203, 213301, 213302, 210301, 206204, 200003, 210101, 205102, 210202, 209203, 200062, 212104, 200023, 209201, 209301, 200011, 210204, 205302, 210303, 210203, 210102, 206302, 206203, 204204, 212101, 200064, 212201, 212303, 200053, 200057, 206103, 200063, 200032, 205303, 200038, 204203, 208201, 209101, 209202, 200039, 212403, 208302, 200071, 204302, 205301, 200082, 200081, 200083, 207203, 207201, 207202, 206102, 211202, 206101, 200012, 212401, 210205, 212203, 200013])
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	getPersistentItems(song:[600039, 204102, 204304, 206304, 209303, 204301, 210104, 213201, 208301, 210201, 210103, 200021, 200043, 200052, 204201, 200022, 206301, 213202, 213203, 210302, 213101, 200073, 207103, 207102, 207101, 209302, 200035, 211101, 209102, 200059, 200037, 212402, 206104, 206303, 200054, 208102, 204303, 205203, 213301, 213302, 210301, 206204, 200003, 210101, 205102, 210202, 209203, 200062, 212104, 209201, 209301, 200011, 210204, 210303, 210203, 210102, 206302, 206203, 204204, 212101, 212201, 212303, 200053, 200057, 206103, 200063, 200032, 205303, 200038, 204203, 208201, 209101, 209202, 200039, 212403, 208302, 200071, 204302, 205301, 200082, 200081, 200083, 207203, 207201, 207202, 206102, 211202, 206101, 200012, 212401, 210205, 212203, 200013])
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[1] = {pd} 600039 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[2] = {pd} 204102 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[3] = {pd} 204304 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[4] = {pd} 206304 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[5] = {pd} 209303 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[6] = {pd} 204301 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[7] = {pd} 210104 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[8] = {pd} 213201 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[9] = {pd} 208301 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[10] = {pd} 210201 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[11] = {pd} 210103 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[12] = {pd} 200021 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[13] = {pd} 200043 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[14] = {pd} 200052 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[15] = {pd} 204201 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[16] = {pd} 200022 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[17] = {pd} 206301 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[18] = {pd} 213202 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[19] = {pd} 213203 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[20] = {pd} 210302 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[21] = {pd} 213101 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[22] = {pd} 200073 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[23] = {pd} 207103 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[24] = {pd} 207102 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[25] = {pd} 207101 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[26] = {pd} 209302 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[27] = {pd} 200035 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[28] = {pd} 211101 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[29] = {pd} 209102 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[30] = {pd} 200059 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[31] = {pd} 200037 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[32] = {pd} 212402 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[33] = {pd} 206104 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[34] = {pd} 206303 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[35] = {pd} 200054 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[36] = {pd} 208102 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[37] = {pd} 204303 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[38] = {pd} 205203 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[39] = {pd} 213301 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[40] = {pd} 213302 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[41] = {pd} 210301 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[42] = {pd} 206204 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[43] = {pd} 200003 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[44] = {pd} 210101 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[45] = {pd} 205102 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[46] = {pd} 210202 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[47] = {pd} 209203 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[48] = {pd} 200062 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[49] = {pd} 212104 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[50] = {pd} 209201 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[51] = {pd} 209301 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[52] = {pd} 200011 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[53] = {pd} 210204 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[54] = {pd} 210303 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[55] = {pd} 210203 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[56] = {pd} 210102 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[57] = {pd} 206302 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[58] = {pd} 206203 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[59] = {pd} 204204 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[60] = {pd} 212101 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[61] = {pd} 212201 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[62] = {pd} 212303 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[63] = {pd} 200053 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[64] = {pd} 200057 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[65] = {pd} 206103 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[66] = {pd} 200063 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[67] = {pd} 200032 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[68] = {pd} 205303 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[69] = {pd} 200038 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[70] = {pd} 204203 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[71] = {pd} 208201 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[72] = {pd} 209101 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[73] = {pd} 209202 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[74] = {pd} 200039 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[75] = {pd} 212403 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[76] = {pd} 208302 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[77] = {pd} 200071 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[78] = {pd} 204302 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[79] = {pd} 205301 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[80] = {pd} 200082 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[81] = {pd} 200081 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[82] = {pd} 200083 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[83] = {pd} 207203 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[84] = {pd} 207201 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[85] = {pd} 207202 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[86] = {pd} 206102 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[87] = {pd} 211202 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[88] = {pd} 206101 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[89] = {pd} 200012 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[90] = {pd} 212401 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[91] = {pd} 210205 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[92] = {pd} 212203 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	p[93] = {pd} 200013 (java.lang.String)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.title, How Blue Can You Get?) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.title, If You Love Me) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.downloadURL, /media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.title, Please Send Me Someone to Love ) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.downloadURL, /media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.title, Rock Me Baby - Eric Clapton) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.downloadURL, /media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.title, Bad Case of Love ) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.title, Blues Boys Tune ) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.title, Magic) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.genre, jazz) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.title, Corner Pocket) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.genre, jazz) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.title, Dinner With Friends) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.genre, jazz) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.title, Mambo Inn) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.genre, jazz) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.title, Midgets) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.genre, jazz) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.title, Battle Royal) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.genre, jazz) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.title, Being for the Benefit of Mr. Kite) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.title, Lovely Rita) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.title, Getting Better) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.title, Lucy in the Sky With Diamonds) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.title, Day in the Life) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.title, I Me Mine) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.title, Maggie Mae) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.title, Octopus's Garden ) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.title, Come Together) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.title, Piano Sonata No. 15 In D Major, Op. 28 'Pastoral': I Allegro ) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.genre, classical) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.title, Piano Sonata No. 14 In C Sharp Minor, Op. 27 No. 2 'Moonlight': II. Allegretto & Trio ) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.genre, classical) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.title, Piano Sonata No. 8 In C Minor, Op. 13 'Pathetique': III Rondo: Allegro ) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.genre, classical) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.title, (The Angels Want to Wear My) Red Shoes) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.title, Beyond Belief) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.title, Man Out of Time) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.title, Kid About It) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.title, Accidents Will Happen) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.title, Oliver's Army) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.title, Green Shirt) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.title, (What's So Funny 'Bout) Peace, Love, and Understanding?) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.title, Hurt) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.title, Green, Green Grass of Home) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.title, Orange Blossom Special) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.title, Mama, You've Been On My Mind) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.title, Plainsong) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.title, Pictures of You) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.title, Lullaby) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.title, Fascination Street) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.title, Just Like Heaven) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.title, Hot! Hot! Hot!) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.title, Boys Don't Cry) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.title, Jumping Someone Else's Train) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.title, Fire in Cairo) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.title, 10:15 Saturday Night) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.title, Concerto No. 1, Op. 1: Vivace) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.genre, classical) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.title, Concerto No. 1, Op. 1: Andante) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.genre, classical) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.title, Concerto No. 1, Op. 1: Allegro Vivace) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.genre, classical) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.title, Piano Trio in D minor, Op. 9: Moderato-Allegro-Moderato) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.genre, classical) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.title, Piano Trio in D minor, Op. 9: Quasi Variazone) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.genre, classical) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.title, Piano Trio in D minor, Op. 9: Allegro Risoluto) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.genre, classical) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.title, Gonna Getcha Good!) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.title, Man! I Feel Like a Woman!) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.title, Any Man of Mine) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.title, No One Needs to Know) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.title, Mannish Boy) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.title, Cross-Eyed Cat) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.title, I'm a King Bee) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.title, Mean Old Frisco Blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.title, I Feel Like Going Home) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.title, I'm Ready) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.title, Copper Brown) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.title, 33 Years) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.genre, blues) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.title, Hunter) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.title, Joga) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.title, Bachelorette) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.title, All Is Full of Love) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.title, Army of Me) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.title, Hyper-Ballad) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.title, It's Oh So Quiet) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.title, Isobel) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.title, Possibly Maybe) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.title, Hidden Place) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.title, Cocoon) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.title, It's Not Up to You) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.title, Cowboy in Me) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.title, Place in the Sun) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.genre, country) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.title, Leopard-Skin Pill-Box Hat) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.title, I Want You) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.title, Like a Rolling Stone) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.title, Queen Jane Approximately) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.title, Lily, Rosemary, and the Jack of Hearts) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.title, Political World) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.title, Everything Is Broken) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.title, Most of the Time) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.title, Come On Over Here) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.title, Another Sad Love Song) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.title, Breathe Again) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.title, Candlelight) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.title, He Wasn't Man Enough) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.description, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.title, Heat) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.genre, pop) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:600039.description, ) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:600039.title, ) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:600039.genre, jazz) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:600039.downloadURL, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642890	/dynamusic/SongsRepository	getItems(artist: [100002, 100002, 100002, 100002, 100002, 100002, 100003, 100003, 100003, 100003, 100003, 100003, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100005, 100005, 100005, 100006, 100006, 100006, 100006, 100006, 100006, 100006, 100006, 100007, 100007, 100007, 100007, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100010, 100010, 100010, 100010, 100010, 100010, 100011, 100011, 100011, 100011, 100012, 100012, 100012, 100012, 100012, 100012, 100012, 100012, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100014, 100014, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100016, 100016, 100016, 100016, 100016, 100016, null])
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.artist, 100002) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.artist, 100002) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.artist, 100002) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.artist, 100002) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.artist, 100002) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.artist, 100002) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.artist, 100003) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.artist, 100003) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.artist, 100003) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.artist, 100003) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.artist, 100003) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.artist, 100003) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.artist, 100004) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.artist, 100004) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.artist, 100004) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.artist, 100004) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.artist, 100004) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.artist, 100004) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.artist, 100004) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.artist, 100004) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.artist, 100004) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.artist, 100005) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.artist, 100005) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.artist, 100005) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.artist, 100006) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.artist, 100006) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.artist, 100006) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.artist, 100006) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.artist, 100006) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.artist, 100006) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.artist, 100006) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.artist, 100006) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.artist, 100007) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.artist, 100007) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.artist, 100007) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.artist, 100007) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.artist, 100009) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.artist, 100010) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.artist, 100010) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.artist, 100010) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.artist, 100010) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.artist, 100010) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.artist, 100010) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.artist, 100011) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.artist, 100011) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.artist, 100011) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.artist, 100011) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.artist, 100012) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.artist, 100012) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.artist, 100012) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.artist, 100012) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.artist, 100012) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.artist, 100012) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.artist, 100012) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.artist, 100012) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.artist, 100013) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.artist, 100014) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.artist, 100014) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.artist, 100015) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.artist, 100015) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.artist, 100015) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.artist, 100015) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.artist, 100015) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.artist, 100015) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.artist, 100015) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.artist, 100015) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.artist, 100016) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.artist, 100016) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.artist, 100016) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.artist, 100016) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.artist, 100016) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.artist, 100016) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	warning: null ref GSAId : null, item-type: song, property: artist
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:600039.artist, __NULL__) 
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	executeQuery(song,0,101,all) -> [song:600039,song:204102,song:204304,song:206304,song:209303,song:204301,song:210104,song:204101,song:213201,song:208301,song:200036,song:210201,song:210103,song:200021,song:200043,song:200052,song:204201,song:200022,song:206301,song:213202,song:213203,song:210302,song:213101,song:200073,song:207103,song:207102,song:207101,song:209302,song:200035,song:211101,song:209102,song:200059,song:200034,song:200037,song:212402,song:206104,song:206303,song:205201,song:208204,song:200054,song:208102,song:204303,song:205203,song:213301,song:213302,song:210301,song:206204,song:200003,song:210101,song:205102,song:210202,song:209203,song:200062,song:212104,song:200023,song:209201,song:209301,song:200011,song:210204,song:205302,song:210303,song:210203,song:210102,song:206302,song:206203,song:204204,song:212101,song:200064,song:212201,song:212303,song:200053,song:200057,song:206103,song:200063,song:200032,song:205303,song:200038,song:204203,song:208201,song:209101,song:209202,song:200039,song:212403,song:208302,song:200071,song:204302,song:205301,song:200082,song:200081,song:200083,song:207203,song:207201,song:207202,song:206102,song:211202,song:206101,song:200012,song:212401,song:210205,song:212203,song:200013] (db sort: ORDER BY title ASC USECASE)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	getPropertyValue(song:600039.title) -> "" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	getPropertyValue(song:204102.title) -> "(The Angels Want to Wear My) Red Shoes" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	getPropertyValue(song:204304.title) -> "(What's So Funny 'Bout) Peace, Love, and Understanding?" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	getPropertyValue(song:206304.title) -> "10:15 Saturday Night" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	getPropertyValue(song:209303.title) -> "33 Years" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	getPropertyValue(song:204301.title) -> "Accidents Will Happen" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	getPropertyValue(song:210104.title) -> "All Is Full of Love" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	getPropertyValue(song:204101.title) -> "Allison" (cached with no transaction)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642921	/dynamusic/SongsRepository	getPropertyValue(song:213201.title) -> "Another Sad Love Song" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:208301.title) -> "Any Man of Mine" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "April in Paris" (cached with no transaction)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210201.title) -> "Army of Me" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210103.title) -> "Bachelorette" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200021.title) -> "Bad Case of Love " (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200043.title) -> "Battle Royal" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200052.title) -> "Being for the Benefit of Mr. Kite" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:204201.title) -> "Beyond Belief" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues Boys Tune " (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:206301.title) -> "Boys Don't Cry" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:213202.title) -> "Breathe Again" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:213203.title) -> "Candlelight" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210302.title) -> "Cocoon" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Come On Over Here" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200073.title) -> "Come Together" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1: Allegro Vivace" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:207102.title) -> "Concerto No. 1, Op. 1: Andante" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:207101.title) -> "Concerto No. 1, Op. 1: Vivace" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:209302.title) -> "Copper Brown" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pocket" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:211101.title) -> "Cowboy in Me" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:209102.title) -> "Cross-Eyed Cat" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200059.title) -> "Day in the Life" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You?" (cached with no transaction)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Dinner With Friends" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:212402.title) -> "Everything Is Broken" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:206104.title) -> "Fascination Street" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:206303.title) -> "Fire in Cairo" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:205201.title) -> "Folsom Prison Blues" (cached with no transaction)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:208204.title) -> "From This Moment On" (cached with no transaction)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200054.title) -> "Getting Better" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:208102.title) -> "Gonna Getcha Good!" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:204303.title) -> "Green Shirt" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:205203.title) -> "Green, Green Grass of Home" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:213301.title) -> "He Wasn't Man Enough" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:213302.title) -> "Heat" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210301.title) -> "Hidden Place" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:206204.title) -> "Hot! Hot! Hot!" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200003.title) -> "How Blue Can You Get?" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210101.title) -> "Hunter" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:205102.title) -> "Hurt" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210202.title) -> "Hyper-Ballad" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:209203.title) -> "I Feel Like Going Home" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200062.title) -> "I Me Mine" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:212104.title) -> "I Want You" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200023.title) -> "I'll Survive " (cached with no transaction)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:209201.title) -> "I'm a King Bee" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:209301.title) -> "I'm Ready" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200011.title) -> "If You Love Me" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210204.title) -> "Isobel" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:205302.title) -> "It Ain't Me Babe" (cached with no transaction)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210303.title) -> "It's Not Up to You" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "It's Oh So Quiet" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:210102.title) -> "Joga" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:206302.title) -> "Jumping Someone Else's Train" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:206203.title) -> "Just Like Heaven" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:204204.title) -> "Kid About It" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:212101.title) -> "Leopard-Skin Pill-Box Hat" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200064.title) -> "Let It Be" (cached with no transaction)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Like a Rolling Stone" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:212303.title) -> "Lily, Rosemary, and the Jack of Hearts" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200053.title) -> "Lovely Rita" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200057.title) -> "Lucy in the Sky With Diamonds" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:206103.title) -> "Lullaby" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200063.title) -> "Maggie Mae" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:205303.title) -> "Mama, You've Been On My Mind" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Mambo Inn" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:204203.title) -> "Man Out of Time" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:208201.title) -> "Man! I Feel Like a Woman!" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:209101.title) -> "Mannish Boy" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:209202.title) -> "Mean Old Frisco Blues" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200039.title) -> "Midgets" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most of the Time" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:208302.title) -> "No One Needs to Know" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:200071.title) -> "Octopus's Garden " (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:204302.title) -> "Oliver's Army" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642937	/dynamusic/SongsRepository	getPropertyValue(song:205301.title) -> "Orange Blossom Special" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:200082.title) -> "Piano Sonata No. 14 In C Sharp Minor, Op. 27 No. 2 'Moonlight': II. Allegretto & Trio " (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:200081.title) -> "Piano Sonata No. 15 In D Major, Op. 28 'Pastoral': I Allegro " (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:200083.title) -> "Piano Sonata No. 8 In C Minor, Op. 13 'Pathetique': III Rondo: Allegro " (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:207203.title) -> "Piano Trio in D minor, Op. 9: Allegro Risoluto" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:207201.title) -> "Piano Trio in D minor, Op. 9: Moderato-Allegro-Moderato" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:207202.title) -> "Piano Trio in D minor, Op. 9: Quasi Variazone" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:206102.title) -> "Pictures of You" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:211202.title) -> "Place in the Sun" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:206101.title) -> "Plainsong" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:200012.title) -> "Please Send Me Someone to Love " (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Political World" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:210205.title) -> "Possibly Maybe" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:212203.title) -> "Queen Jane Approximately" (value from transaction cache)
**** debug	Thu Jun 21 12:24:02 IST 2012	1340261642953	/dynamusic/SongsRepository	getPropertyValue(song:200013.title) -> "Rock Me Baby - Eric Clapton" (value from transaction cache)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653796	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=artist)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653796	/dynamusic/SongsRepository	 {{all}}
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653828	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653828	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653828	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653828	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653828	/dynamusic/SongsRepository	(no parameters)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653828	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653828	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653828	/dynamusic/SongsRepository	count: all, num = 14
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	(no parameters)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	getItems(artist: [100002, 100013, 100015, 100003, 100006, 100007, 100005, 100012, 100010, 100011, 100004, 100009, 100014, 100016])
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	executeQuery(artist,0,101,all) -> [artist:100002,artist:100013,artist:100015,artist:100003,artist:100006,artist:100007,artist:100005,artist:100012,artist:100010,artist:100011,artist:100004,artist:100009,artist:100014,artist:100016] (db sort: ORDER BY name ASC USECASE)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "B.B. King" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Bjork" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Bob Dylan" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Count Basie" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elvis Costello" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Johnny Cash" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Beethoven" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653843	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Muddy Waters" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653859	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Sergei Rachmaninoff" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653859	/dynamusic/SongsRepository	getPropertyValue(artist:100011.name) -> "Shania Twain" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653859	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Beatles" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653859	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Cure" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653859	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Tim McGraw" (cached with no transaction)
**** debug	Thu Jun 21 12:24:13 IST 2012	1340261653859	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Toni Braxton" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717640	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=artist)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717640	/dynamusic/SongsRepository	 {{all}}
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717640	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717640	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717640	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717640	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717640	/dynamusic/SongsRepository	(no parameters)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717640	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717640	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	count: all, num = 14
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	(no parameters)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getItems(artist: [100002, 100013, 100015, 100003, 100006, 100007, 100005, 100012, 100010, 100011, 100004, 100009, 100014, 100016])
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	executeQuery(artist,0,101,all) -> [artist:100002,artist:100013,artist:100015,artist:100003,artist:100006,artist:100007,artist:100005,artist:100012,artist:100010,artist:100011,artist:100004,artist:100009,artist:100014,artist:100016] (db sort: ORDER BY name ASC USECASE)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "B.B. King" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Bjork" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Bob Dylan" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Count Basie" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elvis Costello" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Johnny Cash" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Beethoven" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Muddy Waters" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717656	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Sergei Rachmaninoff" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717671	/dynamusic/SongsRepository	getPropertyValue(artist:100011.name) -> "Shania Twain" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717671	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Beatles" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717671	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Cure" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717671	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Tim McGraw" (cached with no transaction)
**** debug	Thu Jun 21 12:25:17 IST 2012	1340261717671	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Toni Braxton" (cached with no transaction)
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480004	/dynamusic/SongsRepository	Setting invalidationAbsoluteName to /dynamusic/SongsRepository
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480020	/dynamusic/SongsRepository	SQL Repository starting up
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480036	/dynamusic/SongsRepository	parsing XML files: /dynamusic/songs.xml
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480098	/dynamusic/SongsRepository	XML parsing complete: /dynamusic/songs.xml
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480129	/dynamusic/SongsRepository	id generator is configured to autoCreate id spaces
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480129	/dynamusic/SongsRepository	Loading column infos at startup.
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480973	/dynamusic/SongsRepository	defaulting property: outerJoinSupport to value: sql92
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480973	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480973	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480973	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480973	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480973	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480973	/dynamusic/SongsRepository	p[1] = {pd} 100009 (java.lang.String)
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480973	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:20 IST 2012	1340264480973	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.description, For over 20 years, the Cure's ever-revolving lineup has served as a vehicle for the prolific genius of Robert Smith, one of the 1980s' most unlikely yet enduring rock stars...) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.photoURL, images/TheCure.jpg) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.name, The Cure) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481020	/dynamusic/SongsRepository	getItem(artist:100009) -> artist:100009 (retrieved item from database)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481067	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481067	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481067	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481067	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481067	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481067	/dynamusic/SongsRepository	p[1] = {pd} 100015 (java.lang.String)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481067	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481067	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481082	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.description, The most profoundly influential singer-songwriter of the rock era, Bob Dylan (b. Robert Allen Zimmerman, May 24, 1941, Duluth, Minnesota) has released over 45 albums since his...) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481098	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.photoURL, images/BobDylan.jpg) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481098	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.name, Bob Dylan) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481098	/dynamusic/SongsRepository	getItem(artist:100015) -> artist:100015 (retrieved item from database)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481114	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481114	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481114	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481114	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481114	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481114	/dynamusic/SongsRepository	p[1] = {pd} 100013 (java.lang.String)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481114	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481114	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481145	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.description, The one-time frontwoman of Iceland's intensely colorful, now-defunct Sugarcubes has often been depicted as a compulsively creative, impish sexpot, and while there...) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481145	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.photoURL, images/Bjork.jpg) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481145	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.name, Bjork) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481145	/dynamusic/SongsRepository	getItem(artist:100013) -> artist:100013 (retrieved item from database)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481176	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481176	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481176	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481176	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481176	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481176	/dynamusic/SongsRepository	p[1] = {pd} 100014 (java.lang.String)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481176	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481176	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481192	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.description, The most consistently successful male artist, in terms of overall chart success, to emerge from the country ranks during the past four years, Tim McGraw is the model modern star...) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481207	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.photoURL, images/TimMcGraw.gif) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481207	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.name, Tim McGraw) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481207	/dynamusic/SongsRepository	getItem(artist:100014) -> artist:100014 (retrieved item from database)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481223	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481223	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481223	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481223	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481223	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481223	/dynamusic/SongsRepository	p[1] = {pd} 100011 (java.lang.String)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481223	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481223	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481239	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.description, Although now ubiquituous in the world of country music, Shania Twain's first album, released in 1993, barely made...) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481254	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.photoURL, images/ShaniaTwain.jpg) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481254	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.name, Shania Twain) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481254	/dynamusic/SongsRepository	getItem(artist:100011) -> artist:100011 (retrieved item from database)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481286	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481286	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481286	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481286	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481286	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481286	/dynamusic/SongsRepository	p[1] = {pd} 100007 (java.lang.String)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481286	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481286	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481301	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.description, One of the towering figures of American music, Johhny Cash is part country singer, part folk hero.  Known as a prolific...) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481301	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.photoURL, images/JohnnyCash.jpg) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.name, Johnny Cash) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	getItem(artist:100007) -> artist:100007 (retrieved item from database)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	p[1] = {pd} 100002 (java.lang.String)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481317	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481348	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.description, His sweet, fluid, jazzy guitar style is legendary, but B.B. King's gospel-drenched singing would've been enough to make him...) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481348	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.photoURL, images/BBKing.jpg) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481348	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.name, B.B. King) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481364	/dynamusic/SongsRepository	getItem(artist:100002) -> artist:100002 (retrieved item from database)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481364	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481364	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481364	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481364	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481364	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481364	/dynamusic/SongsRepository	p[1] = {pd} 100016 (java.lang.String)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481364	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481364	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481395	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.description, Although barely out of her teens when her career began, Toni Braxton has always sounded far more mature than peers like Whitney Houston and Mariah Carey. Braxton admittedly has...) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481395	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.photoURL, images/ToniBraxton.jpg) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481395	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.name, Toni Braxton) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481395	/dynamusic/SongsRepository	getItem(artist:100016) -> artist:100016 (retrieved item from database)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481442	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481442	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481442	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481442	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481442	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481442	/dynamusic/SongsRepository	p[1] = {pd} 100006 (java.lang.String)
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481442	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481442	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481473	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.description, Dubbed "the most talented pop tunesmith of his generation" by the New York Times in 1982, Elvis Costello (b. Declan Patrick McManus, August 25, 1955, Paddington, London) was by...) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481473	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.photoURL, images/ElvisCostello.jpg) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481473	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.name, Elvis Costello) 
**** debug	Thu Jun 21 13:11:21 IST 2012	1340264481489	/dynamusic/SongsRepository	getItem(artist:100006) -> artist:100006 (retrieved item from database)
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516114	/dynamusic/SongsRepository	Setting invalidationAbsoluteName to /dynamusic/SongsRepository
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516114	/dynamusic/SongsRepository	SQL Repository starting up
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516129	/dynamusic/SongsRepository	parsing XML files: /dynamusic/songs.xml
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516192	/dynamusic/SongsRepository	XML parsing complete: /dynamusic/songs.xml
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516223	/dynamusic/SongsRepository	id generator is configured to autoCreate id spaces
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516223	/dynamusic/SongsRepository	Loading column infos at startup.
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516739	/dynamusic/SongsRepository	defaulting property: outerJoinSupport to value: sql92
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516739	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516739	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516739	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516739	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516739	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516739	/dynamusic/SongsRepository	p[1] = {pd} 100009 (java.lang.String)
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516739	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516739	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516770	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.description, For over 20 years, the Cure's ever-revolving lineup has served as a vehicle for the prolific genius of Robert Smith, one of the 1980s' most unlikely yet enduring rock stars...) 
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516770	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.photoURL, images/TheCure.jpg) 
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516786	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.name, The Cure) 
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516786	/dynamusic/SongsRepository	getItem(artist:100009) -> artist:100009 (retrieved item from database)
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516832	/dynamusic/SongsRepository	getItems(artist: [100009])
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516864	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516864	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516864	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516864	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516864	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516864	/dynamusic/SongsRepository	p[1] = {pd} 100015 (java.lang.String)
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516864	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516864	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516895	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.description, The most profoundly influential singer-songwriter of the rock era, Bob Dylan (b. Robert Allen Zimmerman, May 24, 1941, Duluth, Minnesota) has released over 45 albums since his...) 
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516895	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.photoURL, images/BobDylan.jpg) 
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516911	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.name, Bob Dylan) 
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516911	/dynamusic/SongsRepository	getItem(artist:100015) -> artist:100015 (retrieved item from database)
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516911	/dynamusic/SongsRepository	getItems(artist: [100015])
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516926	/dynamusic/SongsRepository	getItems(artist: [100009])
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516942	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516942	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516942	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516942	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516942	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516942	/dynamusic/SongsRepository	p[1] = {pd} 100013 (java.lang.String)
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516942	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516942	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516973	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.description, The one-time frontwoman of Iceland's intensely colorful, now-defunct Sugarcubes has often been depicted as a compulsively creative, impish sexpot, and while there...) 
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516973	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.photoURL, images/Bjork.jpg) 
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516989	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.name, Bjork) 
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516989	/dynamusic/SongsRepository	getItem(artist:100013) -> artist:100013 (retrieved item from database)
**** debug	Thu Jun 21 13:11:56 IST 2012	1340264516989	/dynamusic/SongsRepository	getItems(artist: [100013])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517004	/dynamusic/SongsRepository	getItems(artist: [100013])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517020	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517020	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517020	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517020	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517020	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517020	/dynamusic/SongsRepository	p[1] = {pd} 100014 (java.lang.String)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517020	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517020	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.description, The most consistently successful male artist, in terms of overall chart success, to emerge from the country ranks during the past four years, Tim McGraw is the model modern star...) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.photoURL, images/TimMcGraw.gif) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.name, Tim McGraw) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517067	/dynamusic/SongsRepository	getItem(artist:100014) -> artist:100014 (retrieved item from database)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517067	/dynamusic/SongsRepository	getItems(artist: [100014])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517082	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517082	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517082	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517082	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517082	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517082	/dynamusic/SongsRepository	p[1] = {pd} 100011 (java.lang.String)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517082	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517082	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517114	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.description, Although now ubiquituous in the world of country music, Shania Twain's first album, released in 1993, barely made...) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517114	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.photoURL, images/ShaniaTwain.jpg) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517129	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.name, Shania Twain) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517129	/dynamusic/SongsRepository	getItem(artist:100011) -> artist:100011 (retrieved item from database)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517145	/dynamusic/SongsRepository	getItems(artist: [100011])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517145	/dynamusic/SongsRepository	getItems(artist: [100009])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517161	/dynamusic/SongsRepository	getItems(artist: [100014, 100011])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517176	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517176	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517176	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517176	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517176	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517176	/dynamusic/SongsRepository	p[1] = {pd} 100007 (java.lang.String)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517176	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517176	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517207	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.description, One of the towering figures of American music, Johhny Cash is part country singer, part folk hero.  Known as a prolific...) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517207	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.photoURL, images/JohnnyCash.jpg) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517223	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.name, Johnny Cash) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517223	/dynamusic/SongsRepository	getItem(artist:100007) -> artist:100007 (retrieved item from database)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517223	/dynamusic/SongsRepository	getItems(artist: [100007])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517239	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517239	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517239	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517239	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517239	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517239	/dynamusic/SongsRepository	p[1] = {pd} 100002 (java.lang.String)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517239	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517239	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517270	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.description, His sweet, fluid, jazzy guitar style is legendary, but B.B. King's gospel-drenched singing would've been enough to make him...) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517270	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.photoURL, images/BBKing.jpg) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517286	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.name, B.B. King) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517286	/dynamusic/SongsRepository	getItem(artist:100002) -> artist:100002 (retrieved item from database)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517286	/dynamusic/SongsRepository	getItems(artist: [100002])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517301	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517301	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517301	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517301	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517301	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517301	/dynamusic/SongsRepository	p[1] = {pd} 100016 (java.lang.String)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517301	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517301	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517332	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.description, Although barely out of her teens when her career began, Toni Braxton has always sounded far more mature than peers like Whitney Houston and Mariah Carey. Braxton admittedly has...) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517348	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.photoURL, images/ToniBraxton.jpg) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517348	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.name, Toni Braxton) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517348	/dynamusic/SongsRepository	getItem(artist:100016) -> artist:100016 (retrieved item from database)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517364	/dynamusic/SongsRepository	getItems(artist: [100016])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517364	/dynamusic/SongsRepository	getItems(artist: [100015])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517379	/dynamusic/SongsRepository	getItems(artist: [100014])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517395	/dynamusic/SongsRepository	getItems(artist: [100002])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517411	/dynamusic/SongsRepository	getItems(artist: [100016])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517411	/dynamusic/SongsRepository	getItems(artist: [100007])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517426	/dynamusic/SongsRepository	getItems(artist: [100014])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517442	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517442	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517442	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517442	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517442	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517442	/dynamusic/SongsRepository	p[1] = {pd} 100006 (java.lang.String)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517442	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517442	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517473	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.description, Dubbed "the most talented pop tunesmith of his generation" by the New York Times in 1982, Elvis Costello (b. Declan Patrick McManus, August 25, 1955, Paddington, London) was by...) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517473	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.photoURL, images/ElvisCostello.jpg) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517489	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.name, Elvis Costello) 
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517489	/dynamusic/SongsRepository	getItem(artist:100006) -> artist:100006 (retrieved item from database)
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517489	/dynamusic/SongsRepository	getItems(artist: [100016, 100002, 100013, 100015, 100006])
**** debug	Thu Jun 21 13:11:57 IST 2012	1340264517520	/dynamusic/SongsRepository	getItems(artist: [100002])
**** debug	Thu Jun 21 15:23:24 IST 2012	1340272404598	/dynamusic/SongsRepository	Setting invalidationAbsoluteName to /dynamusic/SongsRepository
**** debug	Thu Jun 21 15:23:24 IST 2012	1340272404598	/dynamusic/SongsRepository	SQL Repository starting up
**** debug	Thu Jun 21 15:23:24 IST 2012	1340272404598	/dynamusic/SongsRepository	parsing XML files: /dynamusic/songs.xml
**** debug	Thu Jun 21 15:23:24 IST 2012	1340272404645	/dynamusic/SongsRepository	XML parsing complete: /dynamusic/songs.xml
**** debug	Thu Jun 21 15:23:24 IST 2012	1340272404707	/dynamusic/SongsRepository	id generator is configured to autoCreate id spaces
**** debug	Thu Jun 21 15:23:24 IST 2012	1340272404707	/dynamusic/SongsRepository	Loading column infos at startup.
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/FeaturedSongs	getSongs called for first time -- loading featured song titles now.
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	defaulting property: outerJoinSupport to value: sql92
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	p[1] = {pd} 200023 (java.lang.String)
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.description, __NULL__) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.title, I'll Survive ) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.genre, blues) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	p[1] = {pd} 100002 (java.lang.String)
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430942	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430957	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.description, His sweet, fluid, jazzy guitar style is legendary, but B.B. King's gospel-drenched singing would've been enough to make him...) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430957	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.photoURL, images/BBKing.jpg) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430957	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.name, B.B. King) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430957	/dynamusic/SongsRepository	getItem(artist:100002) -> artist:100002 (retrieved item from database)
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430973	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.artist, 100002) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430973	/dynamusic/SongsRepository	getItem(song:200023) -> song:200023 (retrieved item from database)
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430973	/dynamusic/SongsRepository	getPropertyValue(song:200023.title) -> "I'll Survive " (cached with no transaction)
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	p[1] = {pd} 200036 (java.lang.String)
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.description, __NULL__) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.title, April in Paris) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.genre, jazz) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.downloadURL, __NULL__) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	p[1] = {pd} 100003 (java.lang.String)
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.description, In a genre dominated by effusive virtuosity, Count Basie carved out a distinctive niche for himself as a jazz minimalist, and over the course of...) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.photoURL, images/CountBasie.jpg) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.name, Count Basie) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	getItem(artist:100003) -> artist:100003 (retrieved item from database)
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.artist, 100003) 
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	getItem(song:200036) -> song:200036 (retrieved item from database)
**** debug	Thu Jun 21 15:23:50 IST 2012	1340272430989	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "April in Paris" (cached with no transaction)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	p[1] = {pd} 200064 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.description, __NULL__) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.title, Let It Be) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.genre, pop) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	p[1] = {pd} 100004 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.description, In 1964, the Beatles appeared on the Ed Sullivan show and the world of music has never been the same.  The 'Fab Four' ...) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.photoURL, images/TheBeatles.jpg) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.name, The Beatles) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	getItem(artist:100004) -> artist:100004 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.artist, 100004) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431004	/dynamusic/SongsRepository	getItem(song:200064) -> song:200064 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	getPropertyValue(song:200064.title) -> "Let It Be" (cached with no transaction)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	p[1] = {pd} 205201 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431020	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.description, __NULL__) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.title, Folsom Prison Blues) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.genre, country) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	p[1] = {pd} 100007 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.description, One of the towering figures of American music, Johhny Cash is part country singer, part folk hero.  Known as a prolific...) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.photoURL, images/JohnnyCash.jpg) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.name, Johnny Cash) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	getItem(artist:100007) -> artist:100007 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.artist, 100007) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	getItem(song:205201) -> song:205201 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	getPropertyValue(song:205201.title) -> "Folsom Prison Blues" (cached with no transaction)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	p[1] = {pd} 208204 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.description, __NULL__) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.title, From This Moment On) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.genre, country) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	p[1] = {pd} 100011 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431036	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.description, Although now ubiquituous in the world of country music, Shania Twain's first album, released in 1993, barely made...) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.photoURL, images/ShaniaTwain.jpg) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.name, Shania Twain) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	getItem(artist:100011) -> artist:100011 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.artist, 100011) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	getItem(song:208204) -> song:208204 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	getPropertyValue(song:208204.title) -> "From This Moment On" (cached with no transaction)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	p[1] = {pd} 204101 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.description, __NULL__) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.title, Allison) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.genre, pop) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.name
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	p[1] = {pd} 100006 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.description, Dubbed "the most talented pop tunesmith of his generation" by the New York Times in 1982, Elvis Costello (b. Declan Patrick McManus, August 25, 1955, Paddington, London) was by...) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.photoURL, images/ElvisCostello.jpg) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.name, Elvis Costello) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	getItem(artist:100006) -> artist:100006 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.artist, 100006) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431051	/dynamusic/SongsRepository	getItem(song:204101) -> song:204101 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	getPropertyValue(song:204101.title) -> "Allison" (cached with no transaction)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	p[1] = {pd} 200034 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.description, __NULL__) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.title, Didn't You?) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.genre, jazz) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.artist, 100003) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	getItem(song:200034) -> song:200034 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You?" (cached with no transaction)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	p[1] = {pd} 205302 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.description, __NULL__) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.title, It Ain't Me Babe) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.genre, country) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.artist, 100007) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431067	/dynamusic/SongsRepository	getItem(song:205302) -> song:205302 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	getPropertyValue(song:205302.title) -> "It Ain't Me Babe" (cached with no transaction)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	-- Parameters --
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	p[1] = {pd} 200072 (java.lang.String)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.description, __NULL__) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.title, Something) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.genre, pop) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.downloadURL, media/dummy.mp3) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.artist, 100004) 
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	getItem(song:200072) -> song:200072 (retrieved item from database)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/SongsRepository	getPropertyValue(song:200072.title) -> "Something" (cached with no transaction)
**** debug	Thu Jun 21 15:23:51 IST 2012	1340272431082	/dynamusic/FeaturedSongs	getSongs called, returning 4 song titles.
**** debug	Thu Jun 21 15:24:04 IST 2012	1340272444082	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	adding form exception: atg.droplet.DropletException: name is not supplied or is small
**** debug	Thu Jun 21 15:24:04 IST 2012	1340272444082	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 15:24:04 IST 2012	1340272444082	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	adding form exception: atg.droplet.DropletException: please select your gender
**** debug	Thu Jun 21 15:24:04 IST 2012	1340272444082	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 15:24:04 IST 2012	1340272444082	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	adding form exception: atg.droplet.DropletException: age is not a valid number
**** debug	Thu Jun 21 15:24:04 IST 2012	1340272444082	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 15:24:04 IST 2012	1340272444082	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	adding form exception: atg.droplet.DropletException: age is not in the range our club is exp[ecting
**** debug	Thu Jun 21 15:24:04 IST 2012	1340272444082	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 15:24:17 IST 2012	1340272457176	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	adding form exception: atg.droplet.DropletException: please select your gender
**** debug	Thu Jun 21 15:24:17 IST 2012	1340272457176	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 15:24:17 IST 2012	1340272457176	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	adding form exception: atg.droplet.DropletException: age is not a valid number
**** debug	Thu Jun 21 15:24:17 IST 2012	1340272457176	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 15:24:17 IST 2012	1340272457176	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	adding form exception: atg.droplet.DropletException: age is not in the range our club is exp[ecting
**** debug	Thu Jun 21 15:24:17 IST 2012	1340272457176	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 15:24:20 IST 2012	1340272460301	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-5/dynamusic/null	adding form exception: atg.droplet.DropletException: age is not a valid number
**** debug	Thu Jun 21 15:24:20 IST 2012	1340272460301	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-5/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 15:24:20 IST 2012	1340272460301	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-5/dynamusic/null	adding form exception: atg.droplet.DropletException: age is not in the range our club is exp[ecting
**** debug	Thu Jun 21 15:24:20 IST 2012	1340272460301	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-5/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 15:24:24 IST 2012	1340272464067	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	adding form exception: atg.droplet.DropletException: age is not in the range our club is exp[ecting
**** debug	Thu Jun 21 15:24:24 IST 2012	1340272464082	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	root cause of exception: null
**** debug	Thu Jun 21 16:21:38 IST 2012	1340275898734	/dynamusic/SongsRepository	Setting invalidationAbsoluteName to /dynamusic/SongsRepository
**** debug	Thu Jun 21 16:21:38 IST 2012	1340275898750	/dynamusic/SongsRepository	SQL Repository starting up
**** debug	Thu Jun 21 16:21:38 IST 2012	1340275898750	/dynamusic/SongsRepository	parsing XML files: /dynamusic/songs.xml
**** debug	Thu Jun 21 16:21:38 IST 2012	1340275898890	/dynamusic/SongsRepository	XML parsing complete: /dynamusic/songs.xml
**** debug	Thu Jun 21 16:21:38 IST 2012	1340275898953	/dynamusic/SongsRepository	id generator is configured to autoCreate id spaces
**** debug	Thu Jun 21 16:21:38 IST 2012	1340275898953	/dynamusic/SongsRepository	Loading column infos at startup.
**** debug	Fri Jun 22 10:28:30 IST 2012	1340341110093	/dynamusic/FeaturedSongs	getSongs called, returning [Ljava.lang.String;@e8b8
**** debug	Fri Jun 22 10:31:58 IST 2012	1340341318359	/dynamusic/FeaturedSongs	getSongs called, returning [Ljava.lang.String;@e8b8
**** debug	Fri Jun 22 11:06:24 IST 2012	1340343384359	/dynamusic/FeaturedSongs	getSongs called, returning [Ljava.lang.String;@1351429
**** debug	Fri Jun 22 11:06:56 IST 2012	1340343416171	/dynamusic/FeaturedSongs	getSongs method called,  returning  a list of [Ljava.lang.String;@1351429
**** debug	Fri Jun 22 12:07:48 IST 2012	1340347068250	/dynamusic/SongsManager	inside deleting albums by artist id 119900
**** debug	Fri Jun 22 12:08:04 IST 2012	1340347084453	/dynamusic/SongsManager	are albums available for the artist?  null
**** debug	Fri Jun 22 12:10:09 IST 2012	1340347209312	/dynamusic/FeaturedSongs	getSongs method called,  returning  a list of [Ljava.lang.String;@1351429
**** debug	Fri Jun 22 12:10:28 IST 2012	1340347228687	/dynamusic/SongsManager	inside deleting albums by artist id 100009
**** debug	Fri Jun 22 12:10:37 IST 2012	1340347237296	/dynamusic/SongsManager	are albums available for the artist?  [Latg.adapter.gsa.GSAItem;@12ffbc
**** debug	Fri Jun 22 12:10:47 IST 2012	1340347247562	/dynamusic/SongsManager	deleting album City Life
**** debug	Fri Jun 22 12:10:54 IST 2012	1340347254625	/dynamusic/SongsManager	deleting album On This Island
**** debug	Fri Jun 22 12:10:58 IST 2012	1340347258265	/dynamusic/SongsManager	deleting album Goodbye Tourists
**** debug	Fri Jun 22 12:44:26 IST 2012	1340349266906	/dynamusic/FeaturedSongs	getSongs method called,  returning  a list of [Ljava.lang.String;@1351429
**** debug	Fri Jun 22 12:45:01 IST 2012	1340349301984	/dynamusic/SongsManager	inside deleting albums by artist id 100004
**** debug	Fri Jun 22 12:45:34 IST 2012	1340349334250	/dynamusic/SongsManager	are albums available for the artist?  [Latg.adapter.gsa.GSAItem;@fd333b
**** debug	Fri Jun 22 12:45:37 IST 2012	1340349337718	/dynamusic/SongsManager	deleting album Roadside Attraction
**** debug	Fri Jun 22 12:45:57 IST 2012	1340349357562	/dynamusic/SongsManager	deleting album Presenting The Brighton Bramblers
**** debug	Fri Jun 22 12:46:05 IST 2012	1340349365593	/dynamusic/SongsManager	deleting album The Red And The Black
**** debug	Fri Jun 22 12:56:13 IST 2012	1340349973937	/dynamusic/SongsManager	inside deleting albums by artist id 100010
**** debug	Fri Jun 22 12:56:16 IST 2012	1340349976281	/dynamusic/SongsManager	are albums available for the artist?  [Latg.adapter.gsa.GSAItem;@14be70b
**** debug	Fri Jun 22 12:56:17 IST 2012	1340349977281	/dynamusic/SongsManager	deleting album Concerto No. 2
**** debug	Fri Jun 22 12:56:25 IST 2012	1340349985453	/dynamusic/SongsManager	deleting album Piano Sonatas
**** debug	Fri Jun 22 13:10:02 IST 2012	1340350802156	/dynamusic/SongsManager	inside deleting albums by artist id 100009
**** debug	Fri Jun 22 13:10:06 IST 2012	1340350806687	/dynamusic/SongsManager	are albums available for the artist?  null
**** debug	Fri Jun 22 13:10:34 IST 2012	1340350834062	/dynamusic/SongsManager	inside deleting albums by artist id 100011
**** debug	Fri Jun 22 13:10:40 IST 2012	1340350840406	/dynamusic/SongsManager	are albums available for the artist?  [Latg.adapter.gsa.GSAItem;@1a4afc3
**** debug	Fri Jun 22 13:10:41 IST 2012	1340350841343	/dynamusic/SongsManager	deleting album The Charlie Grassfield Songbook
**** debug	Fri Jun 22 13:10:42 IST 2012	1340350842906	/dynamusic/SongsManager	deleting album Summer
**** debug	Fri Jun 22 13:10:46 IST 2012	1340350846234	/dynamusic/SongsManager	deleting album Women and Men
**** debug	Fri Jun 22 13:14:55 IST 2012	1340351095828	/dynamusic/SongsManager	inside deleting albums by artist id 100002
**** debug	Fri Jun 22 13:14:55 IST 2012	1340351095890	/dynamusic/SongsManager	are albums available for the artist?  [Latg.adapter.gsa.GSAItem;@e67e68
**** debug	Fri Jun 22 13:14:55 IST 2012	1340351095890	/dynamusic/SongsManager	deleting album Live In Paris
**** debug	Fri Jun 22 13:14:55 IST 2012	1340351095937	/dynamusic/SongsManager	deleting album Rainy Sunday
**** debug	Fri Jun 22 13:14:56 IST 2012	1340351096000	/dynamusic/SongsManager	deleting album Honey Bee
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488359	/dynamusic/SongsRepository	setPropertyValue(artist:100006.description,Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ...)
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488359	/dynamusic/SongsRepository	setPropertyValue(artist:100006.name,Elwin Redshoes)
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488359	/dynamusic/SongsRepository	setPropertyValue(artist:100006.photoURL,images/ElwinRedshoes.jpg)
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	[++SQLUpdate++]
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	 UPDATE dynamusic_artist
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	    SET name=?,description=?,image=?
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	  WHERE id=?
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	p[1] = {pd: name} Elwin Redshoes (java.lang.String)
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	p[2] = {pd: description} Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ... (java.lang.String)
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	p[3] = {pd: photoURL} images/ElwinRedshoes.jpg (java.lang.String)
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	p[4] = {pd} 100006 (java.lang.String)
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	[--SQLUpdate--]
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488375	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=artist:100006, type=0, props={
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	{name,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=name
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=Elwin Redshoes, 
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	{photoURL,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=image
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=images/ElwinRedshoes.jpg, 
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	{description,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=description
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ...})
**** debug	Fri Jun 22 13:21:28 IST 2012	1340351488390	/dynamusic/SongsRepository	updateItem(artist:100006) (changes applied: {name=Elwin Redshoes,photoURL=images/ElwinRedshoes.jpg,description=Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ...})
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543765	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543765	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543765	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543765	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543765	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543765	/dynamusic/SongsRepository	(no parameters)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543765	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543765	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543781	/dynamusic/SongsRepository	getItems(artist: [100003, 100007, 100006, 100013, 100016, 100005, 100012, 100014, 100015])
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543781	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100003,artist:100007,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100014,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543796	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543796	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543812	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543812	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543812	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543812	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543812	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543812	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543812	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543812	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543828	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543828	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543828	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543828	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543828	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543828	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543828	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Fri Jun 22 13:22:23 IST 2012	1340351543828	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545500	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545515	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545515	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545515	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ..." (cached with no transaction)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545515	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545531	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545531	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545531	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist t2
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545531	/dynamusic/SongsRepository	  WHERE t2.id=t1.artist
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545531	/dynamusic/SongsRepository	    AND (t2.id = ?)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545531	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545531	/dynamusic/SongsRepository	p[1] = {pd: id} 100007 (java.lang.String)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545531	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545531	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	getItems(album: [300051, 300052, 300053])
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	getPersistentItems(album:[300051, 300052, 300053])
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.cover,t1.artist,t1.published,t1.title
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	p[1] = {pd} 300051 (java.lang.String)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	p[2] = {pd} 300052 (java.lang.String)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	p[3] = {pd} 300053 (java.lang.String)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545546	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545562	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.description, The Man From Texas, which draws on Grassfield's original songs as well as those by ...) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545562	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.coverURL, images/TheManFromTexas.jpg) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545593	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.date, 3/4/2003 10:53:16) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545593	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.title, The Man From Texas) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545593	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.description, Charlie Grassfield had been breaking new ground for a decade when Runaway Train suddenly made the world at large take notice. ...) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545593	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.coverURL, images/RunawayTrain.jpg) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545593	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.date, 2/2/1968 10:53:16) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545593	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.title, Runaway Train) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545593	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.description, Perhaps this should have been titled The Freewheelin' Charlie Grassfield in homage to the watershed ...) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545609	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.coverURL, images/WelcomeToTheNewWorld.jpg) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545609	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.date, 6/6/1965 10:53:16) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545609	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.title, Welcome To The New World) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545609	/dynamusic/SongsRepository	getItems(artist: [100007, 100007, 100007])
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.artist, 100007) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.artist, 100007) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.artist, 100007) 
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545750	/dynamusic/SongsRepository	executeQuery(album,0,3,artist.id = ?) -> [album:300051,album:300052,album:300053] (unsorted)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545765	/dynamusic/SongsRepository	getPropertyValue(album:300051.id) -> "300051" (id property)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545765	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545765	/dynamusic/SongsRepository	getPropertyValue(album:300052.id) -> "300052" (id property)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545765	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545765	/dynamusic/SongsRepository	getPropertyValue(album:300053.id) -> "300053" (id property)
**** debug	Fri Jun 22 13:22:25 IST 2012	1340351545765	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Fri Jun 22 13:22:27 IST 2012	1340351547671	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:22:27 IST 2012	1340351547671	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:22:27 IST 2012	1340351547671	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ..." (cached with no transaction)
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557921	/dynamusic/SongsRepository	setPropertyValue(artist:100007.description,One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################)
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557921	/dynamusic/SongsRepository	setPropertyValue(artist:100007.name,Charlie Grassfield)
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557921	/dynamusic/SongsRepository	setPropertyValue(artist:100007.photoURL,images/CharlieGrassfield.jpg)
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	[++SQLUpdate++]
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	 UPDATE dynamusic_artist
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	    SET name=?,description=?,image=?
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	  WHERE id=?
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	p[1] = {pd: name} Charlie Grassfield (java.lang.String)
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	p[2] = {pd: description} One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...###################### (java.lang.String)
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	p[3] = {pd: photoURL} images/CharlieGrassfield.jpg (java.lang.String)
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	p[4] = {pd} 100007 (java.lang.String)
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	[--SQLUpdate--]
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557937	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=artist:100007, type=0, props={
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	{name,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=name
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=Charlie Grassfield, 
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	{photoURL,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=image
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=images/CharlieGrassfield.jpg, 
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	{description,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=description
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################})
**** debug	Fri Jun 22 13:22:37 IST 2012	1340351557953	/dynamusic/SongsRepository	updateItem(artist:100007) (changes applied: {name=Charlie Grassfield,photoURL=images/CharlieGrassfield.jpg,description=One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################})
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561125	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561125	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561125	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561125	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561125	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561125	/dynamusic/SongsRepository	(no parameters)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561125	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561125	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561140	/dynamusic/SongsRepository	getItems(artist: [100003, 100007, 100006, 100013, 100016, 100005, 100012, 100014, 100015])
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561140	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100003,artist:100007,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100014,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561156	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561156	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561156	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561156	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561156	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561156	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561171	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561171	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561171	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561171	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561171	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561171	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561171	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561171	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561187	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561187	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561187	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Fri Jun 22 13:22:41 IST 2012	1340351561187	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562656	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562656	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562671	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562671	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################" (cached with no transaction)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562671	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist t2
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	  WHERE t2.id=t1.artist
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	    AND (t2.id = ?)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	p[1] = {pd: id} 100007 (java.lang.String)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	getItems(album: [300051, 300052, 300053])
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562687	/dynamusic/SongsRepository	executeQuery(album,0,3,artist.id = ?) -> [album:300051,album:300052,album:300053] (unsorted)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562703	/dynamusic/SongsRepository	getPropertyValue(album:300051.id) -> "300051" (id property)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562703	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562718	/dynamusic/SongsRepository	getPropertyValue(album:300052.id) -> "300052" (id property)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562718	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562718	/dynamusic/SongsRepository	getPropertyValue(album:300053.id) -> "300053" (id property)
**** debug	Fri Jun 22 13:22:42 IST 2012	1340351562718	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596312	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596312	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596312	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596312	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596312	/dynamusic/SongsRepository	(no parameters)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596312	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596328	/dynamusic/SongsRepository	getItems(artist: [100003, 100007, 100006, 100013, 100016, 100005, 100012, 100014, 100015])
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596328	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100003,artist:100007,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100014,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596359	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596375	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596375	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596375	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596375	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Fri Jun 22 13:23:16 IST 2012	1340351596375	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599343	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599343	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599343	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599343	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################" (cached with no transaction)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599343	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist t2
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	  WHERE t2.id=t1.artist
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	    AND (t2.id = ?)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	p[1] = {pd: id} 100007 (java.lang.String)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599359	/dynamusic/SongsRepository	getItems(album: [300051, 300052, 300053])
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599375	/dynamusic/SongsRepository	executeQuery(album,0,3,artist.id = ?) -> [album:300051,album:300052,album:300053] (unsorted)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599375	/dynamusic/SongsRepository	getPropertyValue(album:300051.id) -> "300051" (id property)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599375	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599375	/dynamusic/SongsRepository	getPropertyValue(album:300052.id) -> "300052" (id property)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599375	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599375	/dynamusic/SongsRepository	getPropertyValue(album:300053.id) -> "300053" (id property)
**** debug	Fri Jun 22 13:23:19 IST 2012	1340351599375	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Fri Jun 22 13:23:27 IST 2012	1340351607140	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:23:27 IST 2012	1340351607140	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:23:27 IST 2012	1340351607140	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################" (cached with no transaction)
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632546	/dynamusic/SongsRepository	setPropertyValue(artist:100007.description,One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################)
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	setPropertyValue(artist:100007.name,Charlie Grassfield)
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	setPropertyValue(artist:100007.photoURL,images/CharlieGrassfield.jpg)
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	[++SQLUpdate++]
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	 UPDATE dynamusic_artist
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	    SET name=?,description=?,image=?
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	  WHERE id=?
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	p[1] = {pd: name} Charlie Grassfield (java.lang.String)
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	p[2] = {pd: description} One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...###################### (java.lang.String)
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	p[3] = {pd: photoURL} images/CharlieGrassfield.jpg (java.lang.String)
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	p[4] = {pd} 100007 (java.lang.String)
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	[--SQLUpdate--]
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632562	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=artist:100007, type=0, props={
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	{name,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=name
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=Charlie Grassfield, 
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	{photoURL,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=image
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=images/CharlieGrassfield.jpg, 
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	{description,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=description
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632578	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################})
**** debug	Fri Jun 22 13:23:52 IST 2012	1340351632593	/dynamusic/SongsRepository	updateItem(artist:100007) (changes applied: {name=Charlie Grassfield,photoURL=images/CharlieGrassfield.jpg,description=One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################})
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654421	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654421	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654421	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654421	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654421	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654421	/dynamusic/SongsRepository	(no parameters)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654421	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654421	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654437	/dynamusic/SongsRepository	getItems(artist: [100003, 100007, 100006, 100013, 100016, 100005, 100012, 100014, 100015])
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654437	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100003,artist:100007,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100014,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654437	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Fri Jun 22 13:24:14 IST 2012	1340351654453	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Fri Jun 22 13:25:40 IST 2012	1340351740578	/dynamusic/FeaturedSongs	getSongs method called,  returning  a list of [Ljava.lang.String;@1351429
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742437	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742437	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742437	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742437	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742437	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742437	/dynamusic/SongsRepository	(no parameters)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742437	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742437	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742453	/dynamusic/SongsRepository	getItems(artist: [100003, 100007, 100006, 100013, 100016, 100005, 100012, 100014, 100015])
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742453	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100003,artist:100007,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100014,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742453	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742453	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Fri Jun 22 13:25:42 IST 2012	1340351742468	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743703	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743718	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743718	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743718	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################" (cached with no transaction)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743718	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist t2
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	  WHERE t2.id=t1.artist
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	    AND (t2.id = ?)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	p[1] = {pd: id} 100007 (java.lang.String)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	getItems(album: [300051, 300052, 300053])
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743750	/dynamusic/SongsRepository	executeQuery(album,0,3,artist.id = ?) -> [album:300051,album:300052,album:300053] (unsorted)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743781	/dynamusic/SongsRepository	getPropertyValue(album:300051.id) -> "300051" (id property)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743781	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743781	/dynamusic/SongsRepository	getPropertyValue(album:300052.id) -> "300052" (id property)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743781	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743781	/dynamusic/SongsRepository	getPropertyValue(album:300053.id) -> "300053" (id property)
**** debug	Fri Jun 22 13:25:43 IST 2012	1340351743781	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Fri Jun 22 13:25:59 IST 2012	1340351759000	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:25:59 IST 2012	1340351759000	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:25:59 IST 2012	1340351759000	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################" (cached with no transaction)
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770437	/dynamusic/SongsRepository	setPropertyValue(artist:100007.description,One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################@@@@@@@@@@@@@)
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770437	/dynamusic/SongsRepository	setPropertyValue(artist:100007.name,Charlie Grassfield)
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770437	/dynamusic/SongsRepository	setPropertyValue(artist:100007.photoURL,images/CharlieGrassfield.jpg)
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	[++SQLUpdate++]
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	 UPDATE dynamusic_artist
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	    SET name=?,description=?,image=?
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	  WHERE id=?
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	p[1] = {pd: name} Charlie Grassfield (java.lang.String)
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	p[2] = {pd: description} One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################@@@@@@@@@@@@@ (java.lang.String)
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	p[3] = {pd: photoURL} images/CharlieGrassfield.jpg (java.lang.String)
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	p[4] = {pd} 100007 (java.lang.String)
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	[--SQLUpdate--]
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=artist:100007, type=0, props={
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	{name,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=name
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=Charlie Grassfield, 
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	{photoURL,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=image
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=images/CharlieGrassfield.jpg, 
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	{description,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=description
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################@@@@@@@@@@@@@})
**** debug	Fri Jun 22 13:26:10 IST 2012	1340351770453	/dynamusic/SongsRepository	updateItem(artist:100007) (changes applied: {name=Charlie Grassfield,photoURL=images/CharlieGrassfield.jpg,description=One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################@@@@@@@@@@@@@})
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	(no parameters)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	getItems(artist: [100003, 100007, 100006, 100013, 100016, 100005, 100012, 100014, 100015])
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833453	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100003,artist:100007,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100014,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Fri Jun 22 13:27:13 IST 2012	1340351833468	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834625	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834625	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834640	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834640	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################@@@@@@@@@@@@@" (cached with no transaction)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834640	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834656	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834656	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834656	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist t2
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834656	/dynamusic/SongsRepository	  WHERE t2.id=t1.artist
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834656	/dynamusic/SongsRepository	    AND (t2.id = ?)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834656	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834656	/dynamusic/SongsRepository	p[1] = {pd: id} 100007 (java.lang.String)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834656	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834656	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834671	/dynamusic/SongsRepository	getItems(album: [300051, 300052, 300053])
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834671	/dynamusic/SongsRepository	executeQuery(album,0,3,artist.id = ?) -> [album:300051,album:300052,album:300053] (unsorted)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834687	/dynamusic/SongsRepository	getPropertyValue(album:300051.id) -> "300051" (id property)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834687	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834687	/dynamusic/SongsRepository	getPropertyValue(album:300052.id) -> "300052" (id property)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834687	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834687	/dynamusic/SongsRepository	getPropertyValue(album:300053.id) -> "300053" (id property)
**** debug	Fri Jun 22 13:27:14 IST 2012	1340351834687	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Fri Jun 22 13:27:20 IST 2012	1340351840656	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:27:20 IST 2012	1340351840656	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:27:20 IST 2012	1340351840656	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################@@@@@@@@@@@@@" (cached with no transaction)
**** debug	Fri Jun 22 13:27:20 IST 2012	1340351840687	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Fri Jun 22 13:27:20 IST 2012	1340351840687	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:27:20 IST 2012	1340351840687	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...######################@@@@@@@@@@@@@" (cached with no transaction)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsManager	inside deleting albums by artist id 100007
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist t2
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsRepository	  WHERE t2.id=t1.artist
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsRepository	    AND (t2.id = ?)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsRepository	p[1] = {pd: id} 100007 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844718	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	getItems(album: [300051, 300052, 300053])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	executeQuery(album,0,3,artist.id = ?) -> [album:300051,album:300052,album:300053] (unsorted)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsManager	are albums available for the artist?  [Latg.adapter.gsa.GSAItem;@1cdfb66
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsManager	deleting album The Man From Texas
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	removeItem(album:300051)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	p[1] = {pd} 300051 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	getItems(song: [205101, 205103, 205102])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	getPersistentItems(song:[205101, 205103, 205102])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	p[1] = {pd} 205101 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	p[2] = {pd} 205103 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	p[3] = {pd} 205102 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844734	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.description, __NULL__) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.title, The Man Comes To Town) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.genre, country) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.downloadURL, media/dummy.mp3) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.description, __NULL__) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.title, Hurt you) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.genre, country) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.downloadURL, media/dummy.mp3) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.description, __NULL__) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.title, Streets of San Antonio) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.genre, country) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.downloadURL, media/dummy.mp3) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	getItems(artist: [100007, 100007, 100007])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.artist, 100007) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.artist, 100007) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844750	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.artist, 100007) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.songList, 205103,205101,205102) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	getPropertyValue(album:300051.songList) -> "205103,205101,205102" (value from database)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=album:300051, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	 DELETE FROM dynamusic_album_songs
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	       WHERE album_id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	p[1] = {pd} 300051 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	removeItem(song:205103)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205103, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	 DELETE FROM dynamusic_song
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	p[1] = {pd: id} 205103 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844812	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205103, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	removeItem(song:205101)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205101, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	 DELETE FROM dynamusic_song
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	p[1] = {pd: id} 205101 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205101, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	removeItem(song:205102)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205102, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	 DELETE FROM dynamusic_song
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	p[1] = {pd: id} 205102 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205102, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	 DELETE FROM dynamusic_album
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	p[1] = {pd: id} 300051 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844828	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=album:300051, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsManager	deleting album Runaway Train
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	removeItem(album:300052)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	p[1] = {pd} 300052 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	getItems(song: [205201, 205202, 205203])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	getPersistentItems(song:[205201, 205202, 205203])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	p[1] = {pd} 205201 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	p[2] = {pd} 205202 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	p[3] = {pd} 205203 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.description, __NULL__) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.title, Prison Blues) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.genre, country) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.downloadURL, media/dummy.mp3) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.description, __NULL__) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.title, The Tall Trees) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.genre, country) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.downloadURL, media/dummy.mp3) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.description, __NULL__) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.title, Fields of Home) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.genre, country) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.downloadURL, media/dummy.mp3) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	getItems(artist: [100007, 100007, 100007])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.artist, 100007) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.artist, 100007) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.artist, 100007) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.songList, 205202,205203,205201) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	getPropertyValue(album:300052.songList) -> "205202,205203,205201" (value from database)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=album:300052, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	 DELETE FROM dynamusic_album_songs
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	       WHERE album_id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	p[1] = {pd} 300052 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	removeItem(song:205202)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205202, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	 DELETE FROM dynamusic_song
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	p[1] = {pd: id} 205202 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205202, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844859	/dynamusic/SongsRepository	removeItem(song:205203)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205203, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	 DELETE FROM dynamusic_song
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	p[1] = {pd: id} 205203 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205203, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	removeItem(song:205201)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205201, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	 DELETE FROM dynamusic_song
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	p[1] = {pd: id} 205201 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205201, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	 DELETE FROM dynamusic_album
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	p[1] = {pd: id} 300052 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844875	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=album:300052, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsManager	deleting album Welcome To The New World
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	removeItem(album:300053)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	p[1] = {pd} 300053 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	getItems(song: [205301, 205303, 205302])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	getPersistentItems(song:[205301, 205303, 205302])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	p[1] = {pd} 205301 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	p[2] = {pd} 205303 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	p[3] = {pd} 205302 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844890	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.description, __NULL__) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.title, Welcome To The New World) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.genre, country) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.downloadURL, media/dummy.mp3) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.description, __NULL__) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.title, It Ain't A Mystery) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.genre, country) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.downloadURL, media/dummy.mp3) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.description, __NULL__) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.title, You've Been In My Dreams) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.genre, country) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.downloadURL, media/dummy.mp3) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	getItems(artist: [100007, 100007, 100007])
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.artist, 100007) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.artist, 100007) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.artist, 100007) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.songList, 205302,205301,205303) 
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	getPropertyValue(album:300053.songList) -> "205303,205302,205301" (value from database)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=album:300053, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	 DELETE FROM dynamusic_album_songs
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	       WHERE album_id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	p[1] = {pd} 300053 (java.lang.String)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	removeItem(song:205303)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205303, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	 DELETE FROM dynamusic_song
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	p[1] = {pd: id} 205303 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844906	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205303, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	removeItem(song:205302)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205302, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	 DELETE FROM dynamusic_song
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	p[1] = {pd: id} 205302 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205302, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	removeItem(song:205301)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205301, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	 DELETE FROM dynamusic_song
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	p[1] = {pd: id} 205301 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205301, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	 DELETE FROM dynamusic_album
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	p[1] = {pd: id} 300053 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844921	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=album:300053, type=3, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	removeItem(artist:100007)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=artist:100007, type=1, props=null)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	[++SQLDelete++]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	 DELETE FROM dynamusic_artist
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	       WHERE id = ?
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	p[1] = {pd: id} 100007 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	[--SQLDelete--]
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:27:24 IST 2012	1340351844937	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=artist:100007, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(album:300051)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=album:300051, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(song:205101)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205101, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(song:205102)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205102, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(song:205103)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205103, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(album:300052)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=album:300052, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(song:205201)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205201, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(song:205202)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205202, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(song:205203)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205203, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(album:300053)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=album:300053, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(song:205301)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205301, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(song:205302)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205302, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(song:205303)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=song:205303, type=3, props=null)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	removeCurrentProperties(artist:100007)
**** debug	Fri Jun 22 13:27:25 IST 2012	1340351845015	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=artist:100007, type=3, props=null)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890218	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890218	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890218	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890218	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890218	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890218	/dynamusic/SongsRepository	(no parameters)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890218	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890218	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890234	/dynamusic/SongsRepository	getItems(artist: [100003, 100006, 100013, 100016, 100005, 100012, 100014, 100015])
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890234	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100003,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100014,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890234	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890234	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890234	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Fri Jun 22 13:28:10 IST 2012	1340351890250	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935171	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935187	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935187	/dynamusic/SongsRepository	getPropertyValue(artist:100006.photoURL) -> "images/ElwinRedshoes.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	getPropertyValue(artist:100006.description) -> "Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ..." (cached with no transaction)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist t2
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	  WHERE t2.id=t1.artist
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	    AND (t2.id = ?)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	p[1] = {pd: id} 100006 (java.lang.String)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935203	/dynamusic/SongsRepository	getItems(album: [300041, 300042, 300043])
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935218	/dynamusic/SongsRepository	executeQuery(album,0,3,artist.id = ?) -> [album:300041,album:300042,album:300043] (unsorted)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935218	/dynamusic/SongsRepository	getPropertyValue(album:300041.id) -> "300041" (id property)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935218	/dynamusic/SongsRepository	getPropertyValue(album:300041.title) -> "Eight Days" (cached with no transaction)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935218	/dynamusic/SongsRepository	getPropertyValue(album:300042.id) -> "300042" (id property)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935218	/dynamusic/SongsRepository	getPropertyValue(album:300042.title) -> "Red Flag" (cached with no transaction)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935218	/dynamusic/SongsRepository	getPropertyValue(album:300043.id) -> "300043" (id property)
**** debug	Fri Jun 22 13:28:55 IST 2012	1340351935218	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Fri Jun 22 13:29:03 IST 2012	1340351943093	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:29:03 IST 2012	1340351943093	/dynamusic/SongsRepository	getPropertyValue(artist:100006.photoURL) -> "images/ElwinRedshoes.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:29:03 IST 2012	1340351943093	/dynamusic/SongsRepository	getPropertyValue(artist:100006.description) -> "Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ..." (cached with no transaction)
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	setPropertyValue(artist:100006.description,Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ...77777777777777)
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	setPropertyValue(artist:100006.name,Elwin Redshoes)
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	setPropertyValue(artist:100006.photoURL,images/ElwinRedshoes.jpg)
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	[++SQLUpdate++]
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	 UPDATE dynamusic_artist
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	    SET name=?,description=?,image=?
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	  WHERE id=?
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	p[1] = {pd: name} Elwin Redshoes (java.lang.String)
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	p[2] = {pd: description} Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ...77777777777777 (java.lang.String)
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	p[3] = {pd: photoURL} images/ElwinRedshoes.jpg (java.lang.String)
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	p[4] = {pd} 100006 (java.lang.String)
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	[--SQLUpdate--]
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956375	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	sendPropertiesChangedEvent(item=artist:100006, type=0, props={
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	{name,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=name
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=Elwin Redshoes, 
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	{photoURL,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=image
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=images/ElwinRedshoes.jpg, 
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	{description,pType=String,IDesc=[ItemDesc: artist],table=dynamusic_artist,cols=description
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	  ,pBI=atg.beans.BeanClassTyper$BeanClassInfo@c0c443,pIDesc=null
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	  ,cType=null,cBI=null,cIDesc=null,colHandle=null}=Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ...77777777777777})
**** debug	Fri Jun 22 13:29:16 IST 2012	1340351956390	/dynamusic/SongsRepository	updateItem(artist:100006) (changes applied: {name=Elwin Redshoes,photoURL=images/ElwinRedshoes.jpg,description=Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ...77777777777777})
**** debug	Fri Jun 22 13:30:03 IST 2012	1340352003984	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:30:03 IST 2012	1340352003984	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Fri Jun 22 13:30:03 IST 2012	1340352003984	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Fri Jun 22 13:30:03 IST 2012	1340352003984	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Fri Jun 22 13:30:03 IST 2012	1340352003984	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Fri Jun 22 13:30:03 IST 2012	1340352003984	/dynamusic/SongsRepository	(no parameters)
**** debug	Fri Jun 22 13:30:03 IST 2012	1340352003984	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:30:03 IST 2012	1340352003984	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004000	/dynamusic/SongsRepository	getItems(artist: [100003, 100006, 100013, 100016, 100005, 100012, 100014, 100015])
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004000	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100003,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100014,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Fri Jun 22 13:30:04 IST 2012	1340352004015	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	(no parameters)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	getItems(artist: [100003, 100006, 100013, 100016, 100005, 100012, 100014, 100015])
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041000	/dynamusic/SongsRepository	executeQuery(artist,0,-1,all) -> [artist:100003,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100014,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Fri Jun 22 13:30:41 IST 2012	1340352041015	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043218	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	getPropertyValue(artist:100013.photoURL) -> "images/FridaJetsen.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	getPropertyValue(artist:100013.description) -> "The one-time frontwoman of the now-defunct Norse band Ice Blanket has charted even greater commercial and artistic success as a solo artist ..." (cached with no transaction)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist t2
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	  WHERE t2.id=t1.artist
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	    AND (t2.id = ?)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	p[1] = {pd: id} 100013 (java.lang.String)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043234	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	getItems(album: [300101, 300102, 300103])
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	getPersistentItems(album:[300101, 300102, 300103])
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.cover,t1.artist,t1.published,t1.title
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	-- Parameters --
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	p[1] = {pd} 300101 (java.lang.String)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	p[2] = {pd} 300102 (java.lang.String)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	p[3] = {pd} 300103 (java.lang.String)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.description, Headline-grabbing personal upheavals turn into introspective surges on Squiggle, the third album by Frida Jetsen. Driven inward after a ...) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.coverURL, images/Squiggle.jpg) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.date, 8/23/1997 10:53:16) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.title, Squiggle) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.description, This marvel is such an original that she remains an acquired taste. The second album proves more challenging than her debut. ...) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.coverURL, images/Swans.jpg) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.date, 6/13/1995 10:53:16) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.title, Swans) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.description, Ever since Frida Jetsen's vital, effusive 1993 debut, her music has been increasingly intimate and gently private. It's typical then that Sleeper's first single ...) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.coverURL, images/Sleeper.jpg) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.date, 8/28/2001 10:53:16) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.title, Sleeper) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	getItems(artist: [100013, 100013, 100013])
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043250	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.artist, 100013) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043265	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.artist, 100013) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043265	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.artist, 100013) 
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043265	/dynamusic/SongsRepository	executeQuery(album,0,3,artist.id = ?) -> [album:300101,album:300102,album:300103] (unsorted)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043265	/dynamusic/SongsRepository	getPropertyValue(album:300101.id) -> "300101" (id property)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043265	/dynamusic/SongsRepository	getPropertyValue(album:300101.title) -> "Squiggle" (cached with no transaction)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043265	/dynamusic/SongsRepository	getPropertyValue(album:300102.id) -> "300102" (id property)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043265	/dynamusic/SongsRepository	getPropertyValue(album:300102.title) -> "Swans" (cached with no transaction)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043265	/dynamusic/SongsRepository	getPropertyValue(album:300103.id) -> "300103" (id property)
**** debug	Fri Jun 22 13:30:43 IST 2012	1340352043265	/dynamusic/SongsRepository	getPropertyValue(album:300103.title) -> "Sleeper" (cached with no transaction)
**** debug	Fri Jun 22 13:30:51 IST 2012	1340352051203	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Fri Jun 22 13:30:51 IST 2012	1340352051203	/dynamusic/SongsRepository	getPropertyValue(artist:100013.photoURL) -> "images/FridaJetsen.jpg" (cached with no transaction)
**** debug	Fri Jun 22 13:30:51 IST 2012	1340352051203	/dynamusic/SongsRepository	getPropertyValue(artist:100013.description) -> "The one-time frontwoman of the now-defunct Norse band Ice Blanket has charted even greater commercial and artistic success as a solo artist ..." (cached with no transaction)
**** debug	Fri Jun 22 14:17:02 IST 2012	1340354822000	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-112/dynamusic/null	inside handle update method
**** debug	Fri Jun 22 14:17:37 IST 2012	1340354857250	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-113/dynamusic/null	inside handle update method
**** debug	Fri Jun 22 14:18:22 IST 2012	1340354902453	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-115/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:18:50 IST 2012	1340354930187	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-117/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:30:41 IST 2012	1340355641796	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-2/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:31:46 IST 2012	1340355706703	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:32:20 IST 2012	1340355740625	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:33:24 IST 2012	1340355804671	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:33:56 IST 2012	1340355836671	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:34:39 IST 2012	1340355879562	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-13/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:41:30 IST 2012	1340356290171	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-2/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:41:30 IST 2012	1340356290171	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-2/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:41:41 IST 2012	1340356301218	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:41:41 IST 2012	1340356301218	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:42:32 IST 2012	1340356352296	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:42:32 IST 2012	1340356352296	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:42:46 IST 2012	1340356366343	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-5/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:42:46 IST 2012	1340356366343	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-5/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:43:06 IST 2012	1340356386140	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-7/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:43:42 IST 2012	1340356422218	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 14:45:24 IST 2012	1340356524906	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:45:38 IST 2012	1340356538468	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-12/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:46:29 IST 2012	1340356589515	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-17/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:47:11 IST 2012	1340356631703	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-20/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 14:48:03 IST 2012	1340356683593	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-23/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 14:48:29 IST 2012	1340356709703	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-26/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 14:49:01 IST 2012	1340356741062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-29/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:49:01 IST 2012	1340356741062	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-29/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 14:50:08 IST 2012	1340356808875	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-31/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:50:08 IST 2012	1340356808875	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-31/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 14:50:36 IST 2012	1340356836703	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-34/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:50:36 IST 2012	1340356836703	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-34/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:52:02 IST 2012	1340356922515	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-39/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:52:02 IST 2012	1340356922515	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-39/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:52:33 IST 2012	1340356953953	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-42/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 14:57:25 IST 2012	1340357245156	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 14:57:25 IST 2012	1340357245171	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 14:57:25 IST 2012	1340357245171	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 14:57:47 IST 2012	1340357267625	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 14:57:47 IST 2012	1340357267625	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 14:57:47 IST 2012	1340357267625	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:16:08 IST 2012	1340358368984	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:16:08 IST 2012	1340358368984	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:16:08 IST 2012	1340358368984	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:16:58 IST 2012	1340358418859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-10/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:16:58 IST 2012	1340358418859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-10/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:16:58 IST 2012	1340358418859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-10/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:16:59 IST 2012	1340358419125	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:16:59 IST 2012	1340358419125	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:16:59 IST 2012	1340358419140	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:18:12 IST 2012	1340358492859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-13/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:18:12 IST 2012	1340358492859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-13/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:18:12 IST 2012	1340358492859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-13/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:19:05 IST 2012	1340358545437	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-16/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:19:05 IST 2012	1340358545437	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-16/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:20:19 IST 2012	1340358619468	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-19/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:20:39 IST 2012	1340358639171	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-22/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:20:39 IST 2012	1340358639187	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-22/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:21:03 IST 2012	1340358663718	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-26/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:21:03 IST 2012	1340358663718	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-26/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:21:03 IST 2012	1340358663718	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-26/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:22:08 IST 2012	1340358728125	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-29/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:22:08 IST 2012	1340358728125	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-29/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:22:08 IST 2012	1340358728125	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-29/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:22:41 IST 2012	1340358761703	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-30/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:22:41 IST 2012	1340358761703	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-30/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:22:41 IST 2012	1340358761703	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-30/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:23:57 IST 2012	1340358837546	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-32/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:23:57 IST 2012	1340358837546	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-32/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:23:57 IST 2012	1340358837546	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-32/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:24:42 IST 2012	1340358882578	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-34/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:24:42 IST 2012	1340358882578	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-34/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:24:42 IST 2012	1340358882578	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-34/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:25:15 IST 2012	1340358915312	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-37/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:25:15 IST 2012	1340358915312	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-37/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:25:15 IST 2012	1340358915312	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-37/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:25:47 IST 2012	1340358947765	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-40/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:25:47 IST 2012	1340358947765	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-40/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:25:47 IST 2012	1340358947765	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-40/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:26:37 IST 2012	1340358997562	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-42/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:26:37 IST 2012	1340358997562	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-42/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:27:10 IST 2012	1340359030187	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-45/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:27:10 IST 2012	1340359030187	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-45/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:27:44 IST 2012	1340359064203	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-48/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:27:44 IST 2012	1340359064203	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-48/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:28:09 IST 2012	1340359089640	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-51/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:28:09 IST 2012	1340359089640	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-51/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:28:37 IST 2012	1340359117906	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-54/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:28:37 IST 2012	1340359117906	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-54/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:29:12 IST 2012	1340359152140	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-57/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:29:12 IST 2012	1340359152140	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-57/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:30:53 IST 2012	1340359253921	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-59/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:30:53 IST 2012	1340359253921	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-59/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:31:24 IST 2012	1340359284812	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-62/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:31:24 IST 2012	1340359284812	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-62/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:32:17 IST 2012	1340359337812	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-65/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:32:17 IST 2012	1340359337812	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-65/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:33:19 IST 2012	1340359399953	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-68/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:33:19 IST 2012	1340359399953	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-68/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:34:08 IST 2012	1340359448296	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-71/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:34:08 IST 2012	1340359448296	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-71/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:37:10 IST 2012	1340359630343	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:37:10 IST 2012	1340359630343	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:38:01 IST 2012	1340359681859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:38:01 IST 2012	1340359681859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:38:26 IST 2012	1340359706890	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:38:26 IST 2012	1340359706890	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:41:13 IST 2012	1340359873890	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-2/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:41:13 IST 2012	1340359873890	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-2/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:41:54 IST 2012	1340359914406	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-5/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:41:54 IST 2012	1340359914406	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-5/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:42:53 IST 2012	1340359973515	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:42:53 IST 2012	1340359973531	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-8/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:43:38 IST 2012	1340360018781	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:43:38 IST 2012	1340360018781	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:43:38 IST 2012	1340360018781	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:43:56 IST 2012	1340360036921	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-12/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:43:56 IST 2012	1340360036921	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-12/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:43:56 IST 2012	1340360036921	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-12/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:44:27 IST 2012	1340360067703	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-15/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:44:27 IST 2012	1340360067718	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-15/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:44:27 IST 2012	1340360067718	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-15/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:47:37 IST 2012	1340360257968	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:47:37 IST 2012	1340360257968	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:47:37 IST 2012	1340360257968	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-3/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:48:19 IST 2012	1340360299812	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:48:19 IST 2012	1340360299828	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 15:48:19 IST 2012	1340360299828	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:49:05 IST 2012	1340360345234	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:49:05 IST 2012	1340360345234	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:49:05 IST 2012	1340360345234	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 15:49:38 IST 2012	1340360378859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:49:38 IST 2012	1340360378859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:49:38 IST 2012	1340360378859	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 15:50:07 IST 2012	1340360407890	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-14/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:50:07 IST 2012	1340360407890	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-14/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 15:50:07 IST 2012	1340360407890	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-14/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 15:58:09 IST 2012	1340360889015	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 15:58:09 IST 2012	1340360889015	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-4/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 16:04:08 IST 2012	1340361248390	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 16:04:08 IST 2012	1340361248390	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 16:04:08 IST 2012	1340361248406	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-6/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 16:04:48 IST 2012	1340361288031	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 16:04:48 IST 2012	1340361288031	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-9/dynamusic/null	inside handle create method
**** debug	Fri Jun 22 16:05:44 IST 2012	1340361344343	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 16:05:44 IST 2012	1340361344343	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 16:05:44 IST 2012	1340361344343	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-11/dynamusic/null	inside handle delete  method
**** debug	Fri Jun 22 16:06:18 IST 2012	1340361378578	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-13/dynamusic/null	inside handle cradle  method
**** debug	Fri Jun 22 16:06:18 IST 2012	1340361378578	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-13/dynamusic/null	inside handle remove  method
**** debug	Fri Jun 22 16:06:18 IST 2012	1340361378578	/atg/dynamo/servlet/pipeline/RequestScopeManager/RequestScope-13/dynamusic/null	inside handle delete  method
**** debug	Sat Jun 23 09:39:47 IST 2012	1340424587546	/dynamusic/FeaturedSongs	getSongs method called,  returning  a list of [Ljava.lang.String;@260ea1
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594359	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594359	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594359	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594359	/dynamusic/SongsRepository	  WHERE (t1.name LIKE ?)
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594359	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594359	/dynamusic/SongsRepository	p[1] = {pd: name} Th% (java.lang.String)
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594359	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594359	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	getItems(artist: [100004, 100009])
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	getPersistentItems(artist:[100004, 100009])
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.genre,t1.name
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?)
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	p[1] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	p[2] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.description, In 1965, the Brighton Bramblers appeared on American TV and a legend was born ...) 
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.photoURL, images/TheBrightonBramblers.jpg) 
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.artistGenre, __NULL__) 
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.name, The Brighton Bramblers) 
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.description, Building his reputation for years in the Sydney underground music scene, this pub rocker emerged on the international music scene with the release of his third album ...) 
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.photoURL, images/ThePorpoiseSpit.jpg) 
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.artistGenre, __NULL__) 
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.name, The Porpoise Spit) 
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594375	/dynamusic/SongsRepository	executeQuery(artist,0,2,name LIKE "Th%") -> [artist:100004,artist:100009] (unsorted)
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594390	/dynamusic/SongsRepository	getPropertyValue(artist:100004.id) -> "100004" (id property)
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594390	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594390	/dynamusic/SongsRepository	getPropertyValue(artist:100009.id) -> "100009" (id property)
**** debug	Sat Jun 23 09:39:54 IST 2012	1340424594390	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 09:39:57 IST 2012	1340424597140	/dynamusic/FeaturedSongs	getSongs method called,  returning  a list of [Ljava.lang.String;@260ea1
**** debug	Sat Jun 23 09:40:13 IST 2012	1340424613031	/dynamusic/SongsRepository	removeCurrentProperties(artist:100004)
**** debug	Sat Jun 23 09:40:13 IST 2012	1340424613031	/dynamusic/SongsRepository	removeCurrentProperties(artist:100009)
**** debug	Sat Jun 23 09:44:35 IST 2012	1340424875078	/dynamusic/FeaturedSongs	getSongs method called,  returning  a list of [Ljava.lang.String;@260ea1
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	  WHERE (t1.name LIKE ?)
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	p[1] = {pd: name} Th% (java.lang.String)
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	getItems(artist: [100004, 100009])
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	getPersistentItems(artist:[100004, 100009])
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.genre,t1.name
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?)
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	p[1] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	p[2] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878000	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.description, In 1965, the Brighton Bramblers appeared on American TV and a legend was born ...) 
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.photoURL, images/TheBrightonBramblers.jpg) 
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.artistGenre, __NULL__) 
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.name, The Brighton Bramblers) 
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.description, Building his reputation for years in the Sydney underground music scene, this pub rocker emerged on the international music scene with the release of his third album ...) 
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.photoURL, images/ThePorpoiseSpit.jpg) 
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.artistGenre, __NULL__) 
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.name, The Porpoise Spit) 
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878015	/dynamusic/SongsRepository	executeQuery(artist,0,2,name LIKE "Th%") -> [artist:100004,artist:100009] (unsorted)
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878031	/dynamusic/SongsRepository	getPropertyValue(artist:100004.id) -> "100004" (id property)
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878031	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878031	/dynamusic/SongsRepository	getPropertyValue(artist:100009.id) -> "100009" (id property)
**** debug	Sat Jun 23 09:44:38 IST 2012	1340424878031	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 09:47:37 IST 2012	1340425057687	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 09:47:37 IST 2012	1340425057687	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 09:47:37 IST 2012	1340425057687	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 09:47:37 IST 2012	1340425057687	/dynamusic/SongsRepository	  WHERE (t1.name LIKE ?)
**** debug	Sat Jun 23 09:47:37 IST 2012	1340425057687	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 09:47:37 IST 2012	1340425057687	/dynamusic/SongsRepository	p[1] = {pd: name} Th% (java.lang.String)
**** debug	Sat Jun 23 09:47:37 IST 2012	1340425057687	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 09:47:37 IST 2012	1340425057687	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 09:47:43 IST 2012	1340425063000	/dynamusic/SongsRepository	getItems(artist: [100004, 100009])
**** debug	Sat Jun 23 09:47:43 IST 2012	1340425063000	/dynamusic/SongsRepository	executeQuery(artist,0,2,name LIKE "Th%") -> [artist:100004,artist:100009] (unsorted)
**** debug	Sat Jun 23 09:47:43 IST 2012	1340425063000	/dynamusic/SongsRepository	getPropertyValue(artist:100004.id) -> "100004" (id property)
**** debug	Sat Jun 23 09:47:43 IST 2012	1340425063015	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 09:47:43 IST 2012	1340425063015	/dynamusic/SongsRepository	getPropertyValue(artist:100009.id) -> "100009" (id property)
**** debug	Sat Jun 23 09:47:43 IST 2012	1340425063015	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	  WHERE (t1.name LIKE ?)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	p[1] = {pd: name} T% (java.lang.String)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	getItems(artist: [100004, 100009, 100012, 100014])
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	getPersistentItems(artist:[100012, 100014])
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.genre,t1.name
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	p[1] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	p[2] = {pd} 100014 (java.lang.String)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.description, Teddy 'Dynamo' Wilson, king of Boston Blues, was a legend in his time, and his influence is still heard in the music of ...) 
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.photoURL, images/TeddyDynamoWilson.jpg) 
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.artistGenre, __NULL__) 
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.name, Teddy Dynamo Wilson) 
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.description, The almost impossibly handsome and charismatic Travis B. is more than an attractive pop country icon; his musical chops are beyond question ...) 
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.photoURL, images/TravisB.jpg) 
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.artistGenre, __NULL__) 
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.name, Travis B.) 
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	executeQuery(artist,0,4,name LIKE "T%") -> [artist:100004,artist:100009,artist:100012,artist:100014] (unsorted)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	getPropertyValue(artist:100004.id) -> "100004" (id property)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199062	/dynamusic/SongsRepository	getPropertyValue(artist:100009.id) -> "100009" (id property)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199078	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199078	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199078	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199078	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Sat Jun 23 09:49:59 IST 2012	1340425199078	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	  WHERE (t1.name LIKE ?)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	p[1] = {pd: name} T% (java.lang.String)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	getItems(artist: [100004, 100009, 100012, 100014])
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	executeQuery(artist,0,4,name LIKE "T%") -> [artist:100004,artist:100009,artist:100012,artist:100014] (unsorted)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	getPropertyValue(artist:100004.id) -> "100004" (id property)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	getPropertyValue(artist:100009.id) -> "100009" (id property)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372328	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372343	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Sat Jun 23 10:26:12 IST 2012	1340427372343	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	  WHERE (t1.name LIKE ?)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	p[1] = {pd: name} T% (java.lang.String)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	getItems(artist: [100004, 100009, 100012, 100014])
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392000	/dynamusic/SongsRepository	executeQuery(artist,0,4,name LIKE "T%") -> [artist:100004,artist:100009,artist:100012,artist:100014] (unsorted)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392015	/dynamusic/SongsRepository	getPropertyValue(artist:100004.id) -> "100004" (id property)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392015	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392015	/dynamusic/SongsRepository	getPropertyValue(artist:100009.id) -> "100009" (id property)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392015	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392015	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392015	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392015	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Sat Jun 23 10:26:32 IST 2012	1340427392015	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Sat Jun 23 10:27:47 IST 2012	1340427467453	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 10:27:47 IST 2012	1340427467453	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 10:27:47 IST 2012	1340427467453	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 10:27:47 IST 2012	1340427467453	/dynamusic/SongsRepository	  WHERE (t1.genre = ?)
**** debug	Sat Jun 23 10:27:47 IST 2012	1340427467453	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 10:27:47 IST 2012	1340427467453	/dynamusic/SongsRepository	p[1] = {pd: artistGenre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 10:27:47 IST 2012	1340427467453	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 10:27:47 IST 2012	1340427467453	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	  WHERE (t1.name LIKE ?)
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	p[1] = {pd: name} A% (java.lang.String)
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	getItems(artist: [100011])
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	getPersistentItems(artist:[100011])
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.genre,t1.name
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	  WHERE t1.id = ?
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	p[1] = {pd} 100011 (java.lang.String)
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.description, While never hitting the commercial heights of many of her contemporaries, Autumn Winters' unique blend of country sass and tender strength ...) 
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.photoURL, images/AutumnWinters.jpg) 
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.artistGenre, __NULL__) 
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.name, Autumn Winters) 
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530156	/dynamusic/SongsRepository	executeQuery(artist,0,1,name LIKE "A%") -> [artist:100011] (unsorted)
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530171	/dynamusic/SongsRepository	getPropertyValue(artist:100011.id) -> "100011" (id property)
**** debug	Sat Jun 23 10:28:50 IST 2012	1340427530171	/dynamusic/SongsRepository	getPropertyValue(artist:100011.name) -> "Autumn Winters" (cached with no transaction)
**** debug	Sat Jun 23 10:29:30 IST 2012	1340427570171	/dynamusic/SongsRepository	removeCurrentProperties(artist:100012)
**** debug	Sat Jun 23 10:29:30 IST 2012	1340427570171	/dynamusic/SongsRepository	removeCurrentProperties(artist:100014)
**** debug	Sat Jun 23 10:29:30 IST 2012	1340427570171	/dynamusic/SongsRepository	removeCurrentProperties(artist:100011)
**** debug	Sat Jun 23 10:29:30 IST 2012	1340427570171	/dynamusic/SongsRepository	removeCurrentProperties(artist:100004)
**** debug	Sat Jun 23 10:29:30 IST 2012	1340427570171	/dynamusic/SongsRepository	removeCurrentProperties(artist:100009)
**** debug	Sat Jun 23 11:56:28 IST 2012	1340432788312	/dynamusic/FeaturedSongs	getSongs method called,  returning  a list of [Ljava.lang.String;@260ea1
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=song)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	 {{all}}
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	count: all, num = 141
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	 SELECT t1.id,t1.title
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	 ORDER BY t1.title ASC
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153906	/dynamusic/SongsRepository	getItems(song: [209303, 200064, 204301, 212401, 213201, 208301, 210201, 209103, 200043, 204201, 200031, 204303, 213303, 200022, 204202, 213103, 213202, 209301, 212202, 212301, 213203, 206203, 200062, 207103, 207102, 207101, 209302, 200035, 211101, 200059, 210103, 200034, 208203, 200037, 212402, 206101, 205203, 200052, 208204, 210104, 200073, 200054, 208102, 206305, 212302, 213301, 210301, 206303, 210202, 200003, 205102, 208201, 209203, 208302, 212104, 200023, 206304, 206201, 206204, 209201, 200011, 210204, 205302, 210303, 206302, 204204, 211122, 206301, 200039, 204302, 212201, 200053, 200057, 200063, 200032, 209202, 213302, 212403, 210302, 204203, 209101, 200082, 200081, 200083, 207202, 207201, 207203, 211202, 213101, 200012, 210205, 210101, 205201, 212203, 200056, 200013, 200071, 209102, 212101, 210203, 211203])
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	getPersistentItems(song:[209303, 200064, 204301, 212401, 213201, 208301, 210201, 209103, 200043, 204201, 200031, 204303, 213303, 200022, 204202, 213103, 213202, 209301, 212202, 212301, 213203, 206203, 200062, 207103, 207102, 207101, 209302, 200035, 211101, 200059, 210103, 200034, 208203, 200037, 212402, 206101, 205203, 200052, 208204, 210104, 200073, 200054, 208102, 206305, 212302, 213301, 210301, 206303, 210202, 200003, 205102, 208201, 209203, 208302, 212104, 200023, 206304, 206201, 206204, 209201, 200011, 210204, 205302, 210303, 206302, 204204, 211122, 206301, 200039, 204302, 212201, 200053, 200057, 200063, 200032, 209202, 213302, 212403, 210302, 204203, 209101, 200082, 200081, 200083, 207202, 207201, 207203, 211202, 213101, 200012, 210205, 210101, 205201, 212203, 200056, 200013, 200071, 209102, 212101, 210203, 211203])
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[1] = {pd} 209303 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[2] = {pd} 200064 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[3] = {pd} 204301 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[4] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[5] = {pd} 213201 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[6] = {pd} 208301 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[7] = {pd} 210201 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[8] = {pd} 209103 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[9] = {pd} 200043 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[10] = {pd} 204201 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[11] = {pd} 200031 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[12] = {pd} 204303 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[13] = {pd} 213303 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[14] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[15] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[16] = {pd} 213103 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[17] = {pd} 213202 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[18] = {pd} 209301 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[19] = {pd} 212202 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[20] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[21] = {pd} 213203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[22] = {pd} 206203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[23] = {pd} 200062 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[24] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[25] = {pd} 207102 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[26] = {pd} 207101 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[27] = {pd} 209302 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[28] = {pd} 200035 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[29] = {pd} 211101 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[30] = {pd} 200059 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[31] = {pd} 210103 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[32] = {pd} 200034 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[33] = {pd} 208203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[34] = {pd} 200037 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[35] = {pd} 212402 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[36] = {pd} 206101 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[37] = {pd} 205203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[38] = {pd} 200052 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[39] = {pd} 208204 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[40] = {pd} 210104 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[41] = {pd} 200073 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[42] = {pd} 200054 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[43] = {pd} 208102 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[44] = {pd} 206305 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[45] = {pd} 212302 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[46] = {pd} 213301 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[47] = {pd} 210301 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[48] = {pd} 206303 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[49] = {pd} 210202 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[50] = {pd} 200003 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[51] = {pd} 205102 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[52] = {pd} 208201 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[53] = {pd} 209203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[54] = {pd} 208302 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[55] = {pd} 212104 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[56] = {pd} 200023 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[57] = {pd} 206304 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[58] = {pd} 206201 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[59] = {pd} 206204 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[60] = {pd} 209201 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[61] = {pd} 200011 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[62] = {pd} 210204 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[63] = {pd} 205302 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[64] = {pd} 210303 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[65] = {pd} 206302 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[66] = {pd} 204204 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[67] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[68] = {pd} 206301 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[69] = {pd} 200039 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[70] = {pd} 204302 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[71] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[72] = {pd} 200053 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[73] = {pd} 200057 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[74] = {pd} 200063 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[75] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[76] = {pd} 209202 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[77] = {pd} 213302 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[78] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[79] = {pd} 210302 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[80] = {pd} 204203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[81] = {pd} 209101 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[82] = {pd} 200082 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[83] = {pd} 200081 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[84] = {pd} 200083 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[85] = {pd} 207202 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[86] = {pd} 207201 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[87] = {pd} 207203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[88] = {pd} 211202 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[89] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[90] = {pd} 200012 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[91] = {pd} 210205 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[92] = {pd} 210101 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[93] = {pd} 205201 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[94] = {pd} 212203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[95] = {pd} 200056 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[96] = {pd} 200013 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[97] = {pd} 200071 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[98] = {pd} 209102 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[99] = {pd} 212101 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[100] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	p[101] = {pd} 211203 (java.lang.String)
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.title, How Blue Are You?) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.title, If You Know Me) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.downloadURL, /media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.title, Please Send Me Something) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.downloadURL, /media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.title, Rock With Me) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.downloadURL, /media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.title, Blues For Blue) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.title, I'll Carry On) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200031.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200031.title, Black Stockings) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200031.genre, jazz) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200031.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.title, Magic Mouse) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.genre, jazz) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.title, Didn't You Know?) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.genre, jazz) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.title, Corner Pub) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.genre, jazz) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.title, Drinks With Friends) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.genre, jazz) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.title, Little Folk) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.genre, jazz) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.title, Battle Road) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.genre, jazz) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.title, For the Benefit of a Song) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.title, Lovely Loretta) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.title, Getting Warmer) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200056.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200056.title, Roadside Attraction) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200056.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200056.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.title, Lucky in the Grass) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.title, Day In Day Out) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.title, Coal Miner) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.title, Maggie May I) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.title, A Fool in Paradise) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.title, Rooftop Garden) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.title, Getting Together) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.title, Piano Sonata No. 15 In D Major, Op. 28) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.genre, classical) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.title, Piano Sonata No. 14 In C Sharp Minor, Op. 27 No. 2) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.genre, classical) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.title, Piano Sonata No. 8 In C Minor, Op. 13) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.genre, classical) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.title, Beyond Relief) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204202.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204202.title, Bobby Doll) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204202.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.title, Out of Time) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.title, Kidding Around) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153937	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.title, Accidents Waiting To Happen) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.title, London) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.title, Blue Blanket) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.title, Hurt you) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.title, Prison Blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.title, Fields of Home) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.title, It Ain't A Mystery) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.title, Far From Home) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206201.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206201.title, I'm Honest) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206201.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.title, Chuck) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.title, I'm Not Alone) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.title, Leaving Town) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.title, Japan) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.title, High-Rises) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.title, I'm Beautiful) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206305.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206305.title, Goodbye Tourists) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206305.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206305.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.title, Concerto No. 1, Op. 3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.genre, classical) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.title, Concerto No. 1, Op. 2) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.genre, classical) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.title, Concerto No. 1, Op. 1) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.genre, classical) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.title, Piano Trio in D minor, Op. 11) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.genre, classical) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.title, Piano Trio in D minor, Op. 10) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.genre, classical) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.title, Piano Trio in D minor, Op. 9) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.genre, classical) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153953	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.title, Gonna See You Soon) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.title, I Feel Like a Wonder) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208203.title, Don't Press Me) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208203.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.title, From This Moment Til the Last) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.title, Any Man Can See) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.title, I Need to Know) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.title, Paris Boy) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.title, Sad Cat) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209103.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209103.title, Baby Has the Blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209103.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.title, I'm the Wolf) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.title, Mean Old Dog Blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.title, I Feel Like Going North) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.title, Bring On The Night) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.title, Copper Top) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.title, 22 Years) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.genre, blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.title, Predator) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.title, Debutante) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.title, Full of Hope) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.title, Army Ant) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.title, Hill) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.title, So Quiet) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.title, Isabelle) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.title, Possibly) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.title, Hidden Places) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.title, Moth) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.title, It's Up to You) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.title, Cowboy in My Mind) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211122.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211122.title, Landing With A Thud In Shreveport) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211122.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211122.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.title, Places I've Been) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211203.title, Something Like That Can Happen) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211203.genre, country) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.title, Sleeper Hat) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.title, I Want You to Know) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.title, Love and Death) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212202.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212202.title, Broadway Blues) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212202.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.title, Queen Rose) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212301.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212301.title, Bullets Over The City) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212301.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212301.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212302.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212302.title, Hannah) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212302.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212302.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.title, Alice's World) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.title, Everything Is Frozen) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.title, Most Times) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.title, Please Come Over) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213103.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213103.title, Break My Heart) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213103.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.title, Another Sad Song) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.description, __NULL__) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.title, Breath of Love) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.genre, pop) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:33 IST 2012	1340433153984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.description, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.title, Candlelight Song) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.genre, pop) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.description, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.title, He Wasn't Good Enough) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.genre, pop) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.description, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.title, Miami Nights) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.genre, pop) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213303.description, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213303.title, Blue Piano) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213303.genre, pop) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213303.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	getItems(artist: [100002, 100002, 100002, 100002, 100002, 100002, 100003, 100003, 100003, 100003, 100003, 100003, 100003, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100005, 100005, 100005, 100006, 100006, 100006, 100006, 100006, 100006, 100006, 100007, 100007, 100007, 100007, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100010, 100010, 100010, 100010, 100010, 100010, 100011, 100011, 100011, 100011, 100011, 100011, 100012, 100012, 100012, 100012, 100012, 100012, 100012, 100012, 100012, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100014, 100014, 100014, 100014, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100016, 100016, 100016, 100016, 100016, 100016, 100016, 100016])
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	getPersistentItems(artist:[100002, 100002, 100002, 100002, 100002, 100002, 100003, 100003, 100003, 100003, 100003, 100003, 100003, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100004, 100005, 100005, 100005, 100006, 100006, 100006, 100006, 100006, 100006, 100006, 100007, 100007, 100007, 100007, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100009, 100010, 100010, 100010, 100010, 100010, 100010, 100011, 100011, 100011, 100011, 100011, 100011, 100012, 100012, 100012, 100012, 100012, 100012, 100012, 100012, 100012, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100013, 100014, 100014, 100014, 100014, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100015, 100016, 100016, 100016, 100016, 100016, 100016, 100016, 100016])
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.image,t1.genre,t1.name
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[1] = {pd} 100002 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[2] = {pd} 100002 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[3] = {pd} 100002 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[4] = {pd} 100002 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[5] = {pd} 100002 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[6] = {pd} 100002 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[7] = {pd} 100003 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[8] = {pd} 100003 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[9] = {pd} 100003 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[10] = {pd} 100003 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[11] = {pd} 100003 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[12] = {pd} 100003 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[13] = {pd} 100003 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[14] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[15] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[16] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[17] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[18] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[19] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[20] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[21] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[22] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[23] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[24] = {pd} 100004 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[25] = {pd} 100005 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[26] = {pd} 100005 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[27] = {pd} 100005 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[28] = {pd} 100006 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[29] = {pd} 100006 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[30] = {pd} 100006 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[31] = {pd} 100006 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[32] = {pd} 100006 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[33] = {pd} 100006 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[34] = {pd} 100006 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[35] = {pd} 100007 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[36] = {pd} 100007 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[37] = {pd} 100007 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[38] = {pd} 100007 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[39] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[40] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[41] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[42] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[43] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[44] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[45] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[46] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[47] = {pd} 100009 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[48] = {pd} 100010 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[49] = {pd} 100010 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[50] = {pd} 100010 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[51] = {pd} 100010 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[52] = {pd} 100010 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[53] = {pd} 100010 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[54] = {pd} 100011 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[55] = {pd} 100011 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[56] = {pd} 100011 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[57] = {pd} 100011 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[58] = {pd} 100011 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[59] = {pd} 100011 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[60] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[61] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[62] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[63] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[64] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[65] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[66] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[67] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[68] = {pd} 100012 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[69] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[70] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[71] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[72] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[73] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[74] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[75] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[76] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[77] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[78] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[79] = {pd} 100013 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[80] = {pd} 100014 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[81] = {pd} 100014 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[82] = {pd} 100014 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[83] = {pd} 100014 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[84] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[85] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[86] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[87] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[88] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[89] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[90] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[91] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[92] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[93] = {pd} 100015 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[94] = {pd} 100016 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[95] = {pd} 100016 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[96] = {pd} 100016 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[97] = {pd} 100016 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[98] = {pd} 100016 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[99] = {pd} 100016 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[100] = {pd} 100016 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	p[101] = {pd} 100016 (java.lang.String)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.description, While his fluid, bluesy sax style is legendary, Dexter's honey-tones vocal stylings cemented his reputation as a world-class artist ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.photoURL, images/DexterBluetone.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100002.name, Dexter Bluetone) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.description, Never before had the jazz world seen a piano playing child prodigy like Buddy Johnson, and over the course of...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.photoURL, images/BuddyJohnson.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100003.name, Buddy Longfellow Johnson) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.description, In 1965, the Brighton Bramblers appeared on American TV and a legend was born ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.photoURL, images/TheBrightonBramblers.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100004.name, The Brighton Bramblers) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100005.description, At once a groundbreaking provocateur and a crowd-pleasing populist, today van Bee is one of the most well respected composers of the Classical era, best known for his symphonies...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100005.photoURL, images/LudwigVanBee.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100005.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100005.name, Ludwig van Bee) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.description, Often cited as the most gifted and prolific songwriter of his generation, Elwin Redshoes emerged on the scene with his well-regarded debut album in 1977 ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.photoURL, images/ElwinRedshoes.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100006.name, Elwin Redshoes) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.description, One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.photoURL, images/CharlieGrassfield.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100007.name, Charlie Grassfield) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.description, Building his reputation for years in the Sydney underground music scene, this pub rocker emerged on the international music scene with the release of his third album ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.photoURL, images/ThePorpoiseSpit.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100009.name, The Porpoise Spit) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100010.description, Vladimir began to study piano at a very young age, and started composing while in his teens.  As a student, his reputation as a ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100010.photoURL, images/VladimirVladimir.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100010.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154000	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100010.name, Vladimir Vladimir) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.description, While never hitting the commercial heights of many of her contemporaries, Autumn Winters' unique blend of country sass and tender strength ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.photoURL, images/AutumnWinters.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100011.name, Autumn Winters) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.description, Teddy 'Dynamo' Wilson, king of Boston Blues, was a legend in his time, and his influence is still heard in the music of ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.photoURL, images/TeddyDynamoWilson.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100012.name, Teddy Dynamo Wilson) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.description, The one-time frontwoman of the now-defunct Norse band Ice Blanket has charted even greater commercial and artistic success as a solo artist ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.photoURL, images/FridaJetsen.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100013.name, Frida Jetsen) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.description, The almost impossibly handsome and charismatic Travis B. is more than an attractive pop country icon; his musical chops are beyond question ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.photoURL, images/TravisB.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100014.name, Travis B.) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.description, Woody Singer emerged out of the 60's New York folk and counterculture scene to become one of the most influential artists of the rock era ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.photoURL, images/WoodySinger.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100015.name, Woody Singer) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.description, Revealing a maturity way beyond her years, Kiki Shoppington's debut was an immediate hit, earning her countless industry awards and a legion of devoted fans ...) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.photoURL, images/KikiShoppington.jpg) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.artistGenre, __NULL__) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.name, Kiki Shoppington) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200003.artist, 100002) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200011.artist, 100002) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200012.artist, 100002) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200013.artist, 100002) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200022.artist, 100002) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200023.artist, 100002) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200031.artist, 100003) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200032.artist, 100003) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200034.artist, 100003) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200035.artist, 100003) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200037.artist, 100003) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200039.artist, 100003) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200043.artist, 100003) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200052.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200053.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200054.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200056.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200057.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200059.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200062.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200063.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200064.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200071.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200073.artist, 100004) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200081.artist, 100005) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200082.artist, 100005) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200083.artist, 100005) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204201.artist, 100006) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204202.artist, 100006) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204203.artist, 100006) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204204.artist, 100006) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204301.artist, 100006) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204302.artist, 100006) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204303.artist, 100006) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205102.artist, 100007) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205201.artist, 100007) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205203.artist, 100007) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205302.artist, 100007) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206101.artist, 100009) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206201.artist, 100009) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206203.artist, 100009) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206204.artist, 100009) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206301.artist, 100009) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206302.artist, 100009) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154015	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206303.artist, 100009) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206304.artist, 100009) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206305.artist, 100009) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207101.artist, 100010) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207102.artist, 100010) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207103.artist, 100010) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207201.artist, 100010) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207202.artist, 100010) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:207203.artist, 100010) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208102.artist, 100011) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208201.artist, 100011) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208203.artist, 100011) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208204.artist, 100011) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208301.artist, 100011) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208302.artist, 100011) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209101.artist, 100012) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209102.artist, 100012) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209103.artist, 100012) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209201.artist, 100012) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209202.artist, 100012) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209203.artist, 100012) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209301.artist, 100012) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209302.artist, 100012) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:209303.artist, 100012) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210101.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210103.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210104.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210201.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210202.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210203.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210204.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210205.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210301.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210302.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210303.artist, 100013) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211101.artist, 100014) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211122.artist, 100014) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211202.artist, 100014) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211203.artist, 100014) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212101.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212104.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212201.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212202.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212203.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212301.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212302.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212401.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212402.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212403.artist, 100015) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213101.artist, 100016) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213103.artist, 100016) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213201.artist, 100016) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213202.artist, 100016) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213203.artist, 100016) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213301.artist, 100016) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213302.artist, 100016) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213303.artist, 100016) 
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	executeQuery(song,0,101,all) -> [song:209303,song:200064,song:204301,song:212401,song:213201,song:208301,song:210201,song:209103,song:200043,song:204201,song:200031,song:204303,song:213303,song:200022,song:204202,song:213103,song:213202,song:209301,song:212202,song:212301,song:213203,song:206203,song:200062,song:207103,song:207102,song:207101,song:209302,song:200035,song:211101,song:200059,song:210103,song:200034,song:208203,song:200037,song:212402,song:206101,song:205203,song:200052,song:208204,song:210104,song:200073,song:200054,song:208102,song:206305,song:212302,song:213301,song:210301,song:206303,song:210202,song:200003,song:205102,song:208201,song:209203,song:208302,song:212104,song:200023,song:206304,song:206201,song:206204,song:209201,song:200011,song:210204,song:205302,song:210303,song:206302,song:204204,song:211122,song:206301,song:200039,song:204302,song:212201,song:200053,song:200057,song:200063,song:200032,song:209202,song:213302,song:212403,song:210302,song:204203,song:209101,song:200082,song:200081,song:200083,song:207202,song:207201,song:207203,song:211202,song:213101,song:200012,song:210205,song:210101,song:205201,song:212203,song:200056,song:200013,song:200071,song:209102,song:212101,song:210203,song:211203] (db sort: ORDER BY title ASC USECASE)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154031	/dynamusic/SongsRepository	getPropertyValue(song:209303.title) -> "22 Years" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:200064.title) -> "A Fool in Paradise" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:204301.title) -> "Accidents Waiting To Happen" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:213201.title) -> "Another Sad Song" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:208301.title) -> "Any Man Can See" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:210201.title) -> "Army Ant" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:209103.title) -> "Baby Has the Blues" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:200043.title) -> "Battle Road" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:204201.title) -> "Beyond Relief" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:204303.title) -> "Blue Blanket" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:213303.title) -> "Blue Piano" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:213103.title) -> "Break My Heart" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:213202.title) -> "Breath of Love" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:209301.title) -> "Bring On The Night" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:212202.title) -> "Broadway Blues" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:213203.title) -> "Candlelight Song" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:206203.title) -> "Chuck" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:200062.title) -> "Coal Miner" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:207102.title) -> "Concerto No. 1, Op. 2" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:207101.title) -> "Concerto No. 1, Op. 3" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:209302.title) -> "Copper Top" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pub" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:211101.title) -> "Cowboy in My Mind" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:200059.title) -> "Day In Day Out" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:210103.title) -> "Debutante" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:208203.title) -> "Don't Press Me" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154046	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Drinks With Friends" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:212402.title) -> "Everything Is Frozen" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:206101.title) -> "Far From Home" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:205203.title) -> "Fields of Home" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200052.title) -> "For the Benefit of a Song" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:208204.title) -> "From This Moment Til the Last" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:210104.title) -> "Full of Hope" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200073.title) -> "Getting Together" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200054.title) -> "Getting Warmer" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:208102.title) -> "Gonna See You Soon" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:206305.title) -> "Goodbye Tourists" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:212302.title) -> "Hannah" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:213301.title) -> "He Wasn't Good Enough" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:210301.title) -> "Hidden Places" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:206303.title) -> "High-Rises" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:210202.title) -> "Hill" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200003.title) -> "How Blue Are You?" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:205102.title) -> "Hurt you" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:208201.title) -> "I Feel Like a Wonder" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:209203.title) -> "I Feel Like Going North" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:208302.title) -> "I Need to Know" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:212104.title) -> "I Want You to Know" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200023.title) -> "I'll Carry On" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:206304.title) -> "I'm Beautiful" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:206201.title) -> "I'm Honest" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:206204.title) -> "I'm Not Alone" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:209201.title) -> "I'm the Wolf" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200011.title) -> "If You Know Me" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:210204.title) -> "Isabelle" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:205302.title) -> "It Ain't A Mystery" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:210303.title) -> "It's Up to You" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:206302.title) -> "Japan" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:204204.title) -> "Kidding Around" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:206301.title) -> "Leaving Town" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200039.title) -> "Little Folk" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:204302.title) -> "London" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200053.title) -> "Lovely Loretta" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200057.title) -> "Lucky in the Grass" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200063.title) -> "Maggie May I" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:209202.title) -> "Mean Old Dog Blues" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:213302.title) -> "Miami Nights" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:210302.title) -> "Moth" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:204203.title) -> "Out of Time" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:209101.title) -> "Paris Boy" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200082.title) -> "Piano Sonata No. 14 In C Sharp Minor, Op. 27 No. 2" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200081.title) -> "Piano Sonata No. 15 In D Major, Op. 28" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200083.title) -> "Piano Sonata No. 8 In C Minor, Op. 13" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:207202.title) -> "Piano Trio in D minor, Op. 10" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:207201.title) -> "Piano Trio in D minor, Op. 11" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:207203.title) -> "Piano Trio in D minor, Op. 9" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:211202.title) -> "Places I've Been" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200012.title) -> "Please Send Me Something" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:210205.title) -> "Possibly" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:210101.title) -> "Predator" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:205201.title) -> "Prison Blues" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:212203.title) -> "Queen Rose" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200056.title) -> "Roadside Attraction" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200013.title) -> "Rock With Me" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:200071.title) -> "Rooftop Garden" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:209102.title) -> "Sad Cat" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:212101.title) -> "Sleeper Hat" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (value from transaction cache)
**** debug	Sat Jun 23 12:02:34 IST 2012	1340433154062	/dynamusic/SongsRepository	getPropertyValue(song:211203.title) -> "Something Like That Can Happen" (value from transaction cache)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188031	/dynamusic/SongsRepository	getPropertyValue(song:212401.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188031	/dynamusic/SongsRepository	getPropertyValue(song:212401.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188031	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188031	/dynamusic/SongsRepository	getPropertyValue(song:212401.id) -> "212401" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188031	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188031	/dynamusic/SongsRepository	getPropertyValue(song:212401.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188031	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188031	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188109	/dynamusic/SongsRepository	getPropertyValue(song:204202.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188109	/dynamusic/SongsRepository	getPropertyValue(song:204202.artist) -> "100006" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188109	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188109	/dynamusic/SongsRepository	getPropertyValue(song:204202.id) -> "204202" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188109	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188109	/dynamusic/SongsRepository	getPropertyValue(song:204202.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188109	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188109	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188125	/dynamusic/SongsRepository	getPropertyValue(song:200022.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188125	/dynamusic/SongsRepository	getPropertyValue(song:200022.artist) -> "100002" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188125	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188125	/dynamusic/SongsRepository	getPropertyValue(song:200022.id) -> "200022" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188125	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188125	/dynamusic/SongsRepository	getPropertyValue(song:200022.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188125	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188125	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:207103.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:207103.artist) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:207103.id) -> "207103" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:207103.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:212301.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:212301.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:212301.id) -> "212301" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:212301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:212301.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188140	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:212201.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:212201.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:212201.id) -> "212201" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:212201.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:211122.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:211122.artist) -> "100014" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:211122.id) -> "211122" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:211122.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188156	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:200032.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:200032.artist) -> "100003" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:200032.id) -> "200032" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:200032.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:212403.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:212403.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:212403.id) -> "212403" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:212403.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:212403.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:213101.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188171	/dynamusic/SongsRepository	getPropertyValue(song:213101.artist) -> "100016" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:213101.id) -> "213101" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:213101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:213101.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:210203.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:210203.artist) -> "100013" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:210203.id) -> "210203" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:210203.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:212401.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:212401.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188187	/dynamusic/SongsRepository	getPropertyValue(song:212401.id) -> "212401" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188203	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188203	/dynamusic/SongsRepository	getPropertyValue(song:212401.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188203	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188203	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(song:204202.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(song:204202.artist) -> "100006" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(song:204202.id) -> "204202" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(song:204202.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(song:200022.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188218	/dynamusic/SongsRepository	getPropertyValue(song:200022.artist) -> "100002" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:200022.id) -> "200022" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:200022.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:207103.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:207103.artist) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:207103.id) -> "207103" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:207103.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:212301.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:212301.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:212301.id) -> "212301" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:212301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:212301.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188234	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(song:212201.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(song:212201.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(song:212201.id) -> "212201" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(song:212201.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(song:211122.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188250	/dynamusic/SongsRepository	getPropertyValue(song:211122.artist) -> "100014" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:211122.id) -> "211122" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:211122.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:200032.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:200032.artist) -> "100003" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:200032.id) -> "200032" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:200032.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:212403.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:212403.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:212403.id) -> "212403" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:212403.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:212403.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188265	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:213101.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:213101.artist) -> "100016" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:213101.id) -> "213101" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:213101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:213101.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:210203.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:210203.artist) -> "100013" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:210203.id) -> "210203" (id property)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:210203.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:03:08 IST 2012	1340433188281	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Sat Jun 23 12:11:17 IST 2012	1340433677828	/dynamusic/FeaturedSongs	getSongs method called,  returning  a list of [Ljava.lang.String;@260ea1
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693953	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693953	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693953	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693953	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693953	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693953	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693953	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693953	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693953	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	getPersistentItems(song:[200051, 200055, 200058, 200061, 200072, 204101, 204102, 204103, 204304, 206102, 206103, 206104, 206202, 210102, 212102, 212103, 212303, 213102])
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[1] = {pd} 200051 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[2] = {pd} 200055 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[3] = {pd} 200058 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[4] = {pd} 200061 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[5] = {pd} 200072 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[6] = {pd} 204101 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[7] = {pd} 204102 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[8] = {pd} 204103 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[9] = {pd} 204304 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[10] = {pd} 206102 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[11] = {pd} 206103 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[12] = {pd} 206104 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[13] = {pd} 206202 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[14] = {pd} 210102 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[15] = {pd} 212102 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[16] = {pd} 212103 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[17] = {pd} 212303 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	p[18] = {pd} 213102 (java.lang.String)
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200051.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200051.title, When I'm Young) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200051.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200051.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200055.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200055.title, With a Little Push) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200055.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200055.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200058.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200058.title, Wthout You What Am I) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200058.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200058.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200061.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200061.title, The Long Road) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200061.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200061.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.title, Something to Say) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.title, Tess) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.title, The Angels Wore Red) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204103.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204103.title, Watching the Waves) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204103.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.title, What's So Funny?) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.title, Store Window) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693968	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.title, Swimsong) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.title, You're Horrible) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206202.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206202.title, With Muriel) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206202.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.title, Voga) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212102.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212102.title, Temporary Misdemeanor) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212102.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212103.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212103.title, Visions of Annie) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212103.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.title, Take the Money) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213102.description, __NULL__) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213102.title, You Make Me Sing) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213102.genre, pop) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	getItems(artist: [100004, 100004, 100004, 100004, 100004, 100006, 100006, 100006, 100006, 100009, 100009, 100009, 100009, 100013, 100015, 100015, 100015, 100016])
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200051.artist, 100004) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200055.artist, 100004) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200058.artist, 100004) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200061.artist, 100004) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200072.artist, 100004) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204101.artist, 100006) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204102.artist, 100006) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204103.artist, 100006) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:204304.artist, 100006) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206102.artist, 100009) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206103.artist, 100009) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206104.artist, 100009) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:206202.artist, 100009) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:210102.artist, 100013) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212102.artist, 100015) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212103.artist, 100015) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:212303.artist, 100015) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:213102.artist, 100016) 
**** debug	Sat Jun 23 12:11:33 IST 2012	1340433693984	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:200058,song:210301,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:204103,song:206304,song:204102,song:206301,song:204101,song:206302,song:204203,song:204202,song:206102,song:204201,song:200052,song:200051,song:213103,song:206101,song:206104,song:200054,song:206103,song:200053,song:204304,song:213202,song:200056,song:200055,song:213203,song:204303,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 12:11:34 IST 2012	1340433694000	/dynamusic/SongsRepository	getPropertyValue(song:204302.title) -> "London" (cached with no transaction)
**** debug	Sat Jun 23 12:11:34 IST 2012	1340433694000	/dynamusic/SongsRepository	getPropertyValue(song:204302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:34 IST 2012	1340433694000	/dynamusic/SongsRepository	getPropertyValue(song:206103.title) -> "Swimsong" (cached with no transaction)
**** debug	Sat Jun 23 12:11:34 IST 2012	1340433694000	/dynamusic/SongsRepository	getPropertyValue(song:206103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:34 IST 2012	1340433694000	/dynamusic/SongsRepository	getPropertyValue(song:210301.title) -> "Hidden Places" (cached with no transaction)
**** debug	Sat Jun 23 12:11:34 IST 2012	1340433694000	/dynamusic/SongsRepository	getPropertyValue(song:210301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698109	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698109	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698109	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698109	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698109	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698109	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698109	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698109	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698125	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698125	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698140	/dynamusic/SongsRepository	getPropertyValue(song:200057.title) -> "Lucky in the Grass" (cached with no transaction)
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698140	/dynamusic/SongsRepository	getPropertyValue(song:200057.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698140	/dynamusic/SongsRepository	getPropertyValue(song:204203.title) -> "Out of Time" (cached with no transaction)
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698140	/dynamusic/SongsRepository	getPropertyValue(song:204203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698140	/dynamusic/SongsRepository	getPropertyValue(song:213301.title) -> "He Wasn't Good Enough" (cached with no transaction)
**** debug	Sat Jun 23 12:11:38 IST 2012	1340433698140	/dynamusic/SongsRepository	getPropertyValue(song:213301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699156	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699156	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699156	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699156	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699156	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699156	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699156	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699156	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699156	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699171	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699171	/dynamusic/SongsRepository	getPropertyValue(song:200057.title) -> "Lucky in the Grass" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699171	/dynamusic/SongsRepository	getPropertyValue(song:200057.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699171	/dynamusic/SongsRepository	getPropertyValue(song:213303.title) -> "Blue Piano" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699171	/dynamusic/SongsRepository	getPropertyValue(song:213303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699187	/dynamusic/SongsRepository	getPropertyValue(song:210102.title) -> "Voga" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699187	/dynamusic/SongsRepository	getPropertyValue(song:210102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699625	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699625	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699625	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699625	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699625	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699625	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699625	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699625	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699640	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699640	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699640	/dynamusic/SongsRepository	getPropertyValue(song:210302.title) -> "Moth" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699640	/dynamusic/SongsRepository	getPropertyValue(song:210302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699640	/dynamusic/SongsRepository	getPropertyValue(song:200057.title) -> "Lucky in the Grass" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699640	/dynamusic/SongsRepository	getPropertyValue(song:200057.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699640	/dynamusic/SongsRepository	getPropertyValue(song:210101.title) -> "Predator" (cached with no transaction)
**** debug	Sat Jun 23 12:11:39 IST 2012	1340433699640	/dynamusic/SongsRepository	getPropertyValue(song:210101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700062	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700062	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700062	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700062	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700062	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700062	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700062	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700062	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700078	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700078	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700078	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700078	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700078	/dynamusic/SongsRepository	getPropertyValue(song:200063.title) -> "Maggie May I" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700078	/dynamusic/SongsRepository	getPropertyValue(song:200063.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700078	/dynamusic/SongsRepository	getPropertyValue(song:200053.title) -> "Lovely Loretta" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700078	/dynamusic/SongsRepository	getPropertyValue(song:200053.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700484	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700500	/dynamusic/SongsRepository	getPropertyValue(song:206102.title) -> "Store Window" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700500	/dynamusic/SongsRepository	getPropertyValue(song:206102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700500	/dynamusic/SongsRepository	getPropertyValue(song:206104.title) -> "You're Horrible" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700500	/dynamusic/SongsRepository	getPropertyValue(song:206104.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700500	/dynamusic/SongsRepository	getPropertyValue(song:204304.title) -> "What's So Funny?" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700500	/dynamusic/SongsRepository	getPropertyValue(song:204304.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700921	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700937	/dynamusic/SongsRepository	getPropertyValue(song:200053.title) -> "Lovely Loretta" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700937	/dynamusic/SongsRepository	getPropertyValue(song:200053.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700937	/dynamusic/SongsRepository	getPropertyValue(song:204302.title) -> "London" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700937	/dynamusic/SongsRepository	getPropertyValue(song:204302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700937	/dynamusic/SongsRepository	getPropertyValue(song:206302.title) -> "Japan" (cached with no transaction)
**** debug	Sat Jun 23 12:11:40 IST 2012	1340433700937	/dynamusic/SongsRepository	getPropertyValue(song:206302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	getPropertyValue(song:212301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	getPropertyValue(song:213303.title) -> "Blue Piano" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701296	/dynamusic/SongsRepository	getPropertyValue(song:213303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701312	/dynamusic/SongsRepository	getPropertyValue(song:200059.title) -> "Day In Day Out" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701312	/dynamusic/SongsRepository	getPropertyValue(song:200059.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701718	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701718	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701718	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701718	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701718	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701718	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701718	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701718	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701734	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701734	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701750	/dynamusic/SongsRepository	getPropertyValue(song:200058.title) -> "Wthout You What Am I" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701750	/dynamusic/SongsRepository	getPropertyValue(song:200058.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701750	/dynamusic/SongsRepository	getPropertyValue(song:213102.title) -> "You Make Me Sing" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701750	/dynamusic/SongsRepository	getPropertyValue(song:213102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701750	/dynamusic/SongsRepository	getPropertyValue(song:210205.title) -> "Possibly" (cached with no transaction)
**** debug	Sat Jun 23 12:11:41 IST 2012	1340433701750	/dynamusic/SongsRepository	getPropertyValue(song:210205.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713187	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713187	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713187	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713187	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713187	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713187	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713187	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	getPropertyValue(song:213101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:11:53 IST 2012	1340433713203	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718687	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718703	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718703	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718703	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718703	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718703	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718703	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718703	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:11:58 IST 2012	1340433718703	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719562	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719578	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719578	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719578	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719593	/dynamusic/SongsRepository	getPropertyValue(song:213101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719593	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719593	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719593	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 12:11:59 IST 2012	1340433719593	/dynamusic/SongsRepository	getPropertyValue(song:212403.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722640	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722656	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722656	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722671	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722671	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722671	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722671	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722671	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:12:02 IST 2012	1340433722671	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723312	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723890	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723906	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723906	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723906	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723906	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723906	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:12:03 IST 2012	1340433723906	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724312	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724328	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724328	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724328	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724328	/dynamusic/SongsRepository	getPropertyValue(song:212403.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724328	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724328	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724656	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724671	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724671	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724671	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724671	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724671	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724671	/dynamusic/SongsRepository	getPropertyValue(song:213101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724953	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724968	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724968	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724968	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724968	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724968	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724968	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724968	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:12:04 IST 2012	1340433724968	/dynamusic/SongsRepository	getPropertyValue(song:213101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725234	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725250	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725250	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725250	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725250	/dynamusic/SongsRepository	getPropertyValue(song:212301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725250	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725250	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725250	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725250	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725500	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725500	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725500	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725500	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725500	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725500	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725500	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725515	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725531	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725531	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725734	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725750	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725750	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725750	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725750	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725750	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725750	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:05 IST 2012	1340433725984	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726000	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726000	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726000	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726000	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726000	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726000	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726000	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726000	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726140	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726156	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726156	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726156	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726156	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726156	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:12:06 IST 2012	1340433726156	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	getPersistentItems(song:[200033, 200036, 200038, 200040, 200041, 200042, 200044])
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	p[1] = {pd} 200033 (java.lang.String)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	p[2] = {pd} 200036 (java.lang.String)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	p[3] = {pd} 200038 (java.lang.String)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	p[4] = {pd} 200040 (java.lang.String)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	p[5] = {pd} 200041 (java.lang.String)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	p[6] = {pd} 200042 (java.lang.String)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	p[7] = {pd} 200044 (java.lang.String)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733671	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200033.description, __NULL__) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200033.title, Sweetie Pie) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200033.genre, jazz) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200033.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.description, __NULL__) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.title, Something Wild) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.genre, jazz) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.description, __NULL__) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.title, Swing In) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.genre, jazz) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200040.description, __NULL__) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200040.title, What am I Doing Here?) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200040.genre, jazz) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200040.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200041.description, __NULL__) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733687	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200041.title, Take the Last Train) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200041.genre, jazz) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200041.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200042.description, __NULL__) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200042.title, To You I Sing) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200042.genre, jazz) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200042.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200044.description, __NULL__) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200044.title, Until I First Saw You) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200044.genre, jazz) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200044.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	getItems(artist: [100003, 100003, 100003, 100003, 100003, 100003, 100003])
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200033.artist, 100003) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200036.artist, 100003) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200038.artist, 100003) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200040.artist, 100003) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200041.artist, 100003) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200042.artist, 100003) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200044.artist, 100003) 
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733703	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733718	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (cached with no transaction)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733718	/dynamusic/SongsRepository	getPropertyValue(song:200034.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733718	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733718	/dynamusic/SongsRepository	getPropertyValue(song:200031.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733718	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Drinks With Friends" (cached with no transaction)
**** debug	Sat Jun 23 12:12:13 IST 2012	1340433733718	/dynamusic/SongsRepository	getPropertyValue(song:200037.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735781	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735796	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735796	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735796	/dynamusic/SongsRepository	getPropertyValue(song:200044.title) -> "Until I First Saw You" (cached with no transaction)
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735796	/dynamusic/SongsRepository	getPropertyValue(song:200044.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735796	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 12:12:15 IST 2012	1340433735796	/dynamusic/SongsRepository	getPropertyValue(song:200031.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736234	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736234	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736234	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736234	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736234	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736234	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736234	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736234	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736250	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736250	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736250	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Drinks With Friends" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736250	/dynamusic/SongsRepository	getPropertyValue(song:200037.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736250	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pub" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736250	/dynamusic/SongsRepository	getPropertyValue(song:200035.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736250	/dynamusic/SongsRepository	getPropertyValue(song:200041.title) -> "Take the Last Train" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736250	/dynamusic/SongsRepository	getPropertyValue(song:200041.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736500	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736515	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736515	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736515	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736515	/dynamusic/SongsRepository	getPropertyValue(song:200034.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736515	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736515	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736703	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736718	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736718	/dynamusic/SongsRepository	getPropertyValue(song:200031.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736718	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736718	/dynamusic/SongsRepository	getPropertyValue(song:200036.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736718	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736718	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736921	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736921	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736921	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736921	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736921	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736921	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736921	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736921	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736937	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736937	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736937	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736937	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736937	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736937	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736937	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:12:16 IST 2012	1340433736937	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737140	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737140	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737140	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737140	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737140	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737140	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737140	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737140	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737140	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737156	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737156	/dynamusic/SongsRepository	getPropertyValue(song:200039.title) -> "Little Folk" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737156	/dynamusic/SongsRepository	getPropertyValue(song:200039.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737156	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pub" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737156	/dynamusic/SongsRepository	getPropertyValue(song:200035.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737156	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737156	/dynamusic/SongsRepository	getPropertyValue(song:200036.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737359	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737375	/dynamusic/SongsRepository	getPropertyValue(song:200044.title) -> "Until I First Saw You" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737375	/dynamusic/SongsRepository	getPropertyValue(song:200044.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737375	/dynamusic/SongsRepository	getPropertyValue(song:200041.title) -> "Take the Last Train" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737375	/dynamusic/SongsRepository	getPropertyValue(song:200041.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737375	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737375	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737562	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737578	/dynamusic/SongsRepository	getPropertyValue(song:200044.title) -> "Until I First Saw You" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737578	/dynamusic/SongsRepository	getPropertyValue(song:200044.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737765	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737765	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737765	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737765	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737765	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737765	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737765	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737765	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737781	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737781	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737781	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737781	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737781	/dynamusic/SongsRepository	getPropertyValue(song:200041.title) -> "Take the Last Train" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737781	/dynamusic/SongsRepository	getPropertyValue(song:200041.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737781	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737781	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	getPropertyValue(song:200043.title) -> "Battle Road" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	getPropertyValue(song:200043.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pub" (cached with no transaction)
**** debug	Sat Jun 23 12:12:17 IST 2012	1340433737968	/dynamusic/SongsRepository	getPropertyValue(song:200035.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738140	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738140	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738140	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738140	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738140	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738140	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738140	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738140	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738140	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738156	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738156	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738156	/dynamusic/SongsRepository	getPropertyValue(song:200036.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738156	/dynamusic/SongsRepository	getPropertyValue(song:200039.title) -> "Little Folk" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738156	/dynamusic/SongsRepository	getPropertyValue(song:200039.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738156	/dynamusic/SongsRepository	getPropertyValue(song:200041.title) -> "Take the Last Train" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738156	/dynamusic/SongsRepository	getPropertyValue(song:200041.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738312	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738328	/dynamusic/SongsRepository	getPropertyValue(song:200041.title) -> "Take the Last Train" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738328	/dynamusic/SongsRepository	getPropertyValue(song:200041.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738328	/dynamusic/SongsRepository	getPropertyValue(song:200042.title) -> "To You I Sing" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738328	/dynamusic/SongsRepository	getPropertyValue(song:200042.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738328	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738328	/dynamusic/SongsRepository	getPropertyValue(song:200034.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738468	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738484	/dynamusic/SongsRepository	getPropertyValue(song:200043.title) -> "Battle Road" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738484	/dynamusic/SongsRepository	getPropertyValue(song:200043.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738484	/dynamusic/SongsRepository	getPropertyValue(song:200044.title) -> "Until I First Saw You" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738484	/dynamusic/SongsRepository	getPropertyValue(song:200044.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738484	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 12:12:18 IST 2012	1340433738484	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201359	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201375	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201375	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201375	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201375	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201375	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 12:20:01 IST 2012	1340434201375	/dynamusic/SongsRepository	getPropertyValue(song:200031.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208000	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208000	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208000	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208000	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208000	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208000	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208000	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	getPropertyValue(song:213101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:20:08 IST 2012	1340434208015	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214109	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214125	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214125	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214125	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214125	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214125	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:20:14 IST 2012	1340434214125	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	getPropertyValue(song:212301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:21:21 IST 2012	1340434281781	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 12:21:26 IST 2012	1340434286046	/dynamusic/SongsRepository	getItems(artist: [100011])
**** debug	Sat Jun 23 12:21:26 IST 2012	1340434286062	/dynamusic/SongsRepository	getPropertyValue(artist:100011.id) -> "100011" (id property)
**** debug	Sat Jun 23 12:21:26 IST 2012	1340434286062	/dynamusic/SongsRepository	getPropertyValue(artist:100011.name) -> "Autumn Winters" (cached with no transaction)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335671	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335687	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335687	/dynamusic/SongsRepository	getPropertyValue(song:212301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335687	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335687	/dynamusic/SongsRepository	getPropertyValue(song:212403.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335687	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:22:15 IST 2012	1340434335687	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348546	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348562	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348562	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348562	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348562	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348562	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348562	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348562	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:22:28 IST 2012	1340434348578	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 12:22:36 IST 2012	1340434356140	/dynamusic/SongsRepository	getItems(artist: [100016])
**** debug	Sat Jun 23 12:22:36 IST 2012	1340434356140	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Sat Jun 23 12:22:36 IST 2012	1340434356140	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533968	/dynamusic/SongsRepository	getPropertyValue(song:212401.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533968	/dynamusic/SongsRepository	getPropertyValue(song:212401.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533968	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533968	/dynamusic/SongsRepository	getPropertyValue(song:212401.id) -> "212401" (id property)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533968	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533968	/dynamusic/SongsRepository	getPropertyValue(song:212401.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533968	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533968	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:204202.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:204202.artist) -> "100006" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:204202.id) -> "204202" (id property)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:204202.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:200022.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:200022.artist) -> "100002" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:200022.id) -> "200022" (id property)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:200022.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 12:25:33 IST 2012	1340434533984	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:207103.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:207103.artist) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:207103.id) -> "207103" (id property)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:207103.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212301.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212301.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212301.id) -> "212301" (id property)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212301.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212201.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212201.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212201.id) -> "212201" (id property)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534000	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:212201.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:211122.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:211122.artist) -> "100014" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:211122.id) -> "211122" (id property)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:211122.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:200032.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:200032.artist) -> "100003" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:200032.id) -> "200032" (id property)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:200032.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534015	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:212403.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:212403.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:212403.id) -> "212403" (id property)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:212403.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:212403.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:213101.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:213101.artist) -> "100016" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:213101.id) -> "213101" (id property)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:213101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:213101.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534031	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534046	/dynamusic/SongsRepository	getPropertyValue(song:210203.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534046	/dynamusic/SongsRepository	getPropertyValue(song:210203.artist) -> "100013" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534046	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534046	/dynamusic/SongsRepository	getPropertyValue(song:210203.id) -> "210203" (id property)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534046	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534046	/dynamusic/SongsRepository	getPropertyValue(song:210203.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534046	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 12:25:34 IST 2012	1340434534046	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=album)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	 {{all}}
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722765	/dynamusic/SongsRepository	count: all, num = 38
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	 SELECT t1.id,t1.title
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	 ORDER BY t1.title ASC
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	getItems(album: [300093, 300043, 300061, 300071, 300124, 300041, 300063, 300003, 300091, 300001, 300133, 300131, 300062, 300072, 300112, 300022, 300123, 300002, 300042, 300021, 300052, 300103, 300011, 300101, 300121, 300082, 300102, 300012, 300081, 300031, 300132, 300051, 300122, 300023, 300092, 300111, 300053, 300083])
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	getPersistentItems(album:[300093, 300043, 300061, 300071, 300124, 300041, 300063, 300003, 300091, 300001, 300133, 300131, 300062, 300072, 300112, 300022, 300123, 300002, 300042, 300021, 300052, 300103, 300011, 300101, 300121, 300082, 300102, 300012, 300081, 300031, 300132, 300051, 300122, 300023, 300092, 300111, 300053, 300083])
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	 SELECT t1.id,t1.description,t1.cover,t1.artist,t1.published,t1.title
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[1] = {pd} 300093 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[2] = {pd} 300043 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[3] = {pd} 300061 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[4] = {pd} 300071 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[5] = {pd} 300124 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[6] = {pd} 300041 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[7] = {pd} 300063 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[8] = {pd} 300003 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[9] = {pd} 300091 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[10] = {pd} 300001 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[11] = {pd} 300133 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[12] = {pd} 300131 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[13] = {pd} 300062 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[14] = {pd} 300072 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[15] = {pd} 300112 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[16] = {pd} 300022 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[17] = {pd} 300123 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[18] = {pd} 300002 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[19] = {pd} 300042 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[20] = {pd} 300021 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[21] = {pd} 300052 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[22] = {pd} 300103 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[23] = {pd} 300011 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[24] = {pd} 300101 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[25] = {pd} 300121 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[26] = {pd} 300082 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[27] = {pd} 300102 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[28] = {pd} 300012 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[29] = {pd} 300081 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[30] = {pd} 300031 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[31] = {pd} 300132 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[32] = {pd} 300051 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[33] = {pd} 300122 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[34] = {pd} 300023 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[35] = {pd} 300092 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[36] = {pd} 300111 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[37] = {pd} 300053 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	p[38] = {pd} 300083 (java.lang.String)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722781	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722796	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.description, An essential recording of the legendary Paris concert that cemented his reputation as a ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722796	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.coverURL, images/LiveInParis.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.date, 3/4/1977 11:06:00) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.title, Live In Paris) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.description, This release illustrates just how far Bluetone has come in his career.  A series of guest shots by such artists as ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.coverURL, images/RainySunday.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.date, 11/4/1997 09:30:00) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.title, Rainy Sunday) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.description, Opting for simplicity this time around, Dexter Bluetone gets by with a little help from his seasoned backing band, producing an album that's evocative of...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.coverURL, images/HoneyBee.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.date, 10/20/1998 10:49:00) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.title, Honey Bee) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300011.description, Buddy Longfellow Johnson's band endured because of its leader's uncanny ability to put together fresh arrangements and strong soloists while ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300011.coverURL, images/SomethingWild.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300011.date, 7/26/1955 10:47:37) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300011.title, Something Wild) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300012.description, One of the greatest big bands in jazz history, this rousing album ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300012.coverURL, images/SwingShift.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300012.date, 4/27/1999 11:53:00) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300012.title, Swing Shift) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300021.description, Before this album, no one seriously thought of rock music as art. That all changed when ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300021.coverURL, images/RoadsideAttraction.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300021.date, 6/1/1967 09:35:00) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300021.title, Roadside Attraction) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300022.description, This debut album emerged on the scene and immediately caught the world's attention ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300022.coverURL, images/PresBrightonBramblers.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300022.date, 5/8/1970 11:58:00) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300022.title, Presenting The Brighton Bramblers) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300023.description, The Brighton Bramblers' last days as a band were as productive as any major pop phenomenon that was about to break up ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300023.coverURL, images/TheRedAndTheBlack.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300023.date, 9/26/1969 10:40:37) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300023.title, The Red And The Black) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300031.description, This collection by pianist Tobey Jeffries brings together twenty-two of Bee's most beautiful and memorable...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300031.coverURL, images/TheCompleteSymphonies.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300031.date, 8/26/1997 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300031.title, The Complete Symphonies) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300041.description, Elwin Redshoes kicked off his debut album with a ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300041.coverURL, images/EightDays.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300041.date, 8/26/1977 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300041.title, Eight Days) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300042.description, By far the most ambitious album of Redshoes' early career, Red Flag was originally intended ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300042.coverURL, images/RedFlag.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300042.date, 7/6/1982 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300042.title, Red Flag) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300043.description, Less hot under the collar than his debut, Candy Cigarettes was partly inspired by Redshoes' 1978 world tour. The songs are...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300043.coverURL, images/CandyCigarettes.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300043.date, 9/24/1979 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300043.title, Candy Cigarettes) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.description, The Man From Texas, which draws on Grassfield's original songs as well as those by ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.coverURL, images/TheManFromTexas.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.date, 3/4/2003 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.title, The Man From Texas) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.description, Charlie Grassfield had been breaking new ground for a decade when Runaway Train suddenly made the world at large take notice. ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.coverURL, images/RunawayTrain.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.date, 2/2/1968 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.title, Runaway Train) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.description, Perhaps this should have been titled The Freewheelin' Charlie Grassfield in homage to the watershed ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.coverURL, images/WelcomeToTheNewWorld.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722843	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.date, 6/6/1965 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.title, Welcome To The New World) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300061.description, City Life is a rock album realized on an epic scale. Most of its 12 songs are ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300061.coverURL, images/CityLife.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300061.date, 5/2/1989 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300061.title, City Life) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300062.description, Released in 1987, this album mixed anger and humor in a celebration of ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300062.coverURL, images/OnThisIsland.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300062.date, 7/7/1987 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300062.title, On This Island) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300063.description, His masterpiece, this album was the culmination of many years spent ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300063.coverURL, images/GoodbyeTourists.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300063.date, 1/21/1980 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300063.title, Goodbye Tourists) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300071.description, Unlike most composer/pianists, Vladimir's instrumental prowess was commensurate with his compositional talents ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300071.coverURL, images/ConcertoNo2.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300071.date, 8/16/1994 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300071.title, Concerto No. 2) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300072.description, A definitive collection of Vladimir's signature work ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300072.coverURL, images/PianoSonatas.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300072.date, 10/24/2001 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300072.title, Piano Sonatas) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300081.description, The Charlie Grassfield Songbook, her first new release in five years, is Autumn Winters' tribute to the great ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300081.coverURL, images/CGrassfieldSongbook.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300081.date, 11/9/2002 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300081.title, The Charlie Grassfield Songbook) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300082.description, The quiet success of Autumn Winter's previous album, Women and Men, proved that the world was ready for a combination of ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300082.coverURL, images/Summer.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300082.date, 11/4/1997 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300082.title, Summer) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300083.description, Autumn Winters comes full circle on this album, cowriting 11 out of 12 cuts and proving that she can do more than sing. Once again she ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300083.coverURL, images/WomenAndMen.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300083.date, 2/7/1995 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300083.title, Women and Men) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722859	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300091.description, Capturing Wilson where he's at his best, on stage and improvisational, this celebrated release set the high-water mark for ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300091.coverURL, images/LiveInMontreal.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300091.date, 5/7/1977 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300091.title, Live In Montreal) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300092.description, A commercial disappointment upon its release, this difficult and artful set has since been reconsidered, and is now ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300092.coverURL, images/TheWolf.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300092.date, 4/14/1981 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300092.title, The Wolf) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300093.description, They don't call him 'Dynamo' for nothing!  This high-energy, passionate masterpiece was a validation for Wilson after ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300093.coverURL, images/BringOnTheNight.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300093.date, 8/5/1989 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300093.title, Bring On The Night) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.description, Headline-grabbing personal upheavals turn into introspective surges on Squiggle, the third album by Frida Jetsen. Driven inward after a ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.coverURL, images/Squiggle.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.date, 8/23/1997 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.title, Squiggle) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.description, This marvel is such an original that she remains an acquired taste. The second album proves more challenging than her debut. ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.coverURL, images/Swans.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.date, 6/13/1995 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.title, Swans) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.description, Ever since Frida Jetsen's vital, effusive 1993 debut, her music has been increasingly intimate and gently private. It's typical then that Sleeper's first single ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.coverURL, images/Sleeper.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.date, 8/28/2001 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.title, Sleeper) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300111.description, This easy-listening collection features a generous 14 cuts, heavy on ballads with ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300111.coverURL, images/Tumbleweeds.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300111.date, 4/24/2001 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300111.title, Tumbleweeds) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300112.description, The pop raucousness of the opening track seems like a statement of purpose for Travis B., whose fifth album strikes a more ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300112.coverURL, images/PlacesIveBeen.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300112.date, 5/4/1999 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722875	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300112.title, Places I've Been) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300121.description, Considered an unprecedented masterpiece when it arrived on two records in May of 1966, Stardust featured Singer continuing ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300121.coverURL, images/Stardust.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300121.date, 5/5/1966 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300121.title, Stardust) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300122.description, Singer was virtually pouring out great songs when this masterpiece arrived in the summer of 1965. From the opening of ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300122.coverURL, images/TheManhattanAlbum.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300122.date, 7/7/1965 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300122.title, The Manhattan Album) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300123.description, Inevitably, when critics praise a new Singer album, they label it the "best since Purple Roses," and with good reason. Inspired by a ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300123.coverURL, images/PurpleRoses.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300123.date, 1/17/1975 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300123.title, Purple Roses) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300124.description, The 90's were a particularly shifting, uncertain decade for Woody Singer's unique voice. But he capped it off with his first album of all-original material in several years ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300124.coverURL, images/Crimes.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300124.date, 9/19/1989 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300124.title, Crimes) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300131.description, Kiki Shoppington released her second album "No Regrets" in 1996 and it was an instant smash. It gave her some of the biggest hits of her career including two #1 singles. ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300131.coverURL, images/NoRegrets.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300131.date, 6/18/1996 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300131.title, No Regrets) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300132.description, This perfect matchup of singer, song, and producer, this award-winning debut introduced the world to Kiki Shoppington's ...) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300132.coverURL, images/TheFirstAlbum.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300132.date, 4/25/2000 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300132.title, The First Album) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300133.description, After a nearly four-year absence from recording, Kiki returns with Miami Nights, her third album. Mixing ballads and uptempo dance tracks ... ) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300133.coverURL, images/MiamiNights.jpg) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300133.date, 7/13/1993 10:53:16) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300133.title, Miami Nights) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722890	/dynamusic/SongsRepository	getItems(artist: [100002, 100002, 100002, 100003, 100003, 100004, 100004, 100004, 100005, 100006, 100006, 100006, 100007, 100007, 100007, 100009, 100009, 100009, 100010, 100010, 100011, 100011, 100011, 100012, 100012, 100012, 100013, 100013, 100013, 100014, 100014, 100015, 100015, 100015, 100015, 100016, 100016, 100016])
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.artist, 100002) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300002.artist, 100002) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.artist, 100002) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300011.artist, 100003) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300012.artist, 100003) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300021.artist, 100004) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300022.artist, 100004) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300023.artist, 100004) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300031.artist, 100005) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300041.artist, 100006) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300042.artist, 100006) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300043.artist, 100006) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.artist, 100007) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300052.artist, 100007) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.artist, 100007) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300061.artist, 100009) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300062.artist, 100009) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300063.artist, 100009) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300071.artist, 100010) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300072.artist, 100010) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300081.artist, 100011) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300082.artist, 100011) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300083.artist, 100011) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300091.artist, 100012) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300092.artist, 100012) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300093.artist, 100012) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300101.artist, 100013) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300102.artist, 100013) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300103.artist, 100013) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300111.artist, 100014) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300112.artist, 100014) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300121.artist, 100015) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300122.artist, 100015) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300123.artist, 100015) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300124.artist, 100015) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300131.artist, 100016) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300132.artist, 100016) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300133.artist, 100016) 
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	executeQuery(album,0,101,all) -> [album:300093,album:300043,album:300061,album:300071,album:300124,album:300041,album:300063,album:300003,album:300091,album:300001,album:300133,album:300131,album:300062,album:300072,album:300112,album:300022,album:300123,album:300002,album:300042,album:300021,album:300052,album:300103,album:300011,album:300101,album:300121,album:300082,album:300102,album:300012,album:300081,album:300031,album:300132,album:300051,album:300122,album:300023,album:300092,album:300111,album:300053,album:300083] (db sort: ORDER BY title ASC USECASE)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300041.title) -> "Eight Days" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300133.title) -> "Miami Nights" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300131.title) -> "No Regrets" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300062.title) -> "On This Island" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300072.title) -> "Piano Sonatas" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300112.title) -> "Places I've Been" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300022.title) -> "Presenting The Brighton Bramblers" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300123.title) -> "Purple Roses" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300002.title) -> "Rainy Sunday" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300042.title) -> "Red Flag" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300021.title) -> "Roadside Attraction" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300103.title) -> "Sleeper" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300011.title) -> "Something Wild" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300101.title) -> "Squiggle" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300121.title) -> "Stardust" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300082.title) -> "Summer" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300102.title) -> "Swans" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300012.title) -> "Swing Shift" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300081.title) -> "The Charlie Grassfield Songbook" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300031.title) -> "The Complete Symphonies" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300132.title) -> "The First Album" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300122.title) -> "The Manhattan Album" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300023.title) -> "The Red And The Black" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722906	/dynamusic/SongsRepository	getPropertyValue(album:300111.title) -> "Tumbleweeds" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722921	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (value from transaction cache)
**** debug	Sat Jun 23 13:02:02 IST 2012	1340436722921	/dynamusic/SongsRepository	getPropertyValue(album:300083.title) -> "Women and Men" (value from transaction cache)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	getPropertyValue(album:300071.description) -> "Unlike most composer/pianists, Vladimir's instrumental prowess was commensurate with his compositional talents ..." (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	p[1] = {pd} 300071 (java.lang.String)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	getItems(song: [207101, 207103, 207102])
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300071.songList, 207103,207101,207102) 
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723343	/dynamusic/SongsRepository	getPropertyValue(album:300071.songList) -> "207103,207101,207102" (value from database)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(album:300071.coverURL) -> "images/ConcertoNo2.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(album:300071.artist) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(album:300071.date) -> "8/16/1994 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(album:300071.id) -> "300071" (id property)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	p[1] = {pd} 300071 (java.lang.String)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getItems(artist: [100010])
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300071.artists, 100010) 
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(album:300071.artists) -> "100010" (value from database)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(song:207101.title) -> "Concerto No. 1, Op. 3" (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(song:207102.title) -> "Concerto No. 1, Op. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:02:03 IST 2012	1340436723359	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735031	/dynamusic/SongsRepository	getPropertyValue(album:300071.description) -> "Unlike most composer/pianists, Vladimir's instrumental prowess was commensurate with his compositional talents ..." (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735031	/dynamusic/SongsRepository	getPropertyValue(album:300071.songList) -> "207103,207101,207102" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735031	/dynamusic/SongsRepository	getPropertyValue(album:300071.coverURL) -> "images/ConcertoNo2.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(album:300071.artist) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(album:300071.date) -> "8/16/1994 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(album:300071.id) -> "300071" (id property)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(album:300071.artists) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(song:207101.title) -> "Concerto No. 1, Op. 3" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(song:207102.title) -> "Concerto No. 1, Op. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=artist)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	 {{all}}
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735046	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	count: all, num = 14
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	 SELECT t1.id,t1.name
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	 ORDER BY t1.name ASC
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getItems(artist: [100011, 100003, 100007, 100002, 100006, 100013, 100016, 100005, 100012, 100004, 100009, 100014, 100010, 100015])
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	executeQuery(artist,0,101,all) -> [artist:100011,artist:100003,artist:100007,artist:100002,artist:100006,artist:100013,artist:100016,artist:100005,artist:100012,artist:100004,artist:100009,artist:100014,artist:100010,artist:100015] (db sort: ORDER BY name ASC USECASE)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100011.name) -> "Autumn Winters" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735062	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	getPropertyValue(artist:100016.description) -> "Revealing a maturity way beyond her years, Kiki Shoppington's debut was an immediate hit, earning her countless industry awards and a legion of devoted fans ..." (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	getPropertyValue(artist:100016.photoURL) -> "images/KikiShoppington.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	getPropertyValue(artist:100016.artistGenre) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	loadSet(albums)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	 SELECT album_id
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	  WHERE artist_id=?
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	p[1] = {pd} 100016 (java.lang.String)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735546	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735562	/dynamusic/SongsRepository	getItems(album: [300132, 300131, 300133])
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735562	/dynamusic/SongsRepository	loadingPropertyFromDatabase(artist:100016.albums, 300133,300132,300131) 
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735562	/dynamusic/SongsRepository	getPropertyValue(artist:100016.albums) -> "300131,300133,300132" (value from database)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735562	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735562	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735562	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735562	/dynamusic/SongsRepository	getPropertyValue(album:300131.title) -> "No Regrets" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735562	/dynamusic/SongsRepository	getPropertyValue(album:300133.title) -> "Miami Nights" (cached with no transaction)
**** debug	Sat Jun 23 13:02:15 IST 2012	1340436735562	/dynamusic/SongsRepository	getPropertyValue(album:300132.title) -> "The First Album" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(artist:100016.description) -> "Revealing a maturity way beyond her years, Kiki Shoppington's debut was an immediate hit, earning her countless industry awards and a legion of devoted fans ..." (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(artist:100016.photoURL) -> "images/KikiShoppington.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(artist:100016.artistGenre) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(artist:100016.albums) -> "300133,300132,300131" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(album:300131.title) -> "No Regrets" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(album:300133.title) -> "Miami Nights" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739859	/dynamusic/SongsRepository	getPropertyValue(album:300132.title) -> "The First Album" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739875	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=song)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739875	/dynamusic/SongsRepository	 {{all}}
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	count: all, num = 141
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	 SELECT t1.id,t1.title
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	 ORDER BY t1.title ASC
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739890	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getItems(song: [209303, 200064, 204301, 212401, 213201, 208301, 210201, 209103, 200043, 204201, 200031, 204303, 213303, 200022, 204202, 213103, 213202, 209301, 212202, 212301, 213203, 206203, 200062, 207103, 207102, 207101, 209302, 200035, 211101, 200059, 210103, 200034, 208203, 200037, 212402, 206101, 205203, 200052, 208204, 210104, 200073, 200054, 208102, 206305, 212302, 213301, 210301, 206303, 210202, 200003, 205102, 208201, 209203, 208302, 212104, 200023, 206304, 206201, 206204, 209201, 200011, 210204, 205302, 210303, 206302, 204204, 211122, 206301, 200039, 204302, 212201, 200053, 200057, 200063, 200032, 209202, 213302, 212403, 210302, 204203, 209101, 200082, 200081, 200083, 207202, 207201, 207203, 211202, 213101, 200012, 210205, 210101, 205201, 212203, 200056, 200013, 200071, 209102, 212101, 210203, 211203])
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	executeQuery(song,0,101,all) -> [song:209303,song:200064,song:204301,song:212401,song:213201,song:208301,song:210201,song:209103,song:200043,song:204201,song:200031,song:204303,song:213303,song:200022,song:204202,song:213103,song:213202,song:209301,song:212202,song:212301,song:213203,song:206203,song:200062,song:207103,song:207102,song:207101,song:209302,song:200035,song:211101,song:200059,song:210103,song:200034,song:208203,song:200037,song:212402,song:206101,song:205203,song:200052,song:208204,song:210104,song:200073,song:200054,song:208102,song:206305,song:212302,song:213301,song:210301,song:206303,song:210202,song:200003,song:205102,song:208201,song:209203,song:208302,song:212104,song:200023,song:206304,song:206201,song:206204,song:209201,song:200011,song:210204,song:205302,song:210303,song:206302,song:204204,song:211122,song:206301,song:200039,song:204302,song:212201,song:200053,song:200057,song:200063,song:200032,song:209202,song:213302,song:212403,song:210302,song:204203,song:209101,song:200082,song:200081,song:200083,song:207202,song:207201,song:207203,song:211202,song:213101,song:200012,song:210205,song:210101,song:205201,song:212203,song:200056,song:200013,song:200071,song:209102,song:212101,song:210203,song:211203] (db sort: ORDER BY title ASC USECASE)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:209303.title) -> "22 Years" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:200064.title) -> "A Fool in Paradise" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:204301.title) -> "Accidents Waiting To Happen" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:213201.title) -> "Another Sad Song" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:208301.title) -> "Any Man Can See" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:210201.title) -> "Army Ant" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:209103.title) -> "Baby Has the Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:200043.title) -> "Battle Road" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:204201.title) -> "Beyond Relief" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:204303.title) -> "Blue Blanket" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:213303.title) -> "Blue Piano" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739906	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:213103.title) -> "Break My Heart" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:213202.title) -> "Breath of Love" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:209301.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:212202.title) -> "Broadway Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:213203.title) -> "Candlelight Song" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:206203.title) -> "Chuck" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:200062.title) -> "Coal Miner" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:207102.title) -> "Concerto No. 1, Op. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:207101.title) -> "Concerto No. 1, Op. 3" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:209302.title) -> "Copper Top" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pub" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:211101.title) -> "Cowboy in My Mind" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:200059.title) -> "Day In Day Out" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:210103.title) -> "Debutante" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:208203.title) -> "Don't Press Me" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Drinks With Friends" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:212402.title) -> "Everything Is Frozen" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:206101.title) -> "Far From Home" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:205203.title) -> "Fields of Home" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:200052.title) -> "For the Benefit of a Song" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:208204.title) -> "From This Moment Til the Last" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:210104.title) -> "Full of Hope" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:200073.title) -> "Getting Together" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:200054.title) -> "Getting Warmer" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:208102.title) -> "Gonna See You Soon" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:206305.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:212302.title) -> "Hannah" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:213301.title) -> "He Wasn't Good Enough" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:210301.title) -> "Hidden Places" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:206303.title) -> "High-Rises" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:210202.title) -> "Hill" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:200003.title) -> "How Blue Are You?" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:205102.title) -> "Hurt you" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:208201.title) -> "I Feel Like a Wonder" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:209203.title) -> "I Feel Like Going North" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:208302.title) -> "I Need to Know" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739921	/dynamusic/SongsRepository	getPropertyValue(song:212104.title) -> "I Want You to Know" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200023.title) -> "I'll Carry On" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:206304.title) -> "I'm Beautiful" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:206201.title) -> "I'm Honest" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:206204.title) -> "I'm Not Alone" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:209201.title) -> "I'm the Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200011.title) -> "If You Know Me" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:210204.title) -> "Isabelle" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:205302.title) -> "It Ain't A Mystery" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:210303.title) -> "It's Up to You" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:206302.title) -> "Japan" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:204204.title) -> "Kidding Around" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:206301.title) -> "Leaving Town" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200039.title) -> "Little Folk" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:204302.title) -> "London" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200053.title) -> "Lovely Loretta" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200057.title) -> "Lucky in the Grass" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200063.title) -> "Maggie May I" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:209202.title) -> "Mean Old Dog Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:213302.title) -> "Miami Nights" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:210302.title) -> "Moth" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:204203.title) -> "Out of Time" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:209101.title) -> "Paris Boy" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200082.title) -> "Piano Sonata No. 14 In C Sharp Minor, Op. 27 No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200081.title) -> "Piano Sonata No. 15 In D Major, Op. 28" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200083.title) -> "Piano Sonata No. 8 In C Minor, Op. 13" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:207202.title) -> "Piano Trio in D minor, Op. 10" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:207201.title) -> "Piano Trio in D minor, Op. 11" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:207203.title) -> "Piano Trio in D minor, Op. 9" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:211202.title) -> "Places I've Been" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200012.title) -> "Please Send Me Something" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:210205.title) -> "Possibly" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:210101.title) -> "Predator" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:205201.title) -> "Prison Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:212203.title) -> "Queen Rose" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200056.title) -> "Roadside Attraction" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739937	/dynamusic/SongsRepository	getPropertyValue(song:200013.title) -> "Rock With Me" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739953	/dynamusic/SongsRepository	getPropertyValue(song:200071.title) -> "Rooftop Garden" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739953	/dynamusic/SongsRepository	getPropertyValue(song:209102.title) -> "Sad Cat" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739953	/dynamusic/SongsRepository	getPropertyValue(song:212101.title) -> "Sleeper Hat" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739953	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 13:02:19 IST 2012	1340436739953	/dynamusic/SongsRepository	getPropertyValue(song:211203.title) -> "Something Like That Can Happen" (cached with no transaction)
**** debug	Sat Jun 23 13:02:20 IST 2012	1340436740453	/dynamusic/SongsRepository	getPropertyValue(song:213201.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 13:02:20 IST 2012	1340436740453	/dynamusic/SongsRepository	getPropertyValue(song:213201.artist) -> "100016" (cached with no transaction)
**** debug	Sat Jun 23 13:02:20 IST 2012	1340436740453	/dynamusic/SongsRepository	getPropertyValue(song:213201.title) -> "Another Sad Song" (cached with no transaction)
**** debug	Sat Jun 23 13:02:20 IST 2012	1340436740453	/dynamusic/SongsRepository	getPropertyValue(song:213201.id) -> "213201" (id property)
**** debug	Sat Jun 23 13:02:20 IST 2012	1340436740453	/dynamusic/SongsRepository	getPropertyValue(song:213201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:02:20 IST 2012	1340436740453	/dynamusic/SongsRepository	getPropertyValue(song:213201.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 13:02:20 IST 2012	1340436740453	/dynamusic/SongsRepository	getPropertyValue(song:213201.title) -> "Another Sad Song" (cached with no transaction)
**** debug	Sat Jun 23 13:02:20 IST 2012	1340436740453	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319953	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319968	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319968	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319968	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319968	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319968	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319968	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319968	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 13:11:59 IST 2012	1340437319968	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327343	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327359	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327359	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327359	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327359	/dynamusic/SongsRepository	getPropertyValue(song:212403.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327359	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 13:12:07 IST 2012	1340437327359	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338218	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338218	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338218	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338218	/dynamusic/SongsRepository	  WHERE (t1.name LIKE ?)
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338218	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338218	/dynamusic/SongsRepository	p[1] = {pd: name} A% (java.lang.String)
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338218	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338218	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338234	/dynamusic/SongsRepository	getItems(artist: [100011])
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338234	/dynamusic/SongsRepository	executeQuery(artist,0,1,name LIKE "A%") -> [artist:100011] (unsorted)
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338234	/dynamusic/SongsRepository	getPropertyValue(artist:100011.id) -> "100011" (id property)
**** debug	Sat Jun 23 13:12:18 IST 2012	1340437338250	/dynamusic/SongsRepository	getPropertyValue(artist:100011.name) -> "Autumn Winters" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getItems(artist: [100002, 100003, 100004, 100005, 100006, 100007, 100009, 100010, 100011, 100012, 100013, 100014, 100015, 100016])
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	executeQuery(artist,0,14,all) -> [artist:100002,artist:100003,artist:100004,artist:100005,artist:100006,artist:100007,artist:100009,artist:100010,artist:100011,artist:100012,artist:100013,artist:100014,artist:100015,artist:100016] (unsorted)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100002.id) -> "100002" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100004.id) -> "100004" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100009.id) -> "100009" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100010.id) -> "100010" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370906	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100011.id) -> "100011" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100011.name) -> "Autumn Winters" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Sat Jun 23 13:12:50 IST 2012	1340437370921	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 13:13:01 IST 2012	1340437381937	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:13:01 IST 2012	1340437381968	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 13:13:01 IST 2012	1340437381968	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 13:13:01 IST 2012	1340437381968	/dynamusic/SongsRepository	getPropertyValue(artist:100012.photoURL) -> "images/TeddyDynamoWilson.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:13:01 IST 2012	1340437381968	/dynamusic/SongsRepository	getPropertyValue(artist:100012.description) -> "Teddy 'Dynamo' Wilson, king of Boston Blues, was a legend in his time, and his influence is still heard in the music of ..." (cached with no transaction)
**** debug	Sat Jun 23 13:13:01 IST 2012	1340437381984	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382000	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382000	/dynamusic/SongsRepository	 SELECT DISTINCT t1.id
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382000	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist_album t2
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382000	/dynamusic/SongsRepository	  WHERE t2.album_id=t1.id
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382000	/dynamusic/SongsRepository	    AND t2.artist_id = ?
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382000	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382000	/dynamusic/SongsRepository	p[1] = {pd: artists} 100012 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382000	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382000	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382015	/dynamusic/SongsRepository	getItems(album: [300091, 300092, 300093])
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382015	/dynamusic/SongsRepository	executeQuery(album,0,3,artists includes ?) -> [album:300091,album:300092,album:300093] (unsorted)
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382031	/dynamusic/SongsRepository	getPropertyValue(album:300091.id) -> "300091" (id property)
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382031	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382031	/dynamusic/SongsRepository	getPropertyValue(album:300092.id) -> "300092" (id property)
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382031	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382031	/dynamusic/SongsRepository	getPropertyValue(album:300093.id) -> "300093" (id property)
**** debug	Sat Jun 23 13:13:02 IST 2012	1340437382046	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:13:09 IST 2012	1340437389281	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:13:09 IST 2012	1340437389328	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400859	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400875	/dynamusic/SongsRepository	getPropertyValue(album:300091.coverURL) -> "images/LiveInMontreal.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400875	/dynamusic/SongsRepository	getPropertyValue(album:300091.description) -> "Capturing Wilson where he's at his best, on stage and improvisational, this celebrated release set the high-water mark for ..." (cached with no transaction)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400875	/dynamusic/SongsRepository	getPropertyValue(album:300091.date) -> "5/7/1977 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	p[1] = {pd} 300091 (java.lang.String)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	getItems(artist: [100012])
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300091.artists, 100012) 
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	getPropertyValue(album:300091.artists) -> "100012" (value from database)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	p[1] = {pd} 300091 (java.lang.String)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	getItems(song: [209103, 209102, 209101])
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400890	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300091.songList, 209102,209101,209103) 
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400906	/dynamusic/SongsRepository	getPropertyValue(album:300091.songList) -> "209102,209101,209103" (value from database)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400906	/dynamusic/SongsRepository	getPropertyValue(song:209102.id) -> "209102" (id property)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400906	/dynamusic/SongsRepository	getPropertyValue(song:209102.title) -> "Sad Cat" (cached with no transaction)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400906	/dynamusic/SongsRepository	getPropertyValue(song:209101.id) -> "209101" (id property)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400906	/dynamusic/SongsRepository	getPropertyValue(song:209101.title) -> "Paris Boy" (cached with no transaction)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400906	/dynamusic/SongsRepository	getPropertyValue(song:209103.id) -> "209103" (id property)
**** debug	Sat Jun 23 13:13:20 IST 2012	1340437400906	/dynamusic/SongsRepository	getPropertyValue(song:209103.title) -> "Baby Has the Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407171	/dynamusic/SongsRepository	getPropertyValue(song:209102.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407281	/dynamusic/SongsRepository	getPropertyValue(song:209102.title) -> "Sad Cat" (cached with no transaction)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	getPropertyValue(song:209102.title) -> "Sad Cat" (cached with no transaction)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	getPropertyValue(song:209102.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	getPropertyValue(song:209102.artist) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	getPropertyValue(song:209102.artist) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	 SELECT DISTINCT t1.id
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_album_songs t2
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	  WHERE t2.album_id=t1.id
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	    AND t2.song_list = ?
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	p[1] = {pd: songList} 209102 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407296	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407312	/dynamusic/SongsRepository	getItems(album: [300091])
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407312	/dynamusic/SongsRepository	executeQuery(album,0,1,songList includes ?) -> [album:300091] (unsorted)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407312	/dynamusic/SongsRepository	getPropertyValue(album:300091.id) -> "300091" (id property)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407312	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:13:27 IST 2012	1340437407312	/dynamusic/SongsRepository	getPropertyValue(song:209102.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 13:13:30 IST 2012	1340437410656	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:13:30 IST 2012	1340437410671	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472640	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472640	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472640	/dynamusic/SongsRepository	   FROM dynamusic_artist t1
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472640	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472640	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472640	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472640	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472656	/dynamusic/SongsRepository	getItems(artist: [100002, 100003, 100004, 100005, 100006, 100007, 100009, 100010, 100011, 100012, 100013, 100014, 100015, 100016])
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472656	/dynamusic/SongsRepository	executeQuery(artist,0,14,all) -> [artist:100002,artist:100003,artist:100004,artist:100005,artist:100006,artist:100007,artist:100009,artist:100010,artist:100011,artist:100012,artist:100013,artist:100014,artist:100015,artist:100016] (unsorted)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472656	/dynamusic/SongsRepository	getPropertyValue(artist:100002.id) -> "100002" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100003.id) -> "100003" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100003.name) -> "Buddy Longfellow Johnson" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100004.id) -> "100004" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100005.id) -> "100005" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100005.name) -> "Ludwig van Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100006.id) -> "100006" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100009.id) -> "100009" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100010.id) -> "100010" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100011.id) -> "100011" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100011.name) -> "Autumn Winters" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100012.id) -> "100012" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100013.id) -> "100013" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472671	/dynamusic/SongsRepository	getPropertyValue(artist:100013.name) -> "Frida Jetsen" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472687	/dynamusic/SongsRepository	getPropertyValue(artist:100014.id) -> "100014" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472687	/dynamusic/SongsRepository	getPropertyValue(artist:100014.name) -> "Travis B." (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472687	/dynamusic/SongsRepository	getPropertyValue(artist:100015.id) -> "100015" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472687	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472687	/dynamusic/SongsRepository	getPropertyValue(artist:100016.id) -> "100016" (id property)
**** debug	Sat Jun 23 13:14:32 IST 2012	1340437472687	/dynamusic/SongsRepository	getPropertyValue(artist:100016.name) -> "Kiki Shoppington" (cached with no transaction)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474437	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474453	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474453	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474453	/dynamusic/SongsRepository	getPropertyValue(artist:100007.photoURL) -> "images/CharlieGrassfield.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474453	/dynamusic/SongsRepository	getPropertyValue(artist:100007.description) -> "One of the towering figures of country music, Charlie Grassfield's understated delivery and songwriting genius has assured him a place in ..." (cached with no transaction)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474453	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	 SELECT DISTINCT t1.id
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_artist_album t2
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	  WHERE t2.album_id=t1.id
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	    AND t2.artist_id = ?
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	p[1] = {pd: artists} 100007 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	getItems(album: [300051, 300052, 300053])
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474468	/dynamusic/SongsRepository	executeQuery(album,0,3,artists includes ?) -> [album:300051,album:300052,album:300053] (unsorted)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474484	/dynamusic/SongsRepository	getPropertyValue(album:300051.id) -> "300051" (id property)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474484	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474484	/dynamusic/SongsRepository	getPropertyValue(album:300052.id) -> "300052" (id property)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474484	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474484	/dynamusic/SongsRepository	getPropertyValue(album:300053.id) -> "300053" (id property)
**** debug	Sat Jun 23 13:14:34 IST 2012	1340437474484	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:14:38 IST 2012	1340437478078	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:14:38 IST 2012	1340437478078	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:14:38 IST 2012	1340437478109	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:14:38 IST 2012	1340437478109	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482796	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	getPropertyValue(album:300051.coverURL) -> "images/TheManFromTexas.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	getPropertyValue(album:300051.description) -> "The Man From Texas, which draws on Grassfield's original songs as well as those by ..." (cached with no transaction)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	getPropertyValue(album:300051.date) -> "3/4/2003 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	p[1] = {pd} 300051 (java.lang.String)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	getItems(artist: [100007])
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.artists, 100007) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482812	/dynamusic/SongsRepository	getPropertyValue(album:300051.artists) -> "100007" (value from database)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	p[1] = {pd} 300051 (java.lang.String)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	getItems(song: [205101, 205103, 205102])
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	getPersistentItems(song:[205101, 205103])
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	p[1] = {pd} 205101 (java.lang.String)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	p[2] = {pd} 205103 (java.lang.String)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.description, __NULL__) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.title, The Man Comes To Town) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.genre, country) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.description, __NULL__) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.title, Streets of San Antonio) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.genre, country) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	getItems(artist: [100007, 100007])
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205101.artist, 100007) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205103.artist, 100007) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300051.songList, 205103,205101,205102) 
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482828	/dynamusic/SongsRepository	getPropertyValue(album:300051.songList) -> "205103,205101,205102" (value from database)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482843	/dynamusic/SongsRepository	getPropertyValue(song:205103.id) -> "205103" (id property)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482843	/dynamusic/SongsRepository	getPropertyValue(song:205103.title) -> "Streets of San Antonio" (cached with no transaction)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482843	/dynamusic/SongsRepository	getPropertyValue(song:205101.id) -> "205101" (id property)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482843	/dynamusic/SongsRepository	getPropertyValue(song:205101.title) -> "The Man Comes To Town" (cached with no transaction)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482843	/dynamusic/SongsRepository	getPropertyValue(song:205102.id) -> "205102" (id property)
**** debug	Sat Jun 23 13:14:42 IST 2012	1340437482843	/dynamusic/SongsRepository	getPropertyValue(song:205102.title) -> "Hurt you" (cached with no transaction)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484046	/dynamusic/SongsRepository	getPropertyValue(song:205102.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484281	/dynamusic/SongsRepository	getPropertyValue(song:205102.title) -> "Hurt you" (cached with no transaction)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484281	/dynamusic/SongsRepository	getPropertyValue(song:205102.title) -> "Hurt you" (cached with no transaction)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484281	/dynamusic/SongsRepository	getPropertyValue(song:205102.downloadURL) -> "media/dummy.mp3" (cached with no transaction)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484281	/dynamusic/SongsRepository	getPropertyValue(song:205102.artist) -> "100007" (cached with no transaction)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484281	/dynamusic/SongsRepository	getPropertyValue(artist:100007.id) -> "100007" (id property)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484281	/dynamusic/SongsRepository	getPropertyValue(song:205102.artist) -> "100007" (cached with no transaction)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484281	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	 SELECT DISTINCT t1.id
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	   FROM dynamusic_album t1, dynamusic_album_songs t2
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	  WHERE t2.album_id=t1.id
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	    AND t2.song_list = ?
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	p[1] = {pd: songList} 205102 (atg.adapter.gsa.SingleValueGSAId)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	getItems(album: [300051])
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	executeQuery(album,0,1,songList includes ?) -> [album:300051] (unsorted)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	getPropertyValue(album:300051.id) -> "300051" (id property)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:14:44 IST 2012	1340437484296	/dynamusic/SongsRepository	getPropertyValue(song:205102.description) -> "__NULL__" (cached with no transaction)
**** debug	Sat Jun 23 13:14:47 IST 2012	1340437487125	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:14:47 IST 2012	1340437487125	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:14:47 IST 2012	1340437487156	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:14:47 IST 2012	1340437487156	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	  WHERE t1.genre IN (?,?)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	p[1] = {pd: genre} 3 (java.lang.Integer)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	p[2] = {pd: genre} 1 (java.lang.Integer)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871375	/dynamusic/SongsRepository	getItems(song: [200001, 200002, 200003, 200011, 200012, 200013, 200014, 200021, 200022, 200023, 205101, 205102, 205103, 205201, 205202, 205203, 205301, 205302, 205303, 208101, 208102, 208103, 208201, 208202, 208203, 208204, 208301, 208302, 209101, 209102, 209103, 209201, 209202, 209203, 209301, 209302, 209303, 211101, 211102, 211103, 211122, 211201, 211202, 211203])
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	getPersistentItems(song:[200001, 200002, 200014, 200021, 205202, 205301, 205303, 208101, 208103, 208202, 211102, 211103, 211201])
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	 SELECT t1.id,t1.lyrics,t1.artist,t1.title,t1.genre,t1.download
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[1] = {pd} 200001 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[2] = {pd} 200002 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[3] = {pd} 200014 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[4] = {pd} 200021 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[5] = {pd} 205202 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[6] = {pd} 205301 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[7] = {pd} 205303 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[8] = {pd} 208101 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[9] = {pd} 208103 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[10] = {pd} 208202 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[11] = {pd} 211102 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[12] = {pd} 211103 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	p[13] = {pd} 211201 (java.lang.String)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200001.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200001.title, Worry No More) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200001.genre, blues) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200001.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200002.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200002.title, The Thrill of It All) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200002.genre, blues) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200002.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200014.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200014.title, Thrilled To See) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871390	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200014.genre, blues) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200014.downloadURL, /media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.title, Tough Heart) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.genre, blues) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.title, The Tall Trees) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.genre, country) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.title, Welcome To The New World) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.genre, country) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.title, You've Been In My Dreams) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.genre, country) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208101.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208101.title, The Top) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208101.genre, country) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208101.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208103.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208103.title, Such a Pretty Face) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208103.genre, country) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208202.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208202.title, You're Still On My Mind) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208202.genre, country) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208202.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211102.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211102.title, Toronto) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211102.genre, country) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211102.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211103.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211103.title, Tumbleweeds) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871406	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211103.genre, country) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211103.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211201.description, __NULL__) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211201.title, Trouble With Always) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211201.genre, country) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211201.downloadURL, media/dummy.mp3) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	getItems(artist: [100002, 100002, 100002, 100002, 100007, 100007, 100007, 100011, 100011, 100011, 100014, 100014, 100014])
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200001.artist, 100002) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200002.artist, 100002) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200014.artist, 100002) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:200021.artist, 100002) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205202.artist, 100007) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205301.artist, 100007) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:205303.artist, 100007) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208101.artist, 100011) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208103.artist, 100011) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:208202.artist, 100011) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211102.artist, 100014) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211103.artist, 100014) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	loadingPropertyFromDatabase(song:211201.artist, 100014) 
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871421	/dynamusic/SongsRepository	executeQuery(song,0,44,genre IN {[blues, country]}) -> [song:200001,song:205201,song:211201,song:205202,song:211202,song:205203,song:211203,song:205301,song:205303,song:205302,song:209301,song:209303,song:209302,song:211101,song:211102,song:211103,song:209203,song:209201,song:205101,song:209202,song:205103,song:205102,song:208301,song:208302,song:200022,song:200023,song:200021,song:209103,song:209102,song:200014,song:209101,song:200013,song:200011,song:200012,song:208204,song:208202,song:208203,song:208201,song:208103,song:200003,song:200002,song:208101,song:208102,song:211122] (unsorted)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871437	/dynamusic/SongsRepository	getPropertyValue(song:205302.title) -> "It Ain't A Mystery" (cached with no transaction)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871437	/dynamusic/SongsRepository	getPropertyValue(song:205302.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871437	/dynamusic/SongsRepository	getPropertyValue(song:205103.title) -> "Streets of San Antonio" (cached with no transaction)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871437	/dynamusic/SongsRepository	getPropertyValue(song:205103.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871437	/dynamusic/SongsRepository	getPropertyValue(song:208201.title) -> "I Feel Like a Wonder" (cached with no transaction)
**** debug	Sat Jun 23 13:21:11 IST 2012	1340437871437	/dynamusic/SongsRepository	getPropertyValue(song:208201.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=album)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	 {{all}}
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	count: all, num = 38
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	 SELECT t1.id,t1.title
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	 ORDER BY t1.title ASC
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369625	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getItems(album: [300093, 300043, 300061, 300071, 300124, 300041, 300063, 300003, 300091, 300001, 300133, 300131, 300062, 300072, 300112, 300022, 300123, 300002, 300042, 300021, 300052, 300103, 300011, 300101, 300121, 300082, 300102, 300012, 300081, 300031, 300132, 300051, 300122, 300023, 300092, 300111, 300053, 300083])
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	executeQuery(album,0,101,all) -> [album:300093,album:300043,album:300061,album:300071,album:300124,album:300041,album:300063,album:300003,album:300091,album:300001,album:300133,album:300131,album:300062,album:300072,album:300112,album:300022,album:300123,album:300002,album:300042,album:300021,album:300052,album:300103,album:300011,album:300101,album:300121,album:300082,album:300102,album:300012,album:300081,album:300031,album:300132,album:300051,album:300122,album:300023,album:300092,album:300111,album:300053,album:300083] (db sort: ORDER BY title ASC USECASE)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300041.title) -> "Eight Days" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300133.title) -> "Miami Nights" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300131.title) -> "No Regrets" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300062.title) -> "On This Island" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300072.title) -> "Piano Sonatas" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300112.title) -> "Places I've Been" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300022.title) -> "Presenting The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300123.title) -> "Purple Roses" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300002.title) -> "Rainy Sunday" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300042.title) -> "Red Flag" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369640	/dynamusic/SongsRepository	getPropertyValue(album:300021.title) -> "Roadside Attraction" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300103.title) -> "Sleeper" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300011.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300101.title) -> "Squiggle" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300121.title) -> "Stardust" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300082.title) -> "Summer" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300102.title) -> "Swans" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300012.title) -> "Swing Shift" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300081.title) -> "The Charlie Grassfield Songbook" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300031.title) -> "The Complete Symphonies" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300132.title) -> "The First Album" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300122.title) -> "The Manhattan Album" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300023.title) -> "The Red And The Black" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300111.title) -> "Tumbleweeds" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:29:29 IST 2012	1340438369656	/dynamusic/SongsRepository	getPropertyValue(album:300083.title) -> "Women and Men" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	getPropertyValue(album:300093.description) -> "They don't call him 'Dynamo' for nothing!  This high-energy, passionate masterpiece was a validation for Wilson after ..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	p[1] = {pd} 300093 (java.lang.String)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393062	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393078	/dynamusic/SongsRepository	getItems(song: [209301, 209303, 209302])
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393078	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300093.songList, 209301,209302,209303) 
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393078	/dynamusic/SongsRepository	getPropertyValue(album:300093.songList) -> "209303,209301,209302" (value from database)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393078	/dynamusic/SongsRepository	getPropertyValue(album:300093.coverURL) -> "images/BringOnTheNight.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393078	/dynamusic/SongsRepository	getPropertyValue(album:300093.artist) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393078	/dynamusic/SongsRepository	getPropertyValue(album:300093.date) -> "8/5/1989 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393078	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393078	/dynamusic/SongsRepository	getPropertyValue(album:300093.id) -> "300093" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	p[1] = {pd} 300093 (java.lang.String)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	getItems(artist: [100012])
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300093.artists, 100012) 
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393093	/dynamusic/SongsRepository	getPropertyValue(album:300093.artists) -> "100012" (value from database)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393109	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393109	/dynamusic/SongsRepository	getPropertyValue(song:209303.title) -> "22 Years" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393109	/dynamusic/SongsRepository	getPropertyValue(song:209301.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393109	/dynamusic/SongsRepository	getPropertyValue(song:209302.title) -> "Copper Top" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393109	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393109	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393140	/dynamusic/SongsRepository	getPropertyValue(album:300043.description) -> "Less hot under the collar than his debut, Candy Cigarettes was partly inspired by Redshoes' 1978 world tour. The songs are..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	p[1] = {pd} 300043 (java.lang.String)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	getItems(song: [204301, 204302, 204304, 204303])
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300043.songList, 204301,204302,204303,204304) 
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	getPropertyValue(album:300043.songList) -> "204301,204302,204303,204304" (value from database)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393156	/dynamusic/SongsRepository	getPropertyValue(album:300043.coverURL) -> "images/CandyCigarettes.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	getPropertyValue(album:300043.artist) -> "100006" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	getPropertyValue(album:300043.date) -> "9/24/1979 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	getPropertyValue(album:300043.id) -> "300043" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	p[1] = {pd} 300043 (java.lang.String)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	getItems(artist: [100006])
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300043.artists, 100006) 
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393171	/dynamusic/SongsRepository	getPropertyValue(album:300043.artists) -> "100006" (value from database)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393187	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393187	/dynamusic/SongsRepository	getPropertyValue(song:204301.title) -> "Accidents Waiting To Happen" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393187	/dynamusic/SongsRepository	getPropertyValue(song:204302.title) -> "London" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393187	/dynamusic/SongsRepository	getPropertyValue(song:204303.title) -> "Blue Blanket" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393187	/dynamusic/SongsRepository	getPropertyValue(song:204304.title) -> "What's So Funny?" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393187	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393187	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	getPropertyValue(album:300061.description) -> "City Life is a rock album realized on an epic scale. Most of its 12 songs are ..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	p[1] = {pd} 300061 (java.lang.String)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	getItems(song: [206102, 206101, 206104, 206103])
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300061.songList, 206101,206102,206103,206104) 
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	getPropertyValue(album:300061.songList) -> "206101,206102,206103,206104" (value from database)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	getPropertyValue(album:300061.coverURL) -> "images/CityLife.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	getPropertyValue(album:300061.artist) -> "100009" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	getPropertyValue(album:300061.date) -> "5/2/1989 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393203	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getPropertyValue(album:300061.id) -> "300061" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	p[1] = {pd} 300061 (java.lang.String)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getItems(artist: [100009])
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300061.artists, 100009) 
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getPropertyValue(album:300061.artists) -> "100009" (value from database)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getPropertyValue(song:206101.title) -> "Far From Home" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getPropertyValue(song:206102.title) -> "Store Window" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getPropertyValue(song:206103.title) -> "Swimsong" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getPropertyValue(song:206104.title) -> "You're Horrible" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393218	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393234	/dynamusic/SongsRepository	getPropertyValue(album:300071.description) -> "Unlike most composer/pianists, Vladimir's instrumental prowess was commensurate with his compositional talents ..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(album:300071.songList) -> "207103,207101,207102" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(album:300071.coverURL) -> "images/ConcertoNo2.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(album:300071.artist) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(album:300071.date) -> "8/16/1994 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(album:300071.id) -> "300071" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(album:300071.artists) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(song:207101.title) -> "Concerto No. 1, Op. 3" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(song:207102.title) -> "Concerto No. 1, Op. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393281	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	getPropertyValue(album:300124.description) -> "The 90's were a particularly shifting, uncertain decade for Woody Singer's unique voice. But he capped it off with his first album of all-original material in several years ..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	p[1] = {pd} 300124 (java.lang.String)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	getItems(song: [212403, 212402, 212401])
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300124.songList, 212402,212403,212401) 
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	getPropertyValue(album:300124.songList) -> "212402,212403,212401" (value from database)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	getPropertyValue(album:300124.coverURL) -> "images/Crimes.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	getPropertyValue(album:300124.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	getPropertyValue(album:300124.date) -> "9/19/1989 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	getPropertyValue(album:300124.id) -> "300124" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	p[1] = {pd} 300124 (java.lang.String)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393296	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393312	/dynamusic/SongsRepository	getItems(artist: [100015])
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393312	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300124.artists, 100015) 
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393312	/dynamusic/SongsRepository	getPropertyValue(album:300124.artists) -> "100015" (value from database)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393312	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393312	/dynamusic/SongsRepository	getPropertyValue(song:212402.title) -> "Everything Is Frozen" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393312	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393312	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393312	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393312	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300093.description) -> "They don't call him 'Dynamo' for nothing!  This high-energy, passionate masterpiece was a validation for Wilson after ..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300093.songList) -> "209301,209302,209303" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300093.coverURL) -> "images/BringOnTheNight.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300093.artist) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300093.date) -> "8/5/1989 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300093.id) -> "300093" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300093.artists) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(song:209303.title) -> "22 Years" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(song:209301.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(song:209302.title) -> "Copper Top" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300043.description) -> "Less hot under the collar than his debut, Candy Cigarettes was partly inspired by Redshoes' 1978 world tour. The songs are..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300043.songList) -> "204301,204302,204303,204304" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300043.coverURL) -> "images/CandyCigarettes.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300043.artist) -> "100006" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393421	/dynamusic/SongsRepository	getPropertyValue(album:300043.date) -> "9/24/1979 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300043.id) -> "300043" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300043.artists) -> "100006" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(song:204301.title) -> "Accidents Waiting To Happen" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(song:204302.title) -> "London" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(song:204303.title) -> "Blue Blanket" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(song:204304.title) -> "What's So Funny?" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(artist:100006.name) -> "Elwin Redshoes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300061.description) -> "City Life is a rock album realized on an epic scale. Most of its 12 songs are ..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300061.songList) -> "206101,206102,206103,206104" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300061.coverURL) -> "images/CityLife.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300061.artist) -> "100009" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300061.date) -> "5/2/1989 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300061.id) -> "300061" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300061.artists) -> "100009" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(song:206101.title) -> "Far From Home" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(song:206102.title) -> "Store Window" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(song:206103.title) -> "Swimsong" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(song:206104.title) -> "You're Horrible" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393437	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300071.description) -> "Unlike most composer/pianists, Vladimir's instrumental prowess was commensurate with his compositional talents ..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300071.songList) -> "207103,207101,207102" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300071.coverURL) -> "images/ConcertoNo2.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300071.artist) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300071.date) -> "8/16/1994 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300071.id) -> "300071" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300071.artists) -> "100010" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(song:207101.title) -> "Concerto No. 1, Op. 3" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(song:207102.title) -> "Concerto No. 1, Op. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(artist:100010.name) -> "Vladimir Vladimir" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300124.description) -> "The 90's were a particularly shifting, uncertain decade for Woody Singer's unique voice. But he capped it off with his first album of all-original material in several years ..." (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300124.songList) -> "212402,212403,212401" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300124.coverURL) -> "images/Crimes.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300124.artist) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300124.date) -> "9/19/1989 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300124.id) -> "300124" (id property)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300124.artists) -> "100015" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(song:212402.title) -> "Everything Is Frozen" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 13:29:53 IST 2012	1340438393453	/dynamusic/SongsRepository	getPropertyValue(artist:100015.name) -> "Woody Singer" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=album)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	 {{all}}
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425203	/dynamusic/SongsRepository	count: all, num = 38
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	 SELECT t1.id,t1.title
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	 ORDER BY t1.title ASC
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getItems(album: [300093, 300043, 300061, 300071, 300124, 300041, 300063, 300003, 300091, 300001, 300133, 300131, 300062, 300072, 300112, 300022, 300123, 300002, 300042, 300021, 300052, 300103, 300011, 300101, 300121, 300082, 300102, 300012, 300081, 300031, 300132, 300051, 300122, 300023, 300092, 300111, 300053, 300083])
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	executeQuery(album,0,101,all) -> [album:300093,album:300043,album:300061,album:300071,album:300124,album:300041,album:300063,album:300003,album:300091,album:300001,album:300133,album:300131,album:300062,album:300072,album:300112,album:300022,album:300123,album:300002,album:300042,album:300021,album:300052,album:300103,album:300011,album:300101,album:300121,album:300082,album:300102,album:300012,album:300081,album:300031,album:300132,album:300051,album:300122,album:300023,album:300092,album:300111,album:300053,album:300083] (db sort: ORDER BY title ASC USECASE)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300041.title) -> "Eight Days" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300133.title) -> "Miami Nights" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300131.title) -> "No Regrets" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300062.title) -> "On This Island" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300072.title) -> "Piano Sonatas" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300112.title) -> "Places I've Been" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300022.title) -> "Presenting The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300123.title) -> "Purple Roses" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300002.title) -> "Rainy Sunday" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300042.title) -> "Red Flag" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300021.title) -> "Roadside Attraction" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300103.title) -> "Sleeper" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300011.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300101.title) -> "Squiggle" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300121.title) -> "Stardust" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300082.title) -> "Summer" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300102.title) -> "Swans" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300012.title) -> "Swing Shift" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300081.title) -> "The Charlie Grassfield Songbook" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300031.title) -> "The Complete Symphonies" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300132.title) -> "The First Album" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300122.title) -> "The Manhattan Album" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300023.title) -> "The Red And The Black" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300111.title) -> "Tumbleweeds" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:30:25 IST 2012	1340438425218	/dynamusic/SongsRepository	getPropertyValue(album:300083.title) -> "Women and Men" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(album:300091.description) -> "Capturing Wilson where he's at his best, on stage and improvisational, this celebrated release set the high-water mark for ..." (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(album:300091.songList) -> "209102,209101,209103" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(album:300091.coverURL) -> "images/LiveInMontreal.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(album:300091.artist) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(album:300091.date) -> "5/7/1977 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(album:300091.id) -> "300091" (id property)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(album:300091.artists) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(song:209102.title) -> "Sad Cat" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(song:209101.title) -> "Paris Boy" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(song:209103.title) -> "Baby Has the Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434046	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434062	/dynamusic/SongsRepository	getPropertyValue(album:300001.description) -> "An essential recording of the legendary Paris concert that cemented his reputation as a ..." (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	p[1] = {pd} 300001 (java.lang.String)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	getItems(song: [200001, 200003, 200002])
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.songList, 200003,200001,200002) 
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	getPropertyValue(album:300001.songList) -> "200003,200001,200002" (value from database)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	getPropertyValue(album:300001.coverURL) -> "images/LiveInParis.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	getPropertyValue(album:300001.artist) -> "100002" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	getPropertyValue(album:300001.date) -> "3/4/1977 11:06:00" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434078	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	getPropertyValue(album:300001.id) -> "300001" (id property)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	p[1] = {pd} 300001 (java.lang.String)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	getItems(artist: [100002])
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300001.artists, 100002) 
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434093	/dynamusic/SongsRepository	getPropertyValue(album:300001.artists) -> "100002" (value from database)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434109	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434109	/dynamusic/SongsRepository	getPropertyValue(song:200003.title) -> "How Blue Are You?" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434109	/dynamusic/SongsRepository	getPropertyValue(song:200001.title) -> "Worry No More" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434109	/dynamusic/SongsRepository	getPropertyValue(song:200002.title) -> "The Thrill of It All" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434109	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434109	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	getPropertyValue(album:300003.description) -> "Opting for simplicity this time around, Dexter Bluetone gets by with a little help from his seasoned backing band, producing an album that's evocative of..." (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	p[1] = {pd} 300003 (java.lang.String)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	getItems(song: [200022, 200023, 200021])
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.songList, 200022,200021,200023) 
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434125	/dynamusic/SongsRepository	getPropertyValue(album:300003.songList) -> "200023,200022,200021" (value from database)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	getPropertyValue(album:300003.coverURL) -> "images/HoneyBee.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	getPropertyValue(album:300003.artist) -> "100002" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	getPropertyValue(album:300003.date) -> "10/20/1998 10:49:00" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	getPropertyValue(album:300003.id) -> "300003" (id property)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	p[1] = {pd} 300003 (java.lang.String)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434140	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434156	/dynamusic/SongsRepository	getItems(artist: [100002])
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434156	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300003.artists, 100002) 
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434156	/dynamusic/SongsRepository	getPropertyValue(album:300003.artists) -> "100002" (value from database)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434156	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434156	/dynamusic/SongsRepository	getPropertyValue(song:200023.title) -> "I'll Carry On" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434156	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434156	/dynamusic/SongsRepository	getPropertyValue(song:200021.title) -> "Tough Heart" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434156	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434156	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434171	/dynamusic/SongsRepository	getPropertyValue(album:300063.description) -> "His masterpiece, this album was the culmination of many years spent ..." (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434171	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	p[1] = {pd} 300063 (java.lang.String)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	getItems(song: [206303, 206304, 206301, 206302, 206305])
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300063.songList, 206303,206302,206301,206305,206304) 
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	getPropertyValue(album:300063.songList) -> "206303,206302,206301,206305,206304" (value from database)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	getPropertyValue(album:300063.coverURL) -> "images/GoodbyeTourists.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	getPropertyValue(album:300063.artist) -> "100009" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	getPropertyValue(album:300063.date) -> "1/21/1980 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	getPropertyValue(album:300063.id) -> "300063" (id property)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	p[1] = {pd} 300063 (java.lang.String)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434187	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getItems(artist: [100009])
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300063.artists, 100009) 
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300063.artists) -> "100009" (value from database)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(song:206303.title) -> "High-Rises" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(song:206302.title) -> "Japan" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(song:206301.title) -> "Leaving Town" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(song:206305.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(song:206304.title) -> "I'm Beautiful" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300091.description) -> "Capturing Wilson where he's at his best, on stage and improvisational, this celebrated release set the high-water mark for ..." (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300091.songList) -> "209102,209101,209103" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300091.coverURL) -> "images/LiveInMontreal.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300091.artist) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300091.date) -> "5/7/1977 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300091.id) -> "300091" (id property)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434203	/dynamusic/SongsRepository	getPropertyValue(album:300091.artists) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(song:209102.title) -> "Sad Cat" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(song:209101.title) -> "Paris Boy" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(song:209103.title) -> "Baby Has the Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300001.description) -> "An essential recording of the legendary Paris concert that cemented his reputation as a ..." (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300001.songList) -> "200003,200001,200002" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300001.coverURL) -> "images/LiveInParis.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300001.artist) -> "100002" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300001.date) -> "3/4/1977 11:06:00" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300001.id) -> "300001" (id property)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300001.artists) -> "100002" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(song:200003.title) -> "How Blue Are You?" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(song:200001.title) -> "Worry No More" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(song:200002.title) -> "The Thrill of It All" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434218	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300003.description) -> "Opting for simplicity this time around, Dexter Bluetone gets by with a little help from his seasoned backing band, producing an album that's evocative of..." (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300003.songList) -> "200022,200021,200023" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300003.coverURL) -> "images/HoneyBee.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300003.artist) -> "100002" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300003.date) -> "10/20/1998 10:49:00" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300003.id) -> "300003" (id property)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300003.artists) -> "100002" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(song:200023.title) -> "I'll Carry On" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(song:200021.title) -> "Tough Heart" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(artist:100002.name) -> "Dexter Bluetone" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300063.description) -> "His masterpiece, this album was the culmination of many years spent ..." (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300063.songList) -> "206303,206302,206301,206305,206304" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300063.coverURL) -> "images/GoodbyeTourists.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300063.artist) -> "100009" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300063.date) -> "1/21/1980 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300063.id) -> "300063" (id property)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300063.artists) -> "100009" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(song:206303.title) -> "High-Rises" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(song:206302.title) -> "Japan" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(song:206301.title) -> "Leaving Town" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(song:206305.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(song:206304.title) -> "I'm Beautiful" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:30:34 IST 2012	1340438434234	/dynamusic/SongsRepository	getPropertyValue(artist:100009.name) -> "The Porpoise Spit" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466171	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=album)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466171	/dynamusic/SongsRepository	 {{all}}
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	count: all, num = 38
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	 SELECT t1.id,t1.title
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	 ORDER BY t1.title ASC
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466187	/dynamusic/SongsRepository	getItems(album: [300093, 300043, 300061, 300071, 300124, 300041, 300063, 300003, 300091, 300001, 300133, 300131, 300062, 300072, 300112, 300022, 300123, 300002, 300042, 300021, 300052, 300103, 300011, 300101, 300121, 300082, 300102, 300012, 300081, 300031, 300132, 300051, 300122, 300023, 300092, 300111, 300053, 300083])
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	executeQuery(album,0,101,all) -> [album:300093,album:300043,album:300061,album:300071,album:300124,album:300041,album:300063,album:300003,album:300091,album:300001,album:300133,album:300131,album:300062,album:300072,album:300112,album:300022,album:300123,album:300002,album:300042,album:300021,album:300052,album:300103,album:300011,album:300101,album:300121,album:300082,album:300102,album:300012,album:300081,album:300031,album:300132,album:300051,album:300122,album:300023,album:300092,album:300111,album:300053,album:300083] (db sort: ORDER BY title ASC USECASE)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300041.title) -> "Eight Days" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300133.title) -> "Miami Nights" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300131.title) -> "No Regrets" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300062.title) -> "On This Island" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300072.title) -> "Piano Sonatas" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300112.title) -> "Places I've Been" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300022.title) -> "Presenting The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300123.title) -> "Purple Roses" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300002.title) -> "Rainy Sunday" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300042.title) -> "Red Flag" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300021.title) -> "Roadside Attraction" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300103.title) -> "Sleeper" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300011.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300101.title) -> "Squiggle" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300121.title) -> "Stardust" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300082.title) -> "Summer" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300102.title) -> "Swans" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300012.title) -> "Swing Shift" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300081.title) -> "The Charlie Grassfield Songbook" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300031.title) -> "The Complete Symphonies" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300132.title) -> "The First Album" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300122.title) -> "The Manhattan Album" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466203	/dynamusic/SongsRepository	getPropertyValue(album:300023.title) -> "The Red And The Black" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466218	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466218	/dynamusic/SongsRepository	getPropertyValue(album:300111.title) -> "Tumbleweeds" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466218	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:31:06 IST 2012	1340438466218	/dynamusic/SongsRepository	getPropertyValue(album:300083.title) -> "Women and Men" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(album:300051.description) -> "The Man From Texas, which draws on Grassfield's original songs as well as those by ..." (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(album:300051.songList) -> "205103,205101,205102" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(album:300051.coverURL) -> "images/TheManFromTexas.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(album:300051.artist) -> "100007" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(album:300051.date) -> "3/4/2003 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(album:300051.id) -> "300051" (id property)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(album:300051.artists) -> "100007" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(song:205103.title) -> "Streets of San Antonio" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(song:205101.title) -> "The Man Comes To Town" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(song:205102.title) -> "Hurt you" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474609	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474625	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	getPropertyValue(album:300023.description) -> "The Brighton Bramblers' last days as a band were as productive as any major pop phenomenon that was about to break up ..." (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	p[1] = {pd} 300023 (java.lang.String)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	getItems(song: [200073, 200071, 200072])
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300023.songList, 200073,200072,200071) 
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474640	/dynamusic/SongsRepository	getPropertyValue(album:300023.songList) -> "200073,200072,200071" (value from database)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	getPropertyValue(album:300023.coverURL) -> "images/TheRedAndTheBlack.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	getPropertyValue(album:300023.artist) -> "100004" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	getPropertyValue(album:300023.date) -> "9/26/1969 10:40:37" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	getPropertyValue(album:300023.title) -> "The Red And The Black" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	getPropertyValue(album:300023.id) -> "300023" (id property)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	p[1] = {pd} 300023 (java.lang.String)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474656	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474671	/dynamusic/SongsRepository	getItems(artist: [100004])
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474671	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300023.artists, 100004) 
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474671	/dynamusic/SongsRepository	getPropertyValue(album:300023.artists) -> "100004" (value from database)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474671	/dynamusic/SongsRepository	getPropertyValue(album:300023.title) -> "The Red And The Black" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474671	/dynamusic/SongsRepository	getPropertyValue(song:200073.title) -> "Getting Together" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474671	/dynamusic/SongsRepository	getPropertyValue(song:200072.title) -> "Something to Say" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474671	/dynamusic/SongsRepository	getPropertyValue(song:200071.title) -> "Rooftop Garden" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474671	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474671	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474687	/dynamusic/SongsRepository	getPropertyValue(album:300092.description) -> "A commercial disappointment upon its release, this difficult and artful set has since been reconsidered, and is now ..." (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	p[1] = {pd} 300092 (java.lang.String)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	getItems(song: [209203, 209201, 209202])
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300092.songList, 209201,209203,209202) 
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474703	/dynamusic/SongsRepository	getPropertyValue(album:300092.songList) -> "209201,209203,209202" (value from database)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	getPropertyValue(album:300092.coverURL) -> "images/TheWolf.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	getPropertyValue(album:300092.artist) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	getPropertyValue(album:300092.date) -> "4/14/1981 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	getPropertyValue(album:300092.id) -> "300092" (id property)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	p[1] = {pd} 300092 (java.lang.String)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	getItems(artist: [100012])
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300092.artists, 100012) 
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474718	/dynamusic/SongsRepository	getPropertyValue(album:300092.artists) -> "100012" (value from database)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474734	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474734	/dynamusic/SongsRepository	getPropertyValue(song:209201.title) -> "I'm the Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474734	/dynamusic/SongsRepository	getPropertyValue(song:209203.title) -> "I Feel Like Going North" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474734	/dynamusic/SongsRepository	getPropertyValue(song:209202.title) -> "Mean Old Dog Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474734	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474734	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474750	/dynamusic/SongsRepository	getPropertyValue(album:300051.description) -> "The Man From Texas, which draws on Grassfield's original songs as well as those by ..." (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474750	/dynamusic/SongsRepository	getPropertyValue(album:300051.songList) -> "205103,205101,205102" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474750	/dynamusic/SongsRepository	getPropertyValue(album:300051.coverURL) -> "images/TheManFromTexas.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474750	/dynamusic/SongsRepository	getPropertyValue(album:300051.artist) -> "100007" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(album:300051.date) -> "3/4/2003 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(album:300051.id) -> "300051" (id property)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(album:300051.artists) -> "100007" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(song:205103.title) -> "Streets of San Antonio" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(song:205101.title) -> "The Man Comes To Town" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(song:205102.title) -> "Hurt you" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474765	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300023.description) -> "The Brighton Bramblers' last days as a band were as productive as any major pop phenomenon that was about to break up ..." (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300023.songList) -> "200073,200072,200071" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300023.coverURL) -> "images/TheRedAndTheBlack.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300023.artist) -> "100004" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300023.date) -> "9/26/1969 10:40:37" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300023.title) -> "The Red And The Black" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300023.id) -> "300023" (id property)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300023.artists) -> "100004" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300023.title) -> "The Red And The Black" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(song:200073.title) -> "Getting Together" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(song:200072.title) -> "Something to Say" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(song:200071.title) -> "Rooftop Garden" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(artist:100004.name) -> "The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300092.description) -> "A commercial disappointment upon its release, this difficult and artful set has since been reconsidered, and is now ..." (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300092.songList) -> "209201,209203,209202" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300092.coverURL) -> "images/TheWolf.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300092.artist) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300092.date) -> "4/14/1981 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300092.id) -> "300092" (id property)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300092.artists) -> "100012" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(song:209201.title) -> "I'm the Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(song:209203.title) -> "I Feel Like Going North" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(song:209202.title) -> "Mean Old Dog Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:31:14 IST 2012	1340438474781	/dynamusic/SongsRepository	getPropertyValue(artist:100012.name) -> "Teddy Dynamo Wilson" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551343	/dynamusic/SongsRepository	itemDesc.executeCountQuery(desc=album)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551343	/dynamusic/SongsRepository	 {{all}}
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551343	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551343	/dynamusic/SongsRepository	 SELECT COUNT(*) 
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551343	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551343	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551343	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551343	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551343	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	count: all, num = 38
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	 SELECT t1.id,t1.title
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	  WHERE 1=1
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	 ORDER BY t1.title ASC
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getItems(album: [300093, 300043, 300061, 300071, 300124, 300041, 300063, 300003, 300091, 300001, 300133, 300131, 300062, 300072, 300112, 300022, 300123, 300002, 300042, 300021, 300052, 300103, 300011, 300101, 300121, 300082, 300102, 300012, 300081, 300031, 300132, 300051, 300122, 300023, 300092, 300111, 300053, 300083])
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	executeQuery(album,0,101,all) -> [album:300093,album:300043,album:300061,album:300071,album:300124,album:300041,album:300063,album:300003,album:300091,album:300001,album:300133,album:300131,album:300062,album:300072,album:300112,album:300022,album:300123,album:300002,album:300042,album:300021,album:300052,album:300103,album:300011,album:300101,album:300121,album:300082,album:300102,album:300012,album:300081,album:300031,album:300132,album:300051,album:300122,album:300023,album:300092,album:300111,album:300053,album:300083] (db sort: ORDER BY title ASC USECASE)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300041.title) -> "Eight Days" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300133.title) -> "Miami Nights" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300131.title) -> "No Regrets" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300062.title) -> "On This Island" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300072.title) -> "Piano Sonatas" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300112.title) -> "Places I've Been" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300022.title) -> "Presenting The Brighton Bramblers" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300123.title) -> "Purple Roses" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300002.title) -> "Rainy Sunday" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300042.title) -> "Red Flag" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300021.title) -> "Roadside Attraction" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300052.title) -> "Runaway Train" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300103.title) -> "Sleeper" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300011.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300101.title) -> "Squiggle" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300121.title) -> "Stardust" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300082.title) -> "Summer" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300102.title) -> "Swans" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300012.title) -> "Swing Shift" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300081.title) -> "The Charlie Grassfield Songbook" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300031.title) -> "The Complete Symphonies" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300132.title) -> "The First Album" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300051.title) -> "The Man From Texas" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300122.title) -> "The Manhattan Album" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300023.title) -> "The Red And The Black" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300092.title) -> "The Wolf" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300111.title) -> "Tumbleweeds" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:32:31 IST 2012	1340438551359	/dynamusic/SongsRepository	getPropertyValue(album:300083.title) -> "Women and Men" (cached with no transaction)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946656	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946656	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946656	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946656	/dynamusic/SongsRepository	  WHERE t1.genre IN (?,?)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946656	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946656	/dynamusic/SongsRepository	p[1] = {pd: genre} 3 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946656	/dynamusic/SongsRepository	p[2] = {pd: genre} 1 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946656	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946656	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946671	/dynamusic/SongsRepository	getItems(song: [200001, 200002, 200003, 200011, 200012, 200013, 200014, 200021, 200022, 200023, 205101, 205102, 205103, 205201, 205202, 205203, 205301, 205302, 205303, 208101, 208102, 208103, 208201, 208202, 208203, 208204, 208301, 208302, 209101, 209102, 209103, 209201, 209202, 209203, 209301, 209302, 209303, 211101, 211102, 211103, 211122, 211201, 211202, 211203])
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946671	/dynamusic/SongsRepository	executeQuery(song,0,44,genre IN {[blues, country]}) -> [song:200001,song:205201,song:211201,song:205202,song:211202,song:205203,song:211203,song:205301,song:205303,song:205302,song:209301,song:209303,song:209302,song:211101,song:211102,song:211103,song:209203,song:209201,song:205101,song:209202,song:205103,song:205102,song:208301,song:208302,song:200022,song:200023,song:200021,song:209103,song:209102,song:209101,song:200014,song:200013,song:200011,song:200012,song:208204,song:208202,song:208203,song:208201,song:208103,song:200003,song:200002,song:208101,song:208102,song:211122] (unsorted)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946671	/dynamusic/SongsRepository	getPropertyValue(song:208201.title) -> "I Feel Like a Wonder" (cached with no transaction)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946671	/dynamusic/SongsRepository	getPropertyValue(song:208201.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946671	/dynamusic/SongsRepository	getPropertyValue(song:200002.title) -> "The Thrill of It All" (cached with no transaction)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946671	/dynamusic/SongsRepository	getPropertyValue(song:200002.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946671	/dynamusic/SongsRepository	getPropertyValue(song:211201.title) -> "Trouble With Always" (cached with no transaction)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946671	/dynamusic/SongsRepository	getPropertyValue(song:211201.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946687	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:06 IST 2012	1340438946703	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960625	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960625	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960625	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960625	/dynamusic/SongsRepository	  WHERE t1.genre IN (?,?)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960625	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960625	/dynamusic/SongsRepository	p[1] = {pd: genre} 3 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960625	/dynamusic/SongsRepository	p[2] = {pd: genre} 1 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960625	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960625	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960640	/dynamusic/SongsRepository	getItems(song: [200001, 200002, 200003, 200011, 200012, 200013, 200014, 200021, 200022, 200023, 205101, 205102, 205103, 205201, 205202, 205203, 205301, 205302, 205303, 208101, 208102, 208103, 208201, 208202, 208203, 208204, 208301, 208302, 209101, 209102, 209103, 209201, 209202, 209203, 209301, 209302, 209303, 211101, 211102, 211103, 211122, 211201, 211202, 211203])
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960640	/dynamusic/SongsRepository	executeQuery(song,0,44,genre IN {[blues, country]}) -> [song:200001,song:205201,song:211201,song:205202,song:211202,song:205203,song:211203,song:205301,song:205303,song:205302,song:209301,song:209303,song:209302,song:211101,song:211102,song:211103,song:209203,song:209201,song:205101,song:209202,song:205103,song:205102,song:208301,song:208302,song:200022,song:200023,song:200021,song:209103,song:209102,song:209101,song:200014,song:200013,song:200011,song:200012,song:208204,song:208202,song:208203,song:208201,song:208103,song:200003,song:200002,song:208101,song:208102,song:211122] (unsorted)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960640	/dynamusic/SongsRepository	getPropertyValue(song:209301.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960640	/dynamusic/SongsRepository	getPropertyValue(song:209301.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960640	/dynamusic/SongsRepository	getPropertyValue(song:205303.title) -> "You've Been In My Dreams" (cached with no transaction)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960640	/dynamusic/SongsRepository	getPropertyValue(song:205303.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960640	/dynamusic/SongsRepository	getPropertyValue(song:200012.title) -> "Please Send Me Something" (cached with no transaction)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960640	/dynamusic/SongsRepository	getPropertyValue(song:200012.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960640	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:20 IST 2012	1340438960656	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	  WHERE t1.genre IN (?,?)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	p[1] = {pd: genre} 3 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	p[2] = {pd: genre} 1 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	getItems(song: [200001, 200002, 200003, 200011, 200012, 200013, 200014, 200021, 200022, 200023, 205101, 205102, 205103, 205201, 205202, 205203, 205301, 205302, 205303, 208101, 208102, 208103, 208201, 208202, 208203, 208204, 208301, 208302, 209101, 209102, 209103, 209201, 209202, 209203, 209301, 209302, 209303, 211101, 211102, 211103, 211122, 211201, 211202, 211203])
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961203	/dynamusic/SongsRepository	executeQuery(song,0,44,genre IN {[blues, country]}) -> [song:200001,song:205201,song:211201,song:205202,song:211202,song:205203,song:211203,song:205301,song:205303,song:205302,song:209301,song:209303,song:209302,song:211101,song:211102,song:211103,song:209203,song:209201,song:205101,song:209202,song:205103,song:205102,song:208301,song:208302,song:200022,song:200023,song:200021,song:209103,song:209102,song:209101,song:200014,song:200013,song:200011,song:200012,song:208204,song:208202,song:208203,song:208201,song:208103,song:200003,song:200002,song:208101,song:208102,song:211122] (unsorted)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961218	/dynamusic/SongsRepository	getPropertyValue(song:209101.title) -> "Paris Boy" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961218	/dynamusic/SongsRepository	getPropertyValue(song:209101.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961218	/dynamusic/SongsRepository	getPropertyValue(song:208203.title) -> "Don't Press Me" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961218	/dynamusic/SongsRepository	getPropertyValue(song:208203.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961218	/dynamusic/SongsRepository	getPropertyValue(song:208202.title) -> "You're Still On My Mind" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961218	/dynamusic/SongsRepository	getPropertyValue(song:208202.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961218	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961234	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	  WHERE t1.genre IN (?,?)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	p[1] = {pd: genre} 3 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	p[2] = {pd: genre} 1 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	getItems(song: [200001, 200002, 200003, 200011, 200012, 200013, 200014, 200021, 200022, 200023, 205101, 205102, 205103, 205201, 205202, 205203, 205301, 205302, 205303, 208101, 208102, 208103, 208201, 208202, 208203, 208204, 208301, 208302, 209101, 209102, 209103, 209201, 209202, 209203, 209301, 209302, 209303, 211101, 211102, 211103, 211122, 211201, 211202, 211203])
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	executeQuery(song,0,44,genre IN {[blues, country]}) -> [song:200001,song:205201,song:211201,song:205202,song:211202,song:205203,song:211203,song:205301,song:205303,song:205302,song:209301,song:209303,song:209302,song:211101,song:211102,song:211103,song:209203,song:209201,song:205101,song:209202,song:205103,song:205102,song:208301,song:208302,song:200022,song:200023,song:200021,song:209103,song:209102,song:209101,song:200014,song:200013,song:200011,song:200012,song:208204,song:208202,song:208203,song:208201,song:208103,song:200003,song:200002,song:208101,song:208102,song:211122] (unsorted)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961828	/dynamusic/SongsRepository	getPropertyValue(song:209103.title) -> "Baby Has the Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961843	/dynamusic/SongsRepository	getPropertyValue(song:209103.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961843	/dynamusic/SongsRepository	getPropertyValue(song:205103.title) -> "Streets of San Antonio" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961843	/dynamusic/SongsRepository	getPropertyValue(song:205103.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961843	/dynamusic/SongsRepository	getPropertyValue(song:205302.title) -> "It Ain't A Mystery" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961843	/dynamusic/SongsRepository	getPropertyValue(song:205302.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961843	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:21 IST 2012	1340438961859	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	  WHERE t1.genre IN (?,?)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	p[1] = {pd: genre} 3 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	p[2] = {pd: genre} 1 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	getItems(song: [200001, 200002, 200003, 200011, 200012, 200013, 200014, 200021, 200022, 200023, 205101, 205102, 205103, 205201, 205202, 205203, 205301, 205302, 205303, 208101, 208102, 208103, 208201, 208202, 208203, 208204, 208301, 208302, 209101, 209102, 209103, 209201, 209202, 209203, 209301, 209302, 209303, 211101, 211102, 211103, 211122, 211201, 211202, 211203])
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962718	/dynamusic/SongsRepository	executeQuery(song,0,44,genre IN {[blues, country]}) -> [song:200001,song:205201,song:211201,song:205202,song:211202,song:205203,song:211203,song:205301,song:205303,song:205302,song:209301,song:209303,song:209302,song:211101,song:211102,song:211103,song:209203,song:209201,song:205101,song:209202,song:205103,song:205102,song:208301,song:208302,song:200022,song:200023,song:200021,song:209103,song:209102,song:209101,song:200014,song:200013,song:200011,song:200012,song:208204,song:208202,song:208203,song:208201,song:208103,song:200003,song:200002,song:208101,song:208102,song:211122] (unsorted)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962734	/dynamusic/SongsRepository	getPropertyValue(song:205103.title) -> "Streets of San Antonio" (cached with no transaction)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962734	/dynamusic/SongsRepository	getPropertyValue(song:205103.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962734	/dynamusic/SongsRepository	getPropertyValue(song:209103.title) -> "Baby Has the Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962734	/dynamusic/SongsRepository	getPropertyValue(song:209103.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962734	/dynamusic/SongsRepository	getPropertyValue(song:200011.title) -> "If You Know Me" (cached with no transaction)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962734	/dynamusic/SongsRepository	getPropertyValue(song:200011.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962734	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:22 IST 2012	1340438962750	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	  WHERE t1.genre IN (?,?)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	p[1] = {pd: genre} 3 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	p[2] = {pd: genre} 1 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	getItems(song: [200001, 200002, 200003, 200011, 200012, 200013, 200014, 200021, 200022, 200023, 205101, 205102, 205103, 205201, 205202, 205203, 205301, 205302, 205303, 208101, 208102, 208103, 208201, 208202, 208203, 208204, 208301, 208302, 209101, 209102, 209103, 209201, 209202, 209203, 209301, 209302, 209303, 211101, 211102, 211103, 211122, 211201, 211202, 211203])
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	executeQuery(song,0,44,genre IN {[blues, country]}) -> [song:200001,song:205201,song:211201,song:205202,song:211202,song:205203,song:211203,song:205301,song:205303,song:205302,song:209301,song:209303,song:209302,song:211101,song:211102,song:211103,song:209203,song:209201,song:205101,song:209202,song:205103,song:205102,song:208301,song:208302,song:200022,song:200023,song:200021,song:209103,song:209102,song:209101,song:200014,song:200013,song:200011,song:200012,song:208204,song:208202,song:208203,song:208201,song:208103,song:200003,song:200002,song:208101,song:208102,song:211122] (unsorted)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	getPropertyValue(song:209103.title) -> "Baby Has the Blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	getPropertyValue(song:209103.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963265	/dynamusic/SongsRepository	getPropertyValue(song:200013.title) -> "Rock With Me" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963281	/dynamusic/SongsRepository	getPropertyValue(song:200013.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963281	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963281	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963281	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963281	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	  WHERE t1.genre IN (?,?)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	p[1] = {pd: genre} 3 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	p[2] = {pd: genre} 1 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	getItems(song: [200001, 200002, 200003, 200011, 200012, 200013, 200014, 200021, 200022, 200023, 205101, 205102, 205103, 205201, 205202, 205203, 205301, 205302, 205303, 208101, 208102, 208103, 208201, 208202, 208203, 208204, 208301, 208302, 209101, 209102, 209103, 209201, 209202, 209203, 209301, 209302, 209303, 211101, 211102, 211103, 211122, 211201, 211202, 211203])
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963906	/dynamusic/SongsRepository	executeQuery(song,0,44,genre IN {[blues, country]}) -> [song:200001,song:205201,song:211201,song:205202,song:211202,song:205203,song:211203,song:205301,song:205303,song:205302,song:209301,song:209303,song:209302,song:211101,song:211102,song:211103,song:209203,song:209201,song:205101,song:209202,song:205103,song:205102,song:208301,song:208302,song:200022,song:200023,song:200021,song:209103,song:209102,song:209101,song:200014,song:200013,song:200011,song:200012,song:208204,song:208202,song:208203,song:208201,song:208103,song:200003,song:200002,song:208101,song:208102,song:211122] (unsorted)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963921	/dynamusic/SongsRepository	getPropertyValue(song:200003.title) -> "How Blue Are You?" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963921	/dynamusic/SongsRepository	getPropertyValue(song:200003.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963921	/dynamusic/SongsRepository	getPropertyValue(song:211102.title) -> "Toronto" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963921	/dynamusic/SongsRepository	getPropertyValue(song:211102.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963921	/dynamusic/SongsRepository	getPropertyValue(song:205202.title) -> "The Tall Trees" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963921	/dynamusic/SongsRepository	getPropertyValue(song:205202.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963921	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:23 IST 2012	1340438963921	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964609	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964609	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964609	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964609	/dynamusic/SongsRepository	  WHERE t1.genre IN (?,?)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964609	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964609	/dynamusic/SongsRepository	p[1] = {pd: genre} 3 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964609	/dynamusic/SongsRepository	p[2] = {pd: genre} 1 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964609	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964609	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964625	/dynamusic/SongsRepository	getItems(song: [200001, 200002, 200003, 200011, 200012, 200013, 200014, 200021, 200022, 200023, 205101, 205102, 205103, 205201, 205202, 205203, 205301, 205302, 205303, 208101, 208102, 208103, 208201, 208202, 208203, 208204, 208301, 208302, 209101, 209102, 209103, 209201, 209202, 209203, 209301, 209302, 209303, 211101, 211102, 211103, 211122, 211201, 211202, 211203])
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964625	/dynamusic/SongsRepository	executeQuery(song,0,44,genre IN {[blues, country]}) -> [song:200001,song:205201,song:211201,song:205202,song:211202,song:205203,song:211203,song:205301,song:205303,song:205302,song:209301,song:209303,song:209302,song:211101,song:211102,song:211103,song:209203,song:209201,song:205101,song:209202,song:205103,song:205102,song:208301,song:208302,song:200022,song:200023,song:200021,song:209103,song:209102,song:209101,song:200014,song:200013,song:200011,song:200012,song:208204,song:208202,song:208203,song:208201,song:208103,song:200003,song:200002,song:208101,song:208102,song:211122] (unsorted)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964625	/dynamusic/SongsRepository	getPropertyValue(song:208102.title) -> "Gonna See You Soon" (cached with no transaction)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964625	/dynamusic/SongsRepository	getPropertyValue(song:208102.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964640	/dynamusic/SongsRepository	getPropertyValue(song:209203.title) -> "I Feel Like Going North" (cached with no transaction)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964640	/dynamusic/SongsRepository	getPropertyValue(song:209203.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964640	/dynamusic/SongsRepository	getPropertyValue(song:200021.title) -> "Tough Heart" (cached with no transaction)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964640	/dynamusic/SongsRepository	getPropertyValue(song:200021.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964656	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:24 IST 2012	1340438964671	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967671	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967687	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967687	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967687	/dynamusic/SongsRepository	getPropertyValue(song:211122.title) -> "Landing With A Thud In Shreveport" (cached with no transaction)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967687	/dynamusic/SongsRepository	getPropertyValue(song:211122.genre) -> "country" (cached with no transaction)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967687	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967687	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967687	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:27 IST 2012	1340438967687	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?)
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	p[1] = {pd} 300093 (java.lang.String)
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	p[2] = {pd} 300043 (java.lang.String)
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	p[3] = {pd} 300061 (java.lang.String)
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	p[4] = {pd} 300071 (java.lang.String)
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	p[5] = {pd} 300124 (java.lang.String)
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	getItems(album: [300043, 300061, 300071, 300093, 300124])
**** debug	Sat Jun 23 13:39:35 IST 2012	1340438975984	/dynamusic/SongsRepository	executeQuery(album,0,5,id in [300093, 300043, 300061, 300071, 300124]) -> [album:300043,album:300061,album:300071,album:300093,album:300124] (unsorted)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976140	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976140	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976140	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976140	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976140	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976140	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976140	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976140	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976140	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976156	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976156	/dynamusic/SongsRepository	getPropertyValue(song:200072.title) -> "Something to Say" (cached with no transaction)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976156	/dynamusic/SongsRepository	getPropertyValue(song:200072.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976156	/dynamusic/SongsRepository	getPropertyValue(song:204303.title) -> "Blue Blanket" (cached with no transaction)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976156	/dynamusic/SongsRepository	getPropertyValue(song:204303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976156	/dynamusic/SongsRepository	getPropertyValue(song:210205.title) -> "Possibly" (cached with no transaction)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976156	/dynamusic/SongsRepository	getPropertyValue(song:210205.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:36 IST 2012	1340438976171	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978468	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978468	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978468	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978468	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978468	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978468	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978468	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978468	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978468	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978484	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978484	/dynamusic/SongsRepository	getPropertyValue(song:213103.title) -> "Break My Heart" (cached with no transaction)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978484	/dynamusic/SongsRepository	getPropertyValue(song:213103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978484	/dynamusic/SongsRepository	getPropertyValue(song:213203.title) -> "Candlelight Song" (cached with no transaction)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978484	/dynamusic/SongsRepository	getPropertyValue(song:213203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978484	/dynamusic/SongsRepository	getPropertyValue(song:212203.title) -> "Queen Rose" (cached with no transaction)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978484	/dynamusic/SongsRepository	getPropertyValue(song:212203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978500	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:38 IST 2012	1340438978515	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979718	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979718	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979718	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979718	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979718	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979718	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979718	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979718	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979734	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979734	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979750	/dynamusic/SongsRepository	getPropertyValue(song:204304.title) -> "What's So Funny?" (cached with no transaction)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979750	/dynamusic/SongsRepository	getPropertyValue(song:204304.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979750	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979750	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979750	/dynamusic/SongsRepository	getPropertyValue(song:200057.title) -> "Lucky in the Grass" (cached with no transaction)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979750	/dynamusic/SongsRepository	getPropertyValue(song:200057.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979750	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:39 IST 2012	1340438979765	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981203	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981218	/dynamusic/SongsRepository	getPropertyValue(song:200072.title) -> "Something to Say" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981218	/dynamusic/SongsRepository	getPropertyValue(song:200072.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981218	/dynamusic/SongsRepository	getPropertyValue(song:204302.title) -> "London" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981218	/dynamusic/SongsRepository	getPropertyValue(song:204302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981218	/dynamusic/SongsRepository	getPropertyValue(song:212101.title) -> "Sleeper Hat" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981218	/dynamusic/SongsRepository	getPropertyValue(song:212101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981218	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981234	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981593	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981593	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981593	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981593	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981593	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981593	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981593	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981593	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981609	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981609	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981609	/dynamusic/SongsRepository	getPropertyValue(song:206202.title) -> "With Muriel" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981609	/dynamusic/SongsRepository	getPropertyValue(song:206202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981609	/dynamusic/SongsRepository	getPropertyValue(song:210201.title) -> "Army Ant" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981609	/dynamusic/SongsRepository	getPropertyValue(song:210201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981609	/dynamusic/SongsRepository	getPropertyValue(song:212101.title) -> "Sleeper Hat" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981609	/dynamusic/SongsRepository	getPropertyValue(song:212101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981609	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:41 IST 2012	1340438981625	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986453	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986453	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986453	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986453	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986453	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986453	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986453	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986453	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986453	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986468	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986468	/dynamusic/SongsRepository	getPropertyValue(song:213203.title) -> "Candlelight Song" (cached with no transaction)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986468	/dynamusic/SongsRepository	getPropertyValue(song:213203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986468	/dynamusic/SongsRepository	getPropertyValue(song:206104.title) -> "You're Horrible" (cached with no transaction)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986468	/dynamusic/SongsRepository	getPropertyValue(song:206104.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986468	/dynamusic/SongsRepository	getPropertyValue(song:200053.title) -> "Lovely Loretta" (cached with no transaction)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986468	/dynamusic/SongsRepository	getPropertyValue(song:200053.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986484	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:46 IST 2012	1340438986484	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	getPropertyValue(song:210103.title) -> "Debutante" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	getPropertyValue(song:210103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	getPropertyValue(song:200071.title) -> "Rooftop Garden" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987015	/dynamusic/SongsRepository	getPropertyValue(song:200071.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987031	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987031	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987703	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987703	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987703	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987703	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987703	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987703	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987703	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987703	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987718	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987718	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987734	/dynamusic/SongsRepository	getPropertyValue(song:200073.title) -> "Getting Together" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987734	/dynamusic/SongsRepository	getPropertyValue(song:200073.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987734	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987734	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987734	/dynamusic/SongsRepository	getPropertyValue(song:212303.title) -> "Take the Money" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987734	/dynamusic/SongsRepository	getPropertyValue(song:212303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987734	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:47 IST 2012	1340438987750	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:48 IST 2012	1340438988984	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:48 IST 2012	1340438988984	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:48 IST 2012	1340438988984	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:48 IST 2012	1340438988984	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:48 IST 2012	1340438988984	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:48 IST 2012	1340438988984	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:48 IST 2012	1340438988984	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:48 IST 2012	1340438988984	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989000	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989000	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989015	/dynamusic/SongsRepository	getPropertyValue(song:210303.title) -> "It's Up to You" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989015	/dynamusic/SongsRepository	getPropertyValue(song:210303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989015	/dynamusic/SongsRepository	getPropertyValue(song:200052.title) -> "For the Benefit of a Song" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989015	/dynamusic/SongsRepository	getPropertyValue(song:200052.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989015	/dynamusic/SongsRepository	getPropertyValue(song:213102.title) -> "You Make Me Sing" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989015	/dynamusic/SongsRepository	getPropertyValue(song:213102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989015	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989031	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989375	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989390	/dynamusic/SongsRepository	getPropertyValue(song:206203.title) -> "Chuck" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989390	/dynamusic/SongsRepository	getPropertyValue(song:206203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989390	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989390	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989390	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989390	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989390	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989390	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989953	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989953	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989953	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989953	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989953	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989953	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989953	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989953	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989968	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989968	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989984	/dynamusic/SongsRepository	getPropertyValue(song:213302.title) -> "Miami Nights" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989984	/dynamusic/SongsRepository	getPropertyValue(song:213302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989984	/dynamusic/SongsRepository	getPropertyValue(song:213301.title) -> "He Wasn't Good Enough" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989984	/dynamusic/SongsRepository	getPropertyValue(song:213301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989984	/dynamusic/SongsRepository	getPropertyValue(song:210202.title) -> "Hill" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989984	/dynamusic/SongsRepository	getPropertyValue(song:210202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:49 IST 2012	1340438989984	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:50 IST 2012	1340438990000	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993046	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993062	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993062	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993062	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993062	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993062	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993062	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993062	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993062	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993078	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:39:53 IST 2012	1340438993078	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	p[1] = {pd} 300091 (java.lang.String)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	p[2] = {pd} 300001 (java.lang.String)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	p[3] = {pd} 300003 (java.lang.String)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	p[4] = {pd} 300063 (java.lang.String)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	getItems(album: [300001, 300003, 300063, 300091])
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001078	/dynamusic/SongsRepository	executeQuery(album,0,4,id in [300091, 300001, 300003, 300063]) -> [album:300001,album:300003,album:300063,album:300091] (unsorted)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001156	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001156	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001156	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001156	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001156	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001156	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001156	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001156	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001171	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001171	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001171	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001171	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001171	/dynamusic/SongsRepository	getPropertyValue(song:200042.title) -> "To You I Sing" (cached with no transaction)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001171	/dynamusic/SongsRepository	getPropertyValue(song:200042.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001171	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001171	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:01 IST 2012	1340439001171	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004203	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004218	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004218	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004218	/dynamusic/SongsRepository	getPropertyValue(song:200044.title) -> "Until I First Saw You" (cached with no transaction)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004218	/dynamusic/SongsRepository	getPropertyValue(song:200044.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004218	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004218	/dynamusic/SongsRepository	getPropertyValue(song:200031.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004218	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:40:04 IST 2012	1340439004218	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005265	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005265	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005265	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005265	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005265	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005265	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005265	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005265	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005281	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005281	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005281	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005281	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005281	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005281	/dynamusic/SongsRepository	getPropertyValue(song:200036.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005281	/dynamusic/SongsRepository	getPropertyValue(song:200044.title) -> "Until I First Saw You" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005281	/dynamusic/SongsRepository	getPropertyValue(song:200044.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005281	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005296	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005484	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005484	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005484	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005484	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005484	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005484	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005484	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005484	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005500	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005500	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005500	/dynamusic/SongsRepository	getPropertyValue(song:200041.title) -> "Take the Last Train" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005500	/dynamusic/SongsRepository	getPropertyValue(song:200041.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005500	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005500	/dynamusic/SongsRepository	getPropertyValue(song:200031.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005500	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005500	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005500	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:40:05 IST 2012	1340439005515	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053156	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053171	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053171	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053171	/dynamusic/SongsRepository	getPropertyValue(song:207103.title) -> "Concerto No. 1, Op. 1" (cached with no transaction)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053171	/dynamusic/SongsRepository	getPropertyValue(song:207103.genre) -> "classical" (cached with no transaction)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053171	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053171	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053171	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:40:53 IST 2012	1340439053187	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	p[1] = {pd} 300093 (java.lang.String)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	p[2] = {pd} 300043 (java.lang.String)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	p[3] = {pd} 300061 (java.lang.String)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	p[4] = {pd} 300071 (java.lang.String)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	p[5] = {pd} 300124 (java.lang.String)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	getItems(album: [300043, 300061, 300071, 300093, 300124])
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058390	/dynamusic/SongsRepository	executeQuery(album,0,5,id in [300093, 300043, 300061, 300071, 300124]) -> [album:300043,album:300061,album:300071,album:300093,album:300124] (unsorted)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058515	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058531	/dynamusic/SongsRepository	getPropertyValue(song:212203.title) -> "Queen Rose" (cached with no transaction)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058531	/dynamusic/SongsRepository	getPropertyValue(song:212203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058531	/dynamusic/SongsRepository	getPropertyValue(song:206303.title) -> "High-Rises" (cached with no transaction)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058531	/dynamusic/SongsRepository	getPropertyValue(song:206303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058531	/dynamusic/SongsRepository	getPropertyValue(song:200054.title) -> "Getting Warmer" (cached with no transaction)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058531	/dynamusic/SongsRepository	getPropertyValue(song:200054.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:40:58 IST 2012	1340439058531	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060609	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060609	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060609	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060609	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060609	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060609	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060609	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060609	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060625	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060625	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060625	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060625	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060625	/dynamusic/SongsRepository	getPropertyValue(song:200052.title) -> "For the Benefit of a Song" (cached with no transaction)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060625	/dynamusic/SongsRepository	getPropertyValue(song:200052.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060625	/dynamusic/SongsRepository	getPropertyValue(song:204203.title) -> "Out of Time" (cached with no transaction)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060625	/dynamusic/SongsRepository	getPropertyValue(song:204203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:00 IST 2012	1340439060625	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061312	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061312	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061312	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061312	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061312	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061312	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061312	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061312	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061328	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061328	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061328	/dynamusic/SongsRepository	getPropertyValue(song:200073.title) -> "Getting Together" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061328	/dynamusic/SongsRepository	getPropertyValue(song:200073.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061328	/dynamusic/SongsRepository	getPropertyValue(song:210303.title) -> "It's Up to You" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061328	/dynamusic/SongsRepository	getPropertyValue(song:210303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061328	/dynamusic/SongsRepository	getPropertyValue(song:212102.title) -> "Temporary Misdemeanor" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061328	/dynamusic/SongsRepository	getPropertyValue(song:212102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061328	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061875	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061890	/dynamusic/SongsRepository	getPropertyValue(song:206304.title) -> "I'm Beautiful" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061890	/dynamusic/SongsRepository	getPropertyValue(song:206304.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061890	/dynamusic/SongsRepository	getPropertyValue(song:210302.title) -> "Moth" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061890	/dynamusic/SongsRepository	getPropertyValue(song:210302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061890	/dynamusic/SongsRepository	getPropertyValue(song:213202.title) -> "Breath of Love" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061890	/dynamusic/SongsRepository	getPropertyValue(song:213202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:01 IST 2012	1340439061890	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062359	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062359	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062359	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062359	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062359	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062359	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062359	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062359	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062375	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062390	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062390	/dynamusic/SongsRepository	getPropertyValue(song:204103.title) -> "Watching the Waves" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062390	/dynamusic/SongsRepository	getPropertyValue(song:204103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062390	/dynamusic/SongsRepository	getPropertyValue(song:206203.title) -> "Chuck" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062390	/dynamusic/SongsRepository	getPropertyValue(song:206203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062390	/dynamusic/SongsRepository	getPropertyValue(song:210201.title) -> "Army Ant" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062406	/dynamusic/SongsRepository	getPropertyValue(song:210201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062406	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	getPropertyValue(song:210104.title) -> "Full of Hope" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	getPropertyValue(song:210104.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	getPropertyValue(song:200059.title) -> "Day In Day Out" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	getPropertyValue(song:200059.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	getPropertyValue(song:206301.title) -> "Leaving Town" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062718	/dynamusic/SongsRepository	getPropertyValue(song:206301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:02 IST 2012	1340439062734	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063062	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063062	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063062	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063062	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063062	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063062	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063062	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063062	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063078	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063078	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063093	/dynamusic/SongsRepository	getPropertyValue(song:206201.title) -> "I'm Honest" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063093	/dynamusic/SongsRepository	getPropertyValue(song:206201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063093	/dynamusic/SongsRepository	getPropertyValue(song:200056.title) -> "Roadside Attraction" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063093	/dynamusic/SongsRepository	getPropertyValue(song:200056.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063093	/dynamusic/SongsRepository	getPropertyValue(song:204103.title) -> "Watching the Waves" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063093	/dynamusic/SongsRepository	getPropertyValue(song:204103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063093	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063890	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063890	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063890	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063890	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063890	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063890	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063890	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063890	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063890	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063906	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063906	/dynamusic/SongsRepository	getPropertyValue(song:204201.title) -> "Beyond Relief" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063906	/dynamusic/SongsRepository	getPropertyValue(song:204201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063906	/dynamusic/SongsRepository	getPropertyValue(song:206103.title) -> "Swimsong" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063906	/dynamusic/SongsRepository	getPropertyValue(song:206103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063906	/dynamusic/SongsRepository	getPropertyValue(song:210205.title) -> "Possibly" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063906	/dynamusic/SongsRepository	getPropertyValue(song:210205.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:03 IST 2012	1340439063906	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064093	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064093	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064093	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064093	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064093	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064093	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064093	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064093	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064109	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064109	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064109	/dynamusic/SongsRepository	getPropertyValue(song:210103.title) -> "Debutante" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064109	/dynamusic/SongsRepository	getPropertyValue(song:210103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064109	/dynamusic/SongsRepository	getPropertyValue(song:204303.title) -> "Blue Blanket" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064109	/dynamusic/SongsRepository	getPropertyValue(song:204303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064109	/dynamusic/SongsRepository	getPropertyValue(song:210303.title) -> "It's Up to You" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064109	/dynamusic/SongsRepository	getPropertyValue(song:210303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064109	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064421	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064421	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064421	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064421	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064421	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064421	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064421	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064421	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064437	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064437	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064437	/dynamusic/SongsRepository	getPropertyValue(song:200056.title) -> "Roadside Attraction" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064437	/dynamusic/SongsRepository	getPropertyValue(song:200056.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064437	/dynamusic/SongsRepository	getPropertyValue(song:212102.title) -> "Temporary Misdemeanor" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064437	/dynamusic/SongsRepository	getPropertyValue(song:212102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064437	/dynamusic/SongsRepository	getPropertyValue(song:210303.title) -> "It's Up to You" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064437	/dynamusic/SongsRepository	getPropertyValue(song:210303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064437	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064796	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064796	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064796	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064796	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064796	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064796	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064796	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064796	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064812	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064812	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064828	/dynamusic/SongsRepository	getPropertyValue(song:212104.title) -> "I Want You to Know" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064828	/dynamusic/SongsRepository	getPropertyValue(song:212104.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064828	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064828	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064828	/dynamusic/SongsRepository	getPropertyValue(song:206103.title) -> "Swimsong" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064828	/dynamusic/SongsRepository	getPropertyValue(song:206103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:04 IST 2012	1340439064828	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065140	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065140	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065140	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065140	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065140	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065140	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065140	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065140	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065156	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065156	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065171	/dynamusic/SongsRepository	getPropertyValue(song:212102.title) -> "Temporary Misdemeanor" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065171	/dynamusic/SongsRepository	getPropertyValue(song:212102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065171	/dynamusic/SongsRepository	getPropertyValue(song:200055.title) -> "With a Little Push" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065171	/dynamusic/SongsRepository	getPropertyValue(song:200055.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065171	/dynamusic/SongsRepository	getPropertyValue(song:210202.title) -> "Hill" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065171	/dynamusic/SongsRepository	getPropertyValue(song:210202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065171	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065359	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065375	/dynamusic/SongsRepository	getPropertyValue(song:212203.title) -> "Queen Rose" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065375	/dynamusic/SongsRepository	getPropertyValue(song:212203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065375	/dynamusic/SongsRepository	getPropertyValue(song:210301.title) -> "Hidden Places" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065375	/dynamusic/SongsRepository	getPropertyValue(song:210301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065375	/dynamusic/SongsRepository	getPropertyValue(song:204201.title) -> "Beyond Relief" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065375	/dynamusic/SongsRepository	getPropertyValue(song:204201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065375	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065671	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065687	/dynamusic/SongsRepository	getPropertyValue(song:206102.title) -> "Store Window" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065687	/dynamusic/SongsRepository	getPropertyValue(song:206102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065687	/dynamusic/SongsRepository	getPropertyValue(song:200057.title) -> "Lucky in the Grass" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065687	/dynamusic/SongsRepository	getPropertyValue(song:200057.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065687	/dynamusic/SongsRepository	getPropertyValue(song:200055.title) -> "With a Little Push" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065687	/dynamusic/SongsRepository	getPropertyValue(song:200055.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065687	/dynamusic/SongsRepository	getPropertyValue(album:300043.title) -> "Candy Cigarettes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065937	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065937	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065937	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065937	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065937	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065937	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065937	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065937	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065953	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065968	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065968	/dynamusic/SongsRepository	getPropertyValue(song:200063.title) -> "Maggie May I" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065968	/dynamusic/SongsRepository	getPropertyValue(song:200063.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065968	/dynamusic/SongsRepository	getPropertyValue(song:213302.title) -> "Miami Nights" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065968	/dynamusic/SongsRepository	getPropertyValue(song:213302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065968	/dynamusic/SongsRepository	getPropertyValue(song:213103.title) -> "Break My Heart" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065968	/dynamusic/SongsRepository	getPropertyValue(song:213103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:05 IST 2012	1340439065984	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066218	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066218	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066218	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066218	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066218	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066218	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066218	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066218	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066234	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066234	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066234	/dynamusic/SongsRepository	getPropertyValue(song:204102.title) -> "The Angels Wore Red" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066234	/dynamusic/SongsRepository	getPropertyValue(song:204102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066234	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066234	/dynamusic/SongsRepository	getPropertyValue(song:212301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066234	/dynamusic/SongsRepository	getPropertyValue(song:210301.title) -> "Hidden Places" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066234	/dynamusic/SongsRepository	getPropertyValue(song:210301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066250	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066468	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066468	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066468	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066468	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066468	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066468	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066468	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066468	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066484	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066484	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066484	/dynamusic/SongsRepository	getPropertyValue(song:200059.title) -> "Day In Day Out" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066484	/dynamusic/SongsRepository	getPropertyValue(song:200059.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066484	/dynamusic/SongsRepository	getPropertyValue(song:200056.title) -> "Roadside Attraction" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066484	/dynamusic/SongsRepository	getPropertyValue(song:200056.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066484	/dynamusic/SongsRepository	getPropertyValue(song:212303.title) -> "Take the Money" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066484	/dynamusic/SongsRepository	getPropertyValue(song:212303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:06 IST 2012	1340439066500	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067640	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067640	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067640	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067640	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067640	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067640	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067640	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067640	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067656	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067656	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067656	/dynamusic/SongsRepository	getPropertyValue(song:213203.title) -> "Candlelight Song" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067656	/dynamusic/SongsRepository	getPropertyValue(song:213203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067656	/dynamusic/SongsRepository	getPropertyValue(song:206302.title) -> "Japan" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067656	/dynamusic/SongsRepository	getPropertyValue(song:206302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067671	/dynamusic/SongsRepository	getPropertyValue(song:206303.title) -> "High-Rises" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067671	/dynamusic/SongsRepository	getPropertyValue(song:206303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067671	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067828	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067828	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067828	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067828	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067828	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067828	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067828	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067828	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067843	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067843	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067843	/dynamusic/SongsRepository	getPropertyValue(song:206204.title) -> "I'm Not Alone" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067843	/dynamusic/SongsRepository	getPropertyValue(song:206204.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067843	/dynamusic/SongsRepository	getPropertyValue(song:210203.title) -> "So Quiet" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067843	/dynamusic/SongsRepository	getPropertyValue(song:210203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067843	/dynamusic/SongsRepository	getPropertyValue(song:200056.title) -> "Roadside Attraction" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067843	/dynamusic/SongsRepository	getPropertyValue(song:200056.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:07 IST 2012	1340439067859	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068187	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068203	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068203	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068203	/dynamusic/SongsRepository	getPropertyValue(song:213303.title) -> "Blue Piano" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068203	/dynamusic/SongsRepository	getPropertyValue(song:213303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068203	/dynamusic/SongsRepository	getPropertyValue(song:204201.title) -> "Beyond Relief" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068203	/dynamusic/SongsRepository	getPropertyValue(song:204201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068203	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068468	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068484	/dynamusic/SongsRepository	getPropertyValue(song:206104.title) -> "You're Horrible" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068484	/dynamusic/SongsRepository	getPropertyValue(song:206104.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068484	/dynamusic/SongsRepository	getPropertyValue(song:200054.title) -> "Getting Warmer" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068484	/dynamusic/SongsRepository	getPropertyValue(song:200054.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068484	/dynamusic/SongsRepository	getPropertyValue(song:212201.title) -> "Love and Death" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068484	/dynamusic/SongsRepository	getPropertyValue(song:212201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068484	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	getPropertyValue(song:212102.title) -> "Temporary Misdemeanor" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	getPropertyValue(song:212102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	getPropertyValue(song:204102.title) -> "The Angels Wore Red" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	getPropertyValue(song:204102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	getPropertyValue(song:206204.title) -> "I'm Not Alone" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068750	/dynamusic/SongsRepository	getPropertyValue(song:206204.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:08 IST 2012	1340439068765	/dynamusic/SongsRepository	getPropertyValue(album:300071.title) -> "Concerto No. 2" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	getPropertyValue(song:213203.title) -> "Candlelight Song" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	getPropertyValue(song:213203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	getPropertyValue(song:206302.title) -> "Japan" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	getPropertyValue(song:206302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	getPropertyValue(song:204303.title) -> "Blue Blanket" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	getPropertyValue(song:204303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069125	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069421	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069421	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069421	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069421	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069421	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069421	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069421	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069421	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069437	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069437	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069437	/dynamusic/SongsRepository	getPropertyValue(song:200053.title) -> "Lovely Loretta" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069437	/dynamusic/SongsRepository	getPropertyValue(song:200053.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069437	/dynamusic/SongsRepository	getPropertyValue(song:204103.title) -> "Watching the Waves" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069437	/dynamusic/SongsRepository	getPropertyValue(song:204103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069437	/dynamusic/SongsRepository	getPropertyValue(song:200061.title) -> "The Long Road" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069437	/dynamusic/SongsRepository	getPropertyValue(song:200061.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069437	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069718	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069718	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069718	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069718	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069718	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069718	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069718	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069718	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069734	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069734	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069750	/dynamusic/SongsRepository	getPropertyValue(song:204103.title) -> "Watching the Waves" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069750	/dynamusic/SongsRepository	getPropertyValue(song:204103.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069750	/dynamusic/SongsRepository	getPropertyValue(song:200053.title) -> "Lovely Loretta" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069750	/dynamusic/SongsRepository	getPropertyValue(song:200053.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069750	/dynamusic/SongsRepository	getPropertyValue(song:212303.title) -> "Take the Money" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069750	/dynamusic/SongsRepository	getPropertyValue(song:212303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069750	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069984	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069984	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069984	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069984	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069984	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069984	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069984	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069984	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:09 IST 2012	1340439069984	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070000	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070000	/dynamusic/SongsRepository	getPropertyValue(song:212402.title) -> "Everything Is Frozen" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070000	/dynamusic/SongsRepository	getPropertyValue(song:212402.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070000	/dynamusic/SongsRepository	getPropertyValue(song:200058.title) -> "Wthout You What Am I" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070000	/dynamusic/SongsRepository	getPropertyValue(song:200058.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070000	/dynamusic/SongsRepository	getPropertyValue(song:212303.title) -> "Take the Money" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070000	/dynamusic/SongsRepository	getPropertyValue(song:212303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070000	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070296	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070312	/dynamusic/SongsRepository	getPropertyValue(song:206203.title) -> "Chuck" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070312	/dynamusic/SongsRepository	getPropertyValue(song:206203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070312	/dynamusic/SongsRepository	getPropertyValue(song:200052.title) -> "For the Benefit of a Song" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070312	/dynamusic/SongsRepository	getPropertyValue(song:200052.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070312	/dynamusic/SongsRepository	getPropertyValue(song:200053.title) -> "Lovely Loretta" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070312	/dynamusic/SongsRepository	getPropertyValue(song:200053.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070312	/dynamusic/SongsRepository	getPropertyValue(album:300061.title) -> "City Life" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070593	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070593	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070593	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070593	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070593	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070593	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070593	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070593	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070609	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070609	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070609	/dynamusic/SongsRepository	getPropertyValue(song:206301.title) -> "Leaving Town" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070609	/dynamusic/SongsRepository	getPropertyValue(song:206301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070609	/dynamusic/SongsRepository	getPropertyValue(song:210303.title) -> "It's Up to You" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070609	/dynamusic/SongsRepository	getPropertyValue(song:210303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070609	/dynamusic/SongsRepository	getPropertyValue(song:206305.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070609	/dynamusic/SongsRepository	getPropertyValue(song:206305.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070609	/dynamusic/SongsRepository	getPropertyValue(album:300093.title) -> "Bring On The Night" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070906	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070906	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070906	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070906	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070906	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070906	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070906	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070906	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070921	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070921	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070921	/dynamusic/SongsRepository	getPropertyValue(song:213102.title) -> "You Make Me Sing" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070921	/dynamusic/SongsRepository	getPropertyValue(song:213102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070921	/dynamusic/SongsRepository	getPropertyValue(song:212101.title) -> "Sleeper Hat" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070937	/dynamusic/SongsRepository	getPropertyValue(song:212101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070937	/dynamusic/SongsRepository	getPropertyValue(song:212104.title) -> "I Want You to Know" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070937	/dynamusic/SongsRepository	getPropertyValue(song:212104.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:10 IST 2012	1340439070937	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071250	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071265	/dynamusic/SongsRepository	getPropertyValue(song:213201.title) -> "Another Sad Song" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071265	/dynamusic/SongsRepository	getPropertyValue(song:213201.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071265	/dynamusic/SongsRepository	getPropertyValue(song:206302.title) -> "Japan" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071265	/dynamusic/SongsRepository	getPropertyValue(song:206302.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071265	/dynamusic/SongsRepository	getPropertyValue(song:204203.title) -> "Out of Time" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071265	/dynamusic/SongsRepository	getPropertyValue(song:204203.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071265	/dynamusic/SongsRepository	getPropertyValue(album:300124.title) -> "Crimes" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	p[1] = {pd: genre} 2 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	getItems(song: [200051, 200052, 200053, 200054, 200055, 200056, 200057, 200058, 200059, 200061, 200062, 200063, 200064, 200071, 200072, 200073, 204101, 204102, 204103, 204201, 204202, 204203, 204204, 204301, 204302, 204303, 204304, 206101, 206102, 206103, 206104, 206201, 206202, 206203, 206204, 206301, 206302, 206303, 206304, 206305, 210101, 210102, 210103, 210104, 210201, 210202, 210203, 210204, 210205, 210301, 210302, 210303, 212101, 212102, 212103, 212104, 212201, 212202, 212203, 212301, 212302, 212303, 212401, 212402, 212403, 213101, 213102, 213103, 213201, 213202, 213203, 213301, 213302, 213303])
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071546	/dynamusic/SongsRepository	executeQuery(song,0,74,genre IN {[pop]}) -> [song:212403,song:212402,song:212401,song:204204,song:204301,song:204302,song:213302,song:213301,song:213303,song:206305,song:210102,song:210103,song:210101,song:212203,song:212202,song:210104,song:212201,song:212104,song:212103,song:212102,song:212301,song:212302,song:212303,song:200063,song:200062,song:200061,song:212101,song:200064,song:200059,song:213201,song:200057,song:210301,song:200058,song:210302,song:210303,song:213101,song:213102,song:210203,song:200073,song:210204,song:210205,song:200071,song:200072,song:210201,song:210202,song:206303,song:206304,song:204103,song:206301,song:204102,song:206302,song:204101,song:204203,song:204202,song:206102,song:204201,song:200052,song:213103,song:206101,song:200051,song:206104,song:200054,song:206103,song:200053,song:213202,song:204304,song:200056,song:213203,song:204303,song:200055,song:206204,song:206202,song:206203,song:206201] (unsorted)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071562	/dynamusic/SongsRepository	getPropertyValue(song:213303.title) -> "Blue Piano" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071562	/dynamusic/SongsRepository	getPropertyValue(song:213303.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071562	/dynamusic/SongsRepository	getPropertyValue(song:204204.title) -> "Kidding Around" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071562	/dynamusic/SongsRepository	getPropertyValue(song:204204.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071562	/dynamusic/SongsRepository	getPropertyValue(song:213102.title) -> "You Make Me Sing" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071562	/dynamusic/SongsRepository	getPropertyValue(song:213102.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:11 IST 2012	1340439071562	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075296	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	getPropertyValue(song:213101.title) -> "Please Come Over" (cached with no transaction)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	getPropertyValue(song:213101.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	getPropertyValue(song:200022.title) -> "Blues For Blue" (cached with no transaction)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	getPropertyValue(song:200022.genre) -> "blues" (cached with no transaction)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	getPropertyValue(song:204202.title) -> "Bobby Doll" (cached with no transaction)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	getPropertyValue(song:204202.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:41:15 IST 2012	1340439075312	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	   FROM dynamusic_album t1
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?)
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	p[1] = {pd} 300091 (java.lang.String)
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	p[2] = {pd} 300001 (java.lang.String)
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	p[3] = {pd} 300003 (java.lang.String)
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	p[4] = {pd} 300063 (java.lang.String)
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	getItems(album: [300001, 300003, 300063, 300091])
**** debug	Sat Jun 23 13:41:23 IST 2012	1340439083937	/dynamusic/SongsRepository	executeQuery(album,0,4,id in [300091, 300001, 300003, 300063]) -> [album:300001,album:300003,album:300063,album:300091] (unsorted)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084000	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084015	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084015	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084015	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pub" (cached with no transaction)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084015	/dynamusic/SongsRepository	getPropertyValue(song:200035.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084015	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084015	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:24 IST 2012	1340439084015	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086656	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086656	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086656	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086656	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086656	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086656	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086656	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086656	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086687	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086687	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086687	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086687	/dynamusic/SongsRepository	getPropertyValue(song:200034.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086687	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086703	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086703	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086703	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:26 IST 2012	1340439086703	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	getPropertyValue(song:200039.title) -> "Little Folk" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	getPropertyValue(song:200039.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087156	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087171	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087546	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087562	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Drinks With Friends" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087562	/dynamusic/SongsRepository	getPropertyValue(song:200037.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087562	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pub" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087562	/dynamusic/SongsRepository	getPropertyValue(song:200035.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087562	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087562	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:27 IST 2012	1340439087562	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	getPropertyValue(song:200044.title) -> "Until I First Saw You" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	getPropertyValue(song:200044.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	getPropertyValue(song:200036.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088203	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088218	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088593	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088609	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088609	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088609	/dynamusic/SongsRepository	getPropertyValue(song:200042.title) -> "To You I Sing" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088609	/dynamusic/SongsRepository	getPropertyValue(song:200042.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088609	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088609	/dynamusic/SongsRepository	getPropertyValue(song:200036.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:28 IST 2012	1340439088609	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pub" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	getPropertyValue(song:200035.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089015	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	getPropertyValue(song:200042.title) -> "To You I Sing" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	getPropertyValue(song:200042.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	getPropertyValue(song:200044.title) -> "Until I First Saw You" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	getPropertyValue(song:200044.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089421	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089781	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089781	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089781	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089781	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089781	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089781	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089781	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089781	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089796	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089796	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089796	/dynamusic/SongsRepository	getPropertyValue(song:200042.title) -> "To You I Sing" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089796	/dynamusic/SongsRepository	getPropertyValue(song:200042.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089796	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089796	/dynamusic/SongsRepository	getPropertyValue(song:200031.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089796	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Drinks With Friends" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089796	/dynamusic/SongsRepository	getPropertyValue(song:200037.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:29 IST 2012	1340439089812	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090187	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090187	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090187	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090187	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090187	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090187	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090187	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090187	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090187	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090203	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090203	/dynamusic/SongsRepository	getPropertyValue(song:200043.title) -> "Battle Road" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090203	/dynamusic/SongsRepository	getPropertyValue(song:200043.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090203	/dynamusic/SongsRepository	getPropertyValue(song:200041.title) -> "Take the Last Train" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090203	/dynamusic/SongsRepository	getPropertyValue(song:200041.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090203	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090203	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090218	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090609	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090609	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090609	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090609	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090609	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090609	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090609	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090609	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090625	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090625	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090625	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Drinks With Friends" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090625	/dynamusic/SongsRepository	getPropertyValue(song:200037.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090625	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090625	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090625	/dynamusic/SongsRepository	getPropertyValue(song:200041.title) -> "Take the Last Train" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090625	/dynamusic/SongsRepository	getPropertyValue(song:200041.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:30 IST 2012	1340439090625	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091140	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091156	/dynamusic/SongsRepository	getPropertyValue(song:200040.title) -> "What am I Doing Here?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091156	/dynamusic/SongsRepository	getPropertyValue(song:200040.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091156	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091156	/dynamusic/SongsRepository	getPropertyValue(song:200034.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091156	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091156	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091156	/dynamusic/SongsRepository	getPropertyValue(album:300001.title) -> "Live In Paris" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	getPropertyValue(song:200036.title) -> "Something Wild" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	getPropertyValue(song:200036.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	getPropertyValue(song:200031.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091562	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:31 IST 2012	1340439091578	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092015	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092015	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092015	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092015	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092015	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092015	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092015	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092015	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092046	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092046	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092062	/dynamusic/SongsRepository	getPropertyValue(song:200035.title) -> "Corner Pub" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092062	/dynamusic/SongsRepository	getPropertyValue(song:200035.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092062	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092062	/dynamusic/SongsRepository	getPropertyValue(song:200034.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092062	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092062	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092062	/dynamusic/SongsRepository	getPropertyValue(album:300091.title) -> "Live In Montreal" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Drinks With Friends" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	getPropertyValue(song:200037.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	getPropertyValue(song:200032.title) -> "Magic Mouse" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092421	/dynamusic/SongsRepository	getPropertyValue(song:200032.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092437	/dynamusic/SongsRepository	getPropertyValue(song:200039.title) -> "Little Folk" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092437	/dynamusic/SongsRepository	getPropertyValue(song:200039.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092437	/dynamusic/SongsRepository	getPropertyValue(album:300003.title) -> "Honey Bee" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092859	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092859	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092859	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092859	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092859	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092859	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092859	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092859	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092859	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092875	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092875	/dynamusic/SongsRepository	getPropertyValue(song:200033.title) -> "Sweetie Pie" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092875	/dynamusic/SongsRepository	getPropertyValue(song:200033.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092875	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092875	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092875	/dynamusic/SongsRepository	getPropertyValue(song:200042.title) -> "To You I Sing" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092875	/dynamusic/SongsRepository	getPropertyValue(song:200042.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:32 IST 2012	1340439092890	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	getPropertyValue(song:200037.title) -> "Drinks With Friends" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	getPropertyValue(song:200037.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	getPropertyValue(song:200034.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	getPropertyValue(song:200038.title) -> "Swing In" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093296	/dynamusic/SongsRepository	getPropertyValue(song:200038.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093312	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093921	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093937	/dynamusic/SongsRepository	getPropertyValue(song:200042.title) -> "To You I Sing" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093937	/dynamusic/SongsRepository	getPropertyValue(song:200042.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093937	/dynamusic/SongsRepository	getPropertyValue(song:200043.title) -> "Battle Road" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093937	/dynamusic/SongsRepository	getPropertyValue(song:200043.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093937	/dynamusic/SongsRepository	getPropertyValue(song:200034.title) -> "Didn't You Know?" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093937	/dynamusic/SongsRepository	getPropertyValue(song:200034.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:33 IST 2012	1340439093937	/dynamusic/SongsRepository	getPropertyValue(album:300063.title) -> "Goodbye Tourists" (cached with no transaction)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094125	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094125	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094125	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094125	/dynamusic/SongsRepository	  WHERE t1.genre IN (?)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094125	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094125	/dynamusic/SongsRepository	p[1] = {pd: genre} 0 (java.lang.Integer)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094125	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094125	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094140	/dynamusic/SongsRepository	getItems(song: [200031, 200032, 200033, 200034, 200035, 200036, 200037, 200038, 200039, 200040, 200041, 200042, 200043, 200044])
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094140	/dynamusic/SongsRepository	executeQuery(song,0,14,genre IN {[jazz]}) -> [song:200031,song:200032,song:200033,song:200034,song:200035,song:200036,song:200037,song:200038,song:200039,song:200040,song:200041,song:200042,song:200043,song:200044] (unsorted)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094140	/dynamusic/SongsRepository	getPropertyValue(song:200031.title) -> "Black Stockings" (cached with no transaction)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094140	/dynamusic/SongsRepository	getPropertyValue(song:200031.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094140	/dynamusic/SongsRepository	getPropertyValue(song:200043.title) -> "Battle Road" (cached with no transaction)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094140	/dynamusic/SongsRepository	getPropertyValue(song:200043.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094140	/dynamusic/SongsRepository	getPropertyValue(song:200039.title) -> "Little Folk" (cached with no transaction)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094140	/dynamusic/SongsRepository	getPropertyValue(song:200039.genre) -> "jazz" (cached with no transaction)
**** debug	Sat Jun 23 13:41:34 IST 2012	1340439094140	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	  WHERE NOT (1=1)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	(no parameters)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	[++SQLQuery++]
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	 SELECT t1.id
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	   FROM dynamusic_song t1
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	  WHERE t1.id IN (?,?,?,?,?,?,?,?,?,?,?)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[1] = {pd} 212401 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[2] = {pd} 204202 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[3] = {pd} 200022 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[4] = {pd} 207103 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[5] = {pd} 212301 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[6] = {pd} 212201 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[7] = {pd} 211122 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[8] = {pd} 200032 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[9] = {pd} 212403 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[10] = {pd} 213101 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	p[11] = {pd} 210203 (java.lang.String)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	[--SQLQuery--]
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131546	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131562	/dynamusic/SongsRepository	getItems(song: [200022, 200032, 204202, 207103, 210203, 211122, 212201, 212301, 212401, 212403, 213101])
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131562	/dynamusic/SongsRepository	executeQuery(song,0,11,id in [212401, 204202, 200022, 207103, 212301, 212201, 211122, 200032, 212403, 213101, 210203]) -> [song:200022,song:200032,song:204202,song:207103,song:210203,song:211122,song:212201,song:212301,song:212401,song:212403,song:213101] (unsorted)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131562	/dynamusic/SongsRepository	getPropertyValue(song:212301.title) -> "Bullets Over The City" (cached with no transaction)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131562	/dynamusic/SongsRepository	getPropertyValue(song:212301.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131562	/dynamusic/SongsRepository	getPropertyValue(song:212403.title) -> "Most Times" (cached with no transaction)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131562	/dynamusic/SongsRepository	getPropertyValue(song:212403.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131562	/dynamusic/SongsRepository	getPropertyValue(song:212401.title) -> "Alice's World" (cached with no transaction)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131562	/dynamusic/SongsRepository	getPropertyValue(song:212401.genre) -> "pop" (cached with no transaction)
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131578	/dynamusic/SongsRepository	getItems(album: [300053])
**** debug	Sat Jun 23 13:42:11 IST 2012	1340439131578	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410906	/dynamusic/SongsRepository	getPropertyValue(album:300053.description) -> "Perhaps this should have been titled The Freewheelin' Charlie Grassfield in homage to the watershed ..." (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	loadSet(songList)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	 SELECT song_list
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	   FROM dynamusic_album_songs
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	p[1] = {pd} 300053 (java.lang.String)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	getItems(song: [205301, 205303, 205302])
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.songList, 205302,205301,205303) 
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	getPropertyValue(album:300053.songList) -> "205303,205302,205301" (value from database)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	getPropertyValue(album:300053.coverURL) -> "images/WelcomeToTheNewWorld.jpg" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	getPropertyValue(album:300053.artist) -> "100007" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	getPropertyValue(album:300053.date) -> "6/6/1965 10:53:16" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	getPropertyValue(album:300053.id) -> "300053" (id property)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	loadSet(artists)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	[++SQLSelect++]
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	 SELECT artist_id
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	   FROM dynamusic_artist_album
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	  WHERE album_id=?
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	-- Parameters --
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	p[1] = {pd} 300053 (java.lang.String)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	[--SQLSelect--]
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	getItems(artist: [100007])
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	loadingPropertyFromDatabase(album:300053.artists, 100007) 
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410921	/dynamusic/SongsRepository	getPropertyValue(album:300053.artists) -> "100007" (value from database)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410937	/dynamusic/SongsRepository	getPropertyValue(album:300053.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410937	/dynamusic/SongsRepository	getPropertyValue(song:205303.title) -> "You've Been In My Dreams" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410937	/dynamusic/SongsRepository	getPropertyValue(song:205302.title) -> "It Ain't A Mystery" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410937	/dynamusic/SongsRepository	getPropertyValue(song:205301.title) -> "Welcome To The New World" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410937	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
**** debug	Sat Jun 23 13:46:50 IST 2012	1340439410937	/dynamusic/SongsRepository	getPropertyValue(artist:100007.name) -> "Charlie Grassfield" (cached with no transaction)
