<!DOCTYPE schema  SYSTEM "dynamosystemresource:/atg/dtds/sql/ddl_1.0.dtd">
<schema name="reporting_views" description="">
<comment><![CDATA[ @version $Id: //product/DCS/version/10.0.3/templates/DCS/sql/reporting_views.xml#3 $$Change: 655658 $]]></comment>
   <comment><![CDATA[
       In the comments, the time periods indicated are calendar time, meaning that
   ]]></comment>
   <comment><![CDATA[
       the current period should be calculated from the start of the calendar time period,
   ]]></comment>
   <comment><![CDATA[
       rather than in real time.  For example, if it is Thursday, July 12,
   ]]></comment>
   <comment><![CDATA[
       the most current row in a view calculating totals for a week 
   ]]></comment>
   <comment><![CDATA[
       would run from Sunday, July 8 - July 12, rather than July 5 - July 12.
   ]]></comment>
   <comment><![CDATA[
       drpt_order gathers basic information about each order
   ]]></comment>
   <view name="drpt_order" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	ai.amount as amount, 
	count(i.quantity) as distinct_items, 
	sum(i.quantity) as total_items,
	ba.state as state, 
	ba.country as country, 
	o.price_info as price_info
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcspp_pay_group pg, 
	dcspp_bill_addr ba
where o.order_id = i.order_ref 
	and o.price_info = ai.amount_info_id 
	and o.order_id = pg.order_ref
	and pg.payment_group_id = ba.payment_group_id
group by o.order_id, 
	o.submitted_date, 
	ai.amount, 
	ba.state, 
	ba.country,
	 o.price_info
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="amount"/>
            <view-param name="distinct_items"/>
            <view-param name="total_items"/>
            <view-param name="state"/>
            <view-param name="country"/>
            <view-param name="price_info"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	ai.amount as amount, 
	count(i.quantity) as distinct_items, 
	sum(i.quantity) as total_items,
	ba.state as state, 
	ba.country as country, 
	o.price_info as price_info
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcspp_pay_group pg, 
	dcspp_bill_addr ba
where 
	o.order_id = i.order_ref 
	and o.price_info = ai.amount_info_id 
	and o.order_id = pg.order_ref
	and pg.payment_group_id = ba.payment_group_id
group by 
	o.order_id, 
	o.submitted_date, 
	ai.amount, 
	ba.state, 
	ba.country,
	o.price_info
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="amount"/>
            <view-param name="distinct_items"/>
            <view-param name="total_items"/>
            <view-param name="state"/>
            <view-param name="country"/>
            <view-param name="price_info"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	ai.amount as amount, 
	count(i.quantity) as distinct_items, 
	sum(i.quantity) as total_items,
	ba.state as state, 
	ba.country as country, 
	o.price_info as price_info
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcspp_pay_group pg, 
	dcspp_bill_addr ba
where 
	o.order_id = i.order_ref 
	and o.price_info = ai.amount_info_id 
	and o.order_id = pg.order_ref
	and pg.payment_group_id = ba.payment_group_id
group by 
	o.order_id, 
	o.submitted_date, 
	ai.amount, 
	ba.state, 
	ba.country,
	o.price_info
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	ai.amount as amount, 
	count(i.quantity) as distinct_items, 
	sum(i.quantity) as total_items,
	ba.state as state, 
	ba.country as country, 
	o.price_info as price_info
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcspp_pay_group pg, 
	dcspp_bill_addr ba
where o.order_id = i.order_ref 
	and o.price_info = ai.amount_info_id 
	and o.order_id = pg.order_ref
	and pg.payment_group_id = ba.payment_group_id
group by o.order_id, 
	o.submitted_date, 
	ai.amount, 
	ba.state, 
	ba.country, 
	o.price_info
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="amount"/>
            <view-param name="distinct_items"/>
            <view-param name="total_items"/>
            <view-param name="state"/>
            <view-param name="country"/>
            <view-param name="price_info"/>
         </view-params>
         <view-body><![CDATA[
select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	ai.amount as amount, 
	count(i.quantity) as distinct_items, 
	sum(i.quantity) as total_items,
	ba.state as state, 
	ba.country as country, 
	o.price_info as price_info
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcspp_pay_group pg, 
	dcspp_bill_addr ba
where 
	o.order_id = i.order_ref 
	and o.price_info = ai.amount_info_id 
	and o.order_id = pg.order_ref
	and pg.payment_group_id = ba.payment_group_id
group by 
	o.order_id, 
	o.submitted_date, 
	ai.amount, 
	ba.state, 
	ba.country,
	o.price_info
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpt_cost_of_goods calculates the total wholesale cost
   ]]></comment>
   <comment><![CDATA[
       of the items purchased in each order
   ]]></comment>
   <view name="drpt_cost_of_goods" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select i.order_ref as order_id, 
	sum(i.quantity * s.wholesale_price) as cost_of_goods
from dcspp_item i, 
	dcs_sku s
where i.catalog_ref_id = s.sku_id
group by i.order_ref
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="cost_of_goods"/>
         </view-params>
         <view-body><![CDATA[
             select 
	i.order_ref as order_id, 
	sum(i.quantity * s.wholesale_price) as cost_of_goods
from 
	dcspp_item i, 
	dcs_sku s
where 
	i.catalog_ref_id = s.sku_id
group by 
	i.order_ref
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="cost_of_goods"/>
         </view-params>
         <view-body><![CDATA[
             select 
	i.order_ref as order_id, 
	sum(i.quantity * s.wholesale_price) as cost_of_goods
from 
	dcspp_item i, 
	dcs_sku s
where 
	i.catalog_ref_id = s.sku_id
group by 
	i.order_ref
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select i.order_ref as order_id, 
	sum(i.quantity * s.wholesale_price) as cost_of_goods
from dcspp_item i, 
	dcs_sku s
where i.catalog_ref_id = s.sku_id
group by i.order_ref
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="cost_of_goods"/>
         </view-params>
         <view-body><![CDATA[
select 
	i.order_ref as order_id, 
	sum(i.quantity * s.wholesale_price) as cost_of_goods
from 
	dcspp_item i, 
	dcs_sku s
where 
	i.catalog_ref_id = s.sku_id
group by 
	i.order_ref
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpt_discount calculates the total amount discounted
   ]]></comment>
   <comment><![CDATA[
       from each order via promotions
   ]]></comment>
   <view name="drpt_discount" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	(0 - sum(pa.adjustment)) as discount
from dcspp_order o, 
	dcspp_item i, 
	dcspp_amtinfo_adj aa, 
	dcspp_price_adjust pa
where o.order_id = i.order_ref 
	and i.price_info = aa.amount_info_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model is not null
group by o.order_id, 
	o.submitted_date
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="discount"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	(0 - sum(pa.adjustment)) as discount
from 
	dcspp_order o, 
	dcspp_item i, 
	dcspp_amtinfo_adj aa, 
	dcspp_price_adjust pa
where 
	o.order_id = i.order_ref 
	and i.price_info = aa.amount_info_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model is not null
group by 
	o.order_id, 
	o.submitted_date
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="discount"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	(0 - sum(pa.adjustment)) as discount
from 
	dcspp_order o, 
	dcspp_item i, 
	dcspp_amtinfo_adj aa, 
	dcspp_price_adjust pa
where 
	o.order_id = i.order_ref 
	and i.price_info = aa.amount_info_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model is not null
group by 
	o.order_id, 
	o.submitted_date
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	(0 - sum(pa.adjustment)) as discount
from dcspp_order o, 
	dcspp_item i, 
	dcspp_amtinfo_adj aa, 
	dcspp_price_adjust pa
where o.order_id = i.order_ref 
	and i.price_info = aa.amount_info_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model is not null
group by o.order_id, 
	o.submitted_date
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="discount"/>
         </view-params>
         <view-body><![CDATA[
select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	(0 - sum(pa.adjustment)) as discount
from 
	dcspp_order o, 
	dcspp_item i, 
	dcspp_amtinfo_adj aa, 
	dcspp_price_adjust pa
where 
	o.order_id = i.order_ref 
	and i.price_info = aa.amount_info_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model is not null
group by 
	o.order_id, 
	o.submitted_date
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_discounts calculates the number of orders that
   ]]></comment>
   <comment><![CDATA[
       were discounted by promotions over each week
   ]]></comment>
   <comment><![CDATA[
       The "UNION" operation allows weeks in which there
   ]]></comment>
   <comment><![CDATA[
       were no discounts to have a row in the view
   ]]></comment>
   <view name="drptw_discounts" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(submitted_date, 'DAY') as week, 
	count(order_id) as num_of_discounts
from drpt_discount
group by trunc(submitted_date, 'DAY')
UNION
select trunc(submitted_date, 'DAY') as week, 
	0 as num_of_discounts
from dcspp_order 
where trunc(submitted_date, 'DAY') not in (select trunc(submitted_date, 'DAY') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="week"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(submitted_date, 'DAY') as week, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	dbo.TRUNC(submitted_date, 'DAY')
UNION
select 
	dbo.TRUNC(submitted_date, 'DAY') as week, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	dbo.TRUNC(submitted_date, 'DAY') not in (select dbo.TRUNC(submitted_date, 'DAY') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="week"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY) as week, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY)
UNION
select 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY) as week, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY) not in (select DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY) from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1) as week, 
	count(order_id) as num_of_discounts
from drpt_discount
group by DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1)
UNION
select DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1) as week, 
	0 as num_of_discounts
from dcspp_order 
where DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1) not in (select DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1) from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="week"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101)) as week, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101))
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101)) as week, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101)) 
	not in (
select CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101)) 
		from drpt_discount)
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_discounts calculates the number of orders that
   ]]></comment>
   <comment><![CDATA[
       were discounted by promotions over each month
   ]]></comment>
   <comment><![CDATA[
       The "UNION" operation allows months in which there
   ]]></comment>
   <comment><![CDATA[
       were no discounts to have a row in the view
   ]]></comment>
   <view name="drptm_discounts" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(submitted_date, 'MON') as month, 
	count(order_id) as num_of_discounts
from drpt_discount
group by trunc(submitted_date, 'MON')
UNION
select trunc(submitted_date, 'MON') as month, 
	0 as num_of_discounts
from dcspp_order 
where trunc(submitted_date, 'MON') not in (select trunc(submitted_date, 'MON') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="month"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(submitted_date, 'MON') as month, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	dbo.TRUNC(submitted_date, 'MON')
UNION
select 
	dbo.TRUNC(submitted_date, 'MON') as month, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	dbo.TRUNC(submitted_date, 'MON') not in (select dbo.TRUNC(submitted_date, 'MON') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="month"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(submitted_date, '%Y-%m-01') as month, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	DATE_FORMAT(submitted_date, '%Y-%m-01')
UNION
select 
	DATE_FORMAT(submitted_date, '%Y-%m-01') as month, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	DATE_FORMAT(submitted_date, '%Y-%m-01') not in (select DATE_FORMAT(submitted_date, '%Y-%m-01') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01') as month,
count(order_id) as num_of_discounts
from drpt_discount
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01')
UNION
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01') as month, 
0 as num_of_discounts
from dcspp_order 
where DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01') not in (select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="month"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101)) as month, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101))
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101)) as month, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101)) 
	not in (
select CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101)) 
		from drpt_discount)
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_discounts calculates the number of orders that
   ]]></comment>
   <comment><![CDATA[
       were discounted by promotions over each quarter
   ]]></comment>
   <comment><![CDATA[
       The "UNION" operation allows quarters in which there
   ]]></comment>
   <comment><![CDATA[
       were no discounts to have a row in the view
   ]]></comment>
   <view name="drptq_discounts" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(submitted_date, 'Q') as quarter, 
	count(order_id) as num_of_discounts
from drpt_discount
group by trunc(submitted_date, 'Q')
UNION
select trunc(submitted_date, 'Q') as quarter, 
	0 as num_of_discounts
from dcspp_order 
where trunc(submitted_date, 'Q') not in (select trunc(submitted_date, 'Q') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(submitted_date, 'Q') as quarter, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	dbo.TRUNC(submitted_date, 'Q')
UNION
select 
	dbo.TRUNC(submitted_date, 'Q') as quarter, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	dbo.TRUNC(submitted_date, 'Q') not in (select dbo.TRUNC(submitted_date, 'Q') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH) as quarter, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH)
UNION
select 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH) as quarter, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH) not in (select DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH) from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
count(order_id) as num_of_discounts
from drpt_discount
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01')
UNION
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
0 as num_of_discounts
from dcspp_order 
where DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') not in (select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101)  as quarter, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101) 
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101)  as quarter, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101)  not in (
select CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101)  from drpt_discount)
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_discounts calculates the number of orders that
   ]]></comment>
   <comment><![CDATA[
       were discounted by promotions over each year
   ]]></comment>
   <comment><![CDATA[
       The "UNION" operation allows years in which there
   ]]></comment>
   <comment><![CDATA[
       were no discounts to have a row in the view
   ]]></comment>
   <view name="drpta_discounts" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(submitted_date, 'YEAR') as year, 
	count(order_id) as num_of_discounts
from drpt_discount
group by trunc(submitted_date, 'YEAR')
UNION
select trunc(submitted_date, 'YEAR') as year, 
	0 as num_of_discounts
from dcspp_order 
where trunc(submitted_date, 'YEAR') not in (select trunc(submitted_date, 'YEAR') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="year"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(submitted_date, 'YEAR') as year, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	dbo.TRUNC(submitted_date, 'YEAR')
UNION
select 
	dbo.TRUNC(submitted_date, 'YEAR') as year, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	dbo.TRUNC(submitted_date, 'YEAR') not in (select dbo.TRUNC(submitted_date, 'YEAR') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="year"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(submitted_date, '%Y-01-01') as year, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	DATE_FORMAT(submitted_date, '%Y-01-01')
UNION
select 
	DATE_FORMAT(submitted_date, '%Y-01-01') as year, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	DATE_FORMAT(submitted_date, '%Y-01-01') not in (select DATE_FORMAT(submitted_date, '%Y-01-01') from drpt_discount)
         ]]></view-body>
      </view-db>
      <view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1') as year, 
	count(order_id) as num_of_discounts
from drpt_discount
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1')
UNION
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1') as year, 
	0 as num_of_discounts
from dcspp_order 
where DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1') not in (select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1') from drpt_discount)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="year"/>
            <view-param name="num_of_discounts"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101)) as year, 
	count(order_id) as num_of_discounts
from 
	drpt_discount
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101))
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101)) as year, 
	0 as num_of_discounts
from 
	dcspp_order 
where 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101)) not in (
select CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101)) from drpt_discount)
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpt_ordered_items comprises a list of each item purchased
   ]]></comment>
   <view name="drpt_ordered_items" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	i.catalog_ref_id as catalog_ref_id,
	i.product_id as product_id, 
	i.quantity as quantity, 
	ai.amount as price
from dcspp_order o, 
	dcspp_item i, 
	dcspp_amount_info ai
where o.order_id = i.order_ref 
	and i.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="catalog_ref_id"/>
            <view-param name="product_id"/>
            <view-param name="quantity"/>
            <view-param name="price"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	i.catalog_ref_id as catalog_ref_id,
	i.product_id as product_id, 
	i.quantity as quantity, 
	ai.amount as price
from 
	dcspp_order o, 
	dcspp_item i, 
	dcspp_amount_info ai
where 
	o.order_id = i.order_ref 
	and i.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="catalog_ref_id"/>
            <view-param name="product_id"/>
            <view-param name="quantity"/>
            <view-param name="price"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	i.catalog_ref_id as catalog_ref_id,
	i.product_id as product_id, 
	i.quantity as quantity, 
	ai.amount as price
from 
	dcspp_order o, 
	dcspp_item i, 
	dcspp_amount_info ai
where 
	o.order_id = i.order_ref 
	and i.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	i.catalog_ref_id as catalog_ref_id,
	i.product_id as product_id, 
	i.quantity as quantity, 
	ai.amount as price
from dcspp_order o, 
	dcspp_item i, 
	dcspp_amount_info ai
where o.order_id = i.order_ref 
	and i.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="catalog_ref_id"/>
            <view-param name="product_id"/>
            <view-param name="quantity"/>
            <view-param name="price"/>
         </view-params>
         <view-body><![CDATA[
select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date, 
	i.catalog_ref_id as catalog_ref_id,
	i.product_id as product_id, 
	i.quantity as quantity, 
	ai.amount as price
from 
	dcspp_order o, 
	dcspp_item i, 
	dcspp_amount_info ai
where 
	o.order_id = i.order_ref 
	and i.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpt_sku_stock calculates the number of unique skus in stock per product
   ]]></comment>
   <comment><![CDATA[
       in the catalog.  The "UNION" operation exists so that a row will
   ]]></comment>
   <comment><![CDATA[
       appear for products that have no skus in stock
   ]]></comment>
   <view name="drpt_sku_stock" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select pc.product_id as product_id, 
	count(i.catalog_ref_id) as skus_in_stock
from dcs_prd_chldsku pc, 
	dcs_inventory i
where pc.sku_id = i.catalog_ref_id 
	and i.stock_level > 0
group by pc.product_id
UNION
select product_id, 
	0 as skus_in_stock 
from dcs_prd_chldsku 
where product_id not in 
(select product_id 
from dcs_prd_chldsku pc, 
	dcs_inventory i 
where pc.sku_id = i.catalog_ref_id 
	and i.stock_level > 0)
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="skus_in_stock"/>
         </view-params>
         <view-body><![CDATA[
             select 
	pc.product_id as product_id, 
	count(i.catalog_ref_id) as skus_in_stock
from 
	dcs_prd_chldsku pc, 
	dcs_inventory i
where 
	pc.sku_id = i.catalog_ref_id 
	and i.stock_level > 0
group by 
	pc.product_id
UNION
select 
	product_id, 
	0 as skus_in_stock 
from 
	dcs_prd_chldsku 
where 
	product_id not in (
		select 
			product_id 
		from 
			dcs_prd_chldsku pc, 
			dcs_inventory i 
		where 
			pc.sku_id = i.catalog_ref_id 
			and i.stock_level > 0) 
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="skus_in_stock"/>
         </view-params>
         <view-body><![CDATA[
             select 
	pc.product_id as product_id, 
	count(i.catalog_ref_id) as skus_in_stock
from 
	dcs_prd_chldsku pc, 
	dcs_inventory i
where 
	pc.sku_id = i.catalog_ref_id 
	and i.stock_level > 0
group by 
	pc.product_id
UNION
select 
	product_id, 
	0 as skus_in_stock 
from 
	dcs_prd_chldsku 
where 
	product_id not in (
		select 
			product_id 
		from 
			dcs_prd_chldsku pc, 
			dcs_inventory i 
		where 
			pc.sku_id = i.catalog_ref_id 
			and i.stock_level > 0) 
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
             select pc.product_id as product_id, 
	count(i.catalog_ref_id) as skus_in_stock
from dcs_prd_chldsku pc, 
	dcs_inventory i
where pc.sku_id = i.catalog_ref_id 
	and i.stock_level > 0
group by pc.product_id
UNION
select product_id, 
	0 as skus_in_stock 
from dcs_prd_chldsku 
where product_id not in 
(select product_id 
from dcs_prd_chldsku pc, 
	dcs_inventory i 
where pc.sku_id = i.catalog_ref_id 
	and i.stock_level > 0)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="skus_in_stock"/>
         </view-params>
         <view-body><![CDATA[
select 
	pc.product_id as product_id, 
	count(i.catalog_ref_id) as skus_in_stock
from 
	dcs_prd_chldsku pc, 
	dcs_inventory i
where 
	pc.sku_id = i.catalog_ref_id 
	and i.stock_level > 0
group by 
	pc.product_id
UNION
select 
	product_id, 
	0 as skus_in_stock 
from 
	dcs_prd_chldsku 
where 
	product_id not in (
		
select 
			product_id 
		from 
			dcs_prd_chldsku pc, 
			dcs_inventory i 
		where 
			pc.sku_id = i.catalog_ref_id 
			and i.stock_level > 0) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_browses calculatess the number of times each product's page
   ]]></comment>
   <comment><![CDATA[
       has been viewed online each week
   ]]></comment>
   <view name="drptw_browses" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select repositoryid as product_id, 
	trunc(timestamp, 'DAY') as week, 
	count(timestamp) as browses
from dss_dps_view_item
group by repositoryid, 
	trunc(timestamp, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="week"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
             select 
	repositoryid as product_id, 
	dbo.TRUNC(timestamp, 'DAY') as week, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid, 
	dbo.TRUNC(timestamp, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="week"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
             select 
	repositoryid as product_id, 
	DATE_SUB(DATE(timestamp), INTERVAL DAYOFWEEK(timestamp)-1 DAY) as week, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid, 
	DATE_SUB(DATE(timestamp), INTERVAL DAYOFWEEK(timestamp)-1 DAY)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select repositoryid as product_id, 
	DATE(DAYS(timestamp) - DAYOFWEEK(timestamp) +1) as week, 
	count(timestamp) as browses
from dss_dps_view_item
group by repositoryid, DATE(DAYS(timestamp) - DAYOFWEEK(timestamp) +1)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="week"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
select 
	repositoryid as product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, timestamp), timestamp), 101)) as week, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, timestamp), timestamp), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_browses calculates the number of times each product's page
   ]]></comment>
   <comment><![CDATA[
       has been viewed online each month
   ]]></comment>
   <view name="drptm_browses" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select repositoryid as product_id, 
	trunc(timestamp, 'MON') as month, 
	count(timestamp) as browses
from dss_dps_view_item
group by repositoryid, 
	trunc(timestamp, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="month"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
             select 
	repositoryid as product_id, 
	dbo.TRUNC(timestamp, 'MON') as month, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid, 
	dbo.TRUNC(timestamp, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="month"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
             select 
	repositoryid as product_id, 
	DATE_FORMAT(timestamp, '%Y-%m-01') as month, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid, 
	DATE_FORMAT(timestamp, '%Y-%m-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select repositoryid as product_id, 
	DATE(CAST(YEAR(timestamp) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(timestamp) AS CHAR(2)))||'-01') as month, 
	count(timestamp) as browses
from dss_dps_view_item
group by repositoryid, 
	DATE(CAST(YEAR(timestamp) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(timestamp) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="month"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
select 
	repositoryid as product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, timestamp), timestamp), 101)) as month, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, timestamp), timestamp), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_browses calculates the number of times each product's page
   ]]></comment>
   <comment><![CDATA[
       has been viewed online each quarter
   ]]></comment>
   <view name="drptq_browses" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select repositoryid as product_id, 
	trunc(timestamp, 'Q') as quarter, 
	count(timestamp) as browses
from dss_dps_view_item
group by repositoryid, 
	trunc(timestamp, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="quarter"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
             select 
	repositoryid as product_id, 
	dbo.TRUNC(timestamp, 'Q') as quarter, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid, 
	dbo.TRUNC(timestamp, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="quarter"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
             select 
	repositoryid as product_id, 
	DATE_ADD(DATE_FORMAT(timestamp, '%Y-01-01'), INTERVAL (QUARTER(timestamp)-1)*3 MONTH) as quarter, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid, 
	DATE_ADD(DATE_FORMAT(timestamp, '%Y-01-01'), INTERVAL (QUARTER(timestamp)-1)*3 MONTH)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select repositoryid as product_id, 
DATE(CAST(YEAR(timestamp) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(timestamp) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
count(timestamp) as browses
from dss_dps_view_item
group by repositoryid, 
DATE(CAST(YEAR(timestamp) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(timestamp) - 1)*3+1) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="quarter"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
select 
	repositoryid as product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, timestamp)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, timestamp)), 101)  as quarter, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid, 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, timestamp)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, timestamp)), 101) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_browses calculates the number of times each product's page
   ]]></comment>
   <comment><![CDATA[
       has been viewed online each year
   ]]></comment>
   <view name="drpta_browses" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select repositoryid as product_id, 
	trunc(timestamp, 'YEAR') as year, 
	count(timestamp) as browses
from dss_dps_view_item
group by repositoryid,
	trunc(timestamp, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="year"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
             select 
	repositoryid as product_id, 
	dbo.TRUNC(timestamp, 'YEAR') as year, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid,
	dbo.TRUNC(timestamp, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="year"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
             select 
	repositoryid as product_id, 
	DATE_FORMAT(timestamp, '%Y-01-01') as year, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid,
	DATE_FORMAT(timestamp, '%Y-01-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select repositoryid as product_id,DATE(CAST(YEAR(timestamp) AS CHAR(4))||'-1-1') as year, 
	count(timestamp) as browses
from dss_dps_view_item
group by repositoryid, DATE(CAST(YEAR(timestamp) AS CHAR(4))||'-1-1')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="year"/>
            <view-param name="browses"/>
         </view-params>
         <view-body><![CDATA[
select 
	repositoryid as product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, timestamp), timestamp), 101)) as year, 
	count(timestamp) as browses
from 
	dss_dps_view_item
group by 
	repositoryid,
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, timestamp), timestamp), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_carts calculates the number of times each product has
   ]]></comment>
   <comment><![CDATA[
       been added to a user's shopping cart each week
   ]]></comment>
   <comment><![CDATA[
       Note:  A single user adding a quantity greater than one
   ]]></comment>
   <comment><![CDATA[
       to their cart at one time is considered a single "add to cart"
   ]]></comment>
   <view name="drptw_carts" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select pc.product_id as product_id, 
	trunc(ce.timestamp, 'DAY') as week, 
	count(ce.id) as adds_to_cart
from dcs_cart_event ce, 
	dcs_prd_chldsku pc
where ce.itemid = pc.sku_id
group by pc.product_id, 
	trunc(ce.timestamp, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="week"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
             select 
	pc.product_id as product_id, 
	dbo.TRUNC(ce.timestamp, 'DAY') as week, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	dbo.TRUNC(ce.timestamp, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="week"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
             select 
	pc.product_id as product_id, 
	DATE_SUB(DATE(ce.timestamp), INTERVAL DAYOFWEEK(ce.timestamp)-1 DAY) as week, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	DATE_SUB(DATE(ce.timestamp), INTERVAL DAYOFWEEK(ce.timestamp)-1 DAY)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select pc.product_id as product_id, 
	DATE(DAYS(ce.timestamp) - DAYOFWEEK(ce.timestamp) +1) as week, 
	count(ce.id) as adds_to_cart
from dcs_cart_event ce, 
	dcs_prd_chldsku pc
where ce.itemid = pc.sku_id
group by pc.product_id, 
	DATE(DAYS(ce.timestamp) - DAYOFWEEK(ce.timestamp) +1)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="week"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
select 
	pc.product_id as product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, ce.timestamp), ce.timestamp), 101)) as week, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, ce.timestamp), ce.timestamp), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_carts calculates the number of times each product has
   ]]></comment>
   <comment><![CDATA[
       been added to a user's shopping cart each month
   ]]></comment>
   <comment><![CDATA[
       Note:  A single user adding a quantity greater than one
   ]]></comment>
   <comment><![CDATA[
       to their cart at one time is considered a single "add to cart"
   ]]></comment>
   <view name="drptm_carts" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select pc.product_id as product_id, 
	trunc(ce.timestamp, 'MON') as month, 
	count(ce.id) as adds_to_cart
from dcs_cart_event ce, 
	dcs_prd_chldsku pc
where ce.itemid = pc.sku_id
group by pc.product_id, 
	trunc(ce.timestamp, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="month"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
             select 
	pc.product_id as product_id, 
	dbo.TRUNC(ce.timestamp, 'MON') as month, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	dbo.TRUNC(ce.timestamp, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="month"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
             select 
	pc.product_id as product_id, 
	DATE_FORMAT(ce.timestamp, '%Y-%m-01') as month, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	DATE_FORMAT(ce.timestamp, '%Y-%m-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select pc.product_id as product_id, 
	DATE(CAST(YEAR(ce.timestamp) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(ce.timestamp) AS CHAR(2)))||'-01') as month, 
	count(ce.id) as adds_to_cart
from dcs_cart_event ce, 
	dcs_prd_chldsku pc
where ce.itemid = pc.sku_id
group by pc.product_id, 
	DATE(CAST(YEAR(ce.timestamp) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(ce.timestamp) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="month"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
select 
	pc.product_id as product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, ce.timestamp), ce.timestamp), 101)) as month, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, ce.timestamp), ce.timestamp), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_carts calculates the number of times each product has
   ]]></comment>
   <comment><![CDATA[
       been added to a user's shopping cart each quarter
   ]]></comment>
   <comment><![CDATA[
       Note:  A single user adding a quantity greater than one
   ]]></comment>
   <comment><![CDATA[
       to their cart at one time is considered a single "add to cart"
   ]]></comment>
   <view name="drptq_carts" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select pc.product_id as product_id, 
	trunc(ce.timestamp, 'Q') as quarter, 
	count(ce.id) as adds_to_cart
from dcs_cart_event ce, 
	dcs_prd_chldsku pc
where ce.itemid = pc.sku_id
group by pc.product_id, 
	trunc(ce.timestamp, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="quarter"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
             select 
	pc.product_id as product_id, 
	dbo.TRUNC(ce.timestamp, 'Q') as quarter, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	dbo.TRUNC(ce.timestamp, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="quarter"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
             select 
	pc.product_id as product_id, 
	DATE_ADD(DATE_FORMAT(ce.timestamp, '%Y-01-01'), INTERVAL (QUARTER(ce.timestamp)-1)*3 MONTH) as quarter, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	DATE_ADD(DATE_FORMAT(ce.timestamp, '%Y-01-01'), INTERVAL (QUARTER(ce.timestamp)-1)*3 MONTH)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select pc.product_id as product_id, 
	DATE(CAST(YEAR(ce.timestamp) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(ce.timestamp) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
	count(ce.id) as adds_to_cart
from dcs_cart_event ce, 
	dcs_prd_chldsku pc
where ce.itemid = pc.sku_id
group by pc.product_id, 
	DATE(CAST(YEAR(ce.timestamp) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(ce.timestamp) - 1)*3+1) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="quarter"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
select 
	pc.product_id as product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, ce.timestamp)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, ce.timestamp)), 101)  as quarter, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, ce.timestamp)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, ce.timestamp)), 101) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_carts calculates the number of times each product has
   ]]></comment>
   <comment><![CDATA[
       been added to a user's shopping cart each year
   ]]></comment>
   <comment><![CDATA[
       Note:  A single user adding a quantity greater than one
   ]]></comment>
   <comment><![CDATA[
       to their cart at one time is considered a single "add to cart"
   ]]></comment>
   <view name="drpta_carts" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select pc.product_id as product_id, 
	trunc(ce.timestamp, 'YEAR') as year, 
	count(ce.id) as adds_to_cart
from dcs_cart_event ce, 
	dcs_prd_chldsku pc
where ce.itemid = pc.sku_id
group by pc.product_id, 
	trunc(ce.timestamp, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="year"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
             select
	pc.product_id as product_id, 
	dbo.TRUNC(ce.timestamp, 'YEAR') as year, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	dbo.TRUNC(ce.timestamp, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="year"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
             select
	pc.product_id as product_id, 
	DATE_FORMAT(ce.timestamp, '%Y-01-01') as year, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	DATE_FORMAT(ce.timestamp, '%Y-01-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select pc.product_id as product_id, 
	DATE(CAST(YEAR(ce.timestamp) AS CHAR(4))||'-1-1') as year, 
	count(ce.id) as adds_to_cart
from dcs_cart_event ce, 
	dcs_prd_chldsku pc
where ce.itemid = pc.sku_id
group by pc.product_id, 
	DATE(CAST(YEAR(ce.timestamp) AS CHAR(4))||'-1-1')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="product_id"/>
            <view-param name="year"/>
            <view-param name="adds_to_cart"/>
         </view-params>
         <view-body><![CDATA[
select
	pc.product_id as product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, ce.timestamp), ce.timestamp), 101)) as year, 
	count(ce.id) as adds_to_cart
from 
	dcs_cart_event ce, 
	dcs_prd_chldsku pc
where 
	ce.itemid = pc.sku_id
group by 
	pc.product_id, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, ce.timestamp), ce.timestamp), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpt_shipping compiles the total shipping cost for each shipping group
   ]]></comment>
   <view name="drpt_shipping" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select o.order_id as order_id, 
	ai.amount as shipping_cost
from dcspp_order o, 
	dcspp_ship_group sg, 
	dcspp_amount_info ai
where o.order_id = sg.order_ref 
	and sg.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="shipping_cost"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	ai.amount as shipping_cost
from 
	dcspp_order o, 
	dcspp_ship_group sg, 
	dcspp_amount_info ai
where 
	o.order_id = sg.order_ref 
	and sg.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="shipping_cost"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	ai.amount as shipping_cost
from 
	dcspp_order o, 
	dcspp_ship_group sg, 
	dcspp_amount_info ai
where 
	o.order_id = sg.order_ref 
	and sg.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select o.order_id as order_id, 
	ai.amount as shipping_cost
from dcspp_order o, 
	dcspp_ship_group sg, 
	dcspp_amount_info ai
where o.order_id = sg.order_ref 
	and sg.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="shipping_cost"/>
         </view-params>
         <view-body><![CDATA[
select 
	o.order_id as order_id, 
	ai.amount as shipping_cost
from 
	dcspp_order o, 
	dcspp_ship_group sg, 
	dcspp_amount_info ai
where 
	o.order_id = sg.order_ref 
	and sg.price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpt_taxes compiles the total tax cost for each order
   ]]></comment>
   <view name="drpt_taxes" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select o.order_id as order_id, 
	ai.amount as tax
from dcspp_order o, 
	dcspp_amount_info ai
where o.tax_price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	ai.amount as tax
from 
	dcspp_order o, 
	dcspp_amount_info ai
where 
	o.tax_price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	ai.amount as tax
from 
	dcspp_order o, 
	dcspp_amount_info ai
where 
	o.tax_price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select o.order_id as order_id, 
	ai.amount as tax
from dcspp_order o, 
	dcspp_amount_info ai
where o.tax_price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
select 
	o.order_id as order_id, 
	ai.amount as tax
from 
	dcspp_order o, 
	dcspp_amount_info ai
where 
	o.tax_price_info = ai.amount_info_id
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpt_cancels compiles information about orders that failed or
   ]]></comment>
   <comment><![CDATA[
       were cancelled
   ]]></comment>
   <view name="drpt_cancels" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select o.order_id as order_id, 
	o.submitted_date as submitted_date,
	ai.amount as amount, 
	si.shipping_cost as shipping_cost,
	ti.tax as tax
from dcspp_order o, 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti
where (o.state = 'FAILED' or o.state = 'REMOVED') 
	and o.price_info = ai.amount_info_id
	and o.order_id = si.order_id 
	and o.order_id = ti.order_id
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date,
	ai.amount as amount, 
	si.shipping_cost as shipping_cost,
	ti.tax as tax
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti
where 
	(o.state = 'FAILED' or o.state = 'REMOVED') 
	and o.price_info = ai.amount_info_id
	and o.order_id = si.order_id 
	and o.order_id = ti.order_id
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date,
	ai.amount as amount, 
	si.shipping_cost as shipping_cost,
	ti.tax as tax
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti
where 
	(o.state = 'FAILED' or o.state = 'REMOVED') 
	and o.price_info = ai.amount_info_id
	and o.order_id = si.order_id 
	and o.order_id = ti.order_id
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select o.order_id as order_id, 
	o.submitted_date as submitted_date,
	ai.amount as amount, 
	si.shipping_cost as shipping_cost,
	ti.tax as tax
from dcspp_order o, 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti
where (o.state = 'FAILED' or o.state = 'REMOVED') 
	and o.price_info = ai.amount_info_id
	and o.order_id = si.order_id 
	and o.order_id = ti.order_id
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="order_id"/>
            <view-param name="submitted_date"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
select 
	o.order_id as order_id, 
	o.submitted_date as submitted_date,
	ai.amount as amount, 
	si.shipping_cost as shipping_cost,
	ti.tax as tax
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti
where 
	(o.state = 'FAILED' or o.state = 'REMOVED') 
	and o.price_info = ai.amount_info_id
	and o.order_id = si.order_id 
	and o.order_id = ti.order_id
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_cancels calculates the number of orders that failed or
   ]]></comment>
   <comment><![CDATA[
       were cancelled each week.  It also calculates the total
   ]]></comment>
   <comment><![CDATA[
       amount, shipping costs, and tax costs from those orders.
   ]]></comment>
   <view name="drptw_cancels" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(submitted_date, 'DAY') as week, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from drpt_cancels
group by trunc(submitted_date, 'DAY')
UNION
select trunc(submitted_date, 'DAY') as week, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from dcspp_order
where trunc(submitted_date, 'DAY') not in (select trunc(submitted_date, 'DAY') from drpt_cancels)
group by trunc(submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="week"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(submitted_date, 'DAY') as week, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	dbo.TRUNC(submitted_date, 'DAY')
UNION
select 
	dbo.TRUNC(submitted_date, 'DAY') as week, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	dbo.TRUNC(submitted_date, 'DAY') not in (select dbo.TRUNC(submitted_date, 'DAY') from drpt_cancels)
group by 
	dbo.TRUNC(submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="week"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY) as week, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY)
UNION
select 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY) as week, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY) not in (select DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY) from drpt_cancels)
group by 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1) as week, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from drpt_cancels
group by DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1)
UNION
select DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1) as week, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from dcspp_order
where DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1) not in (select DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1) from drpt_cancels)
group by DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="week"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101)) as week, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101))
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101)) as week, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101)) 
	not in (
select CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101)) 
	  	from drpt_cancels)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_cancels calculates the number of orders that failed or
   ]]></comment>
   <comment><![CDATA[
       were cancelled each month.  It also calculates the total
   ]]></comment>
   <comment><![CDATA[
       amount, shipping costs, and tax costs from those orders.
   ]]></comment>
   <view name="drptm_cancels" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(submitted_date, 'MON') as month, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from drpt_cancels
group by trunc(submitted_date, 'MON')
UNION
select trunc(submitted_date, 'MON') as month, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from dcspp_order
where trunc(submitted_date, 'MON') not in (select trunc(submitted_date, 'MON') from drpt_cancels)
group by trunc(submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="month"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(submitted_date, 'MON') as month, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	dbo.TRUNC(submitted_date, 'MON')
UNION
select 
	dbo.TRUNC(submitted_date, 'MON') as month, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	dbo.TRUNC(submitted_date, 'MON') not in (select dbo.TRUNC(submitted_date, 'MON') from drpt_cancels)
group by 
	dbo.TRUNC(submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="month"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(submitted_date, '%Y-%m-01') as month, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	DATE_FORMAT(submitted_date, '%Y-%m-01')
UNION
select 
	DATE_FORMAT(submitted_date, '%Y-%m-01') as month, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	DATE_FORMAT(submitted_date, '%Y-%m-01') not in (select DATE_FORMAT(submitted_date, '%Y-%m-01') from drpt_cancels)
group by 
	DATE_FORMAT(submitted_date, '%Y-%m-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01') as month, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from drpt_cancels
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01')
UNION
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01') as month, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from dcspp_order
where DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01') not in (select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01') from drpt_cancels)
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="month"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101)) as month, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101))
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101)) as month, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101)) 
	not in (
select CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101)) 
		from drpt_cancels)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_cancels calculates the number of orders that failed or
   ]]></comment>
   <comment><![CDATA[
       were cancelled each quarter.  It also calculates the total
   ]]></comment>
   <comment><![CDATA[
       amount, shipping costs, and tax costs from those orders.
   ]]></comment>
   <view name="drptq_cancels" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(submitted_date, 'Q') as quarter, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from drpt_cancels
group by trunc(submitted_date, 'Q')
UNION
select trunc(submitted_date, 'Q') as quarter, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from dcspp_order
where trunc(submitted_date, 'Q') not in (select trunc(submitted_date, 'Q') from drpt_cancels)
group by trunc(submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(submitted_date, 'Q') as quarter, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	dbo.TRUNC(submitted_date, 'Q')
UNION
select 
	dbo.TRUNC(submitted_date, 'Q') as quarter, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	dbo.TRUNC(submitted_date, 'Q') not in (select dbo.TRUNC(submitted_date, 'Q') from drpt_cancels)
group by 
	dbo.TRUNC(submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH) as quarter, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH)
UNION
select 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH) as quarter, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH) not in (select DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH) from drpt_cancels)
group by 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from drpt_cancels
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01')
UNION
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from dcspp_order
where DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') not in (select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') from drpt_cancels)
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101)  as quarter, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101) 
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101)  as quarter, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101)  not in (
select CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101)  from drpt_cancels)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_cancels calculates the number of orders that failed or
   ]]></comment>
   <comment><![CDATA[
       were cancelled in the past year.  It also calculates the total
   ]]></comment>
   <comment><![CDATA[
       amount, shipping costs, and tax costs from those orders.
   ]]></comment>
   <view name="drpta_cancels" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(submitted_date, 'YEAR') as year, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from drpt_cancels
group by trunc(submitted_date, 'YEAR')
UNION
select trunc(submitted_date, 'YEAR') as year, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from dcspp_order
where trunc(submitted_date, 'YEAR') not in (select trunc(submitted_date, 'YEAR') from drpt_cancels)
group by trunc(submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="year"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(submitted_date, 'YEAR') as year, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	dbo.TRUNC(submitted_date, 'YEAR')
UNION
select 
	dbo.TRUNC(submitted_date, 'YEAR') as year, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	dbo.TRUNC(submitted_date, 'YEAR') not in (select dbo.TRUNC(submitted_date, 'YEAR') from drpt_cancels)
group by 
	dbo.TRUNC(submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="year"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(submitted_date, '%Y-01-01') as year, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	DATE_FORMAT(submitted_date, '%Y-01-01')
UNION
select 
	DATE_FORMAT(submitted_date, '%Y-01-01') as year, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	DATE_FORMAT(submitted_date, '%Y-01-01') not in (select DATE_FORMAT(submitted_date, '%Y-01-01') from drpt_cancels)
group by 
	DATE_FORMAT(submitted_date, '%Y-01-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1') as year, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from drpt_cancels
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1')
UNION
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1') as year, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from dcspp_order
where DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1') not in (select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1') from drpt_cancels)
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="year"/>
            <view-param name="number_of_cancels"/>
            <view-param name="amount"/>
            <view-param name="shipping_cost"/>
            <view-param name="tax"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101)) as year, 
	count(order_id) as number_of_cancels,
	sum(amount) as amount, 
	sum(shipping_cost) as shipping_cost, 
	sum(tax) as tax
from 
	drpt_cancels
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101))
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101)) as week, 
	0 as number_of_cancels, 
	0 as amount,
	0 as shipping_cost, 
	0 as tax
from 
	dcspp_order
where 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101)) not in (
select CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101)) from drpt_cancels)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_gift_certs calculates the number of gift certificates
   ]]></comment>
   <comment><![CDATA[
       that were redeemed each week
   ]]></comment>
   <view name="drptw_gift_certs" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'DAY') as week, 
	count(gc.payment_group_id) as num_of_gift_certs
from dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by trunc(o.submitted_date, 'DAY')
UNION
select trunc(submitted_date, 'DAY') as week, 
	0 as num_of_gift_certs
from dcspp_order
where order_id not in 
(select pg.order_ref 
from dcspp_pay_group pg, 
	dcspp_gift_cert gc 
where pg.payment_group_id = gc.payment_group_id)
group by trunc(submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="week"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'DAY') as week, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	dbo.TRUNC(o.submitted_date, 'DAY')
UNION
select 
	dbo.TRUNC(submitted_date, 'DAY') as week, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	dbo.TRUNC(submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="week"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_SUB(DATE(o.submitted_date), INTERVAL DAYOFWEEK(o.submitted_date)-1 DAY) as week, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	DATE_SUB(DATE(o.submitted_date), INTERVAL DAYOFWEEK(o.submitted_date)-1 DAY)
UNION
select 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY) as week, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	DATE_SUB(DATE(submitted_date), INTERVAL DAYOFWEEK(submitted_date)-1 DAY)
         ]]></view-body>
      </view-db>
      <view-db db="db2">
         <view-body><![CDATA[
select DATE(DAYS(o.submitted_date) - DAYOFWEEK(o.submitted_date) +1) as week, 
	count(gc.payment_group_id) as num_of_gift_certs
from dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by DATE(DAYS(o.submitted_date) - DAYOFWEEK(o.submitted_date) +1)
UNION
select DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1) as week, 
	0 as num_of_gift_certs
from dcspp_order
where order_id not in 
(select pg.order_ref 
from dcspp_pay_group pg, 
	dcspp_gift_cert gc 
where pg.payment_group_id = gc.payment_group_id)
group by DATE(DAYS(submitted_date) - DAYOFWEEK(submitted_date) +1)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="week"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, o.submitted_date), o.submitted_date), 101)) as week, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, o.submitted_date), o.submitted_date), 101))
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101)) as week, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		
select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, submitted_date), submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_gift_certs calculates the number of gift certificates
   ]]></comment>
   <comment><![CDATA[
       that were redeemed each month
   ]]></comment>
   <view name="drptm_gift_certs" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'MON') as month, 
	count(gc.payment_group_id) as num_of_gift_certs
from dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by trunc(o.submitted_date, 'MON')
UNION
select trunc(submitted_date, 'MON') as month, 
	0 as num_of_gift_certs
from dcspp_order
where order_id not in 
(select pg.order_ref 
from dcspp_pay_group pg, 
	dcspp_gift_cert gc 
where pg.payment_group_id = gc.payment_group_id)
group by trunc(submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="month"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'MON') as month, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	dbo.TRUNC(o.submitted_date, 'MON')
UNION
select 
	dbo.TRUNC(submitted_date, 'MON') as month, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	dbo.TRUNC(submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="month"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(o.submitted_date, '%Y-%m-01') as month, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	DATE_FORMAT(o.submitted_date, '%Y-%m-01')
UNION
select 
	DATE_FORMAT(submitted_date, '%Y-%m-01') as month, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	DATE_FORMAT(submitted_date, '%Y-%m-01')
         ]]></view-body>
      </view-db>
      <view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(o.submitted_date) AS CHAR(2)))||'-01') as month, 
	count(gc.payment_group_id) as num_of_gift_certs
from dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(o.submitted_date) AS CHAR(2)))||'-01')
UNION
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01') as month, 
	0 as num_of_gift_certs
from dcspp_order
where order_id not in 
(select pg.order_ref 
from dcspp_pay_group pg, 
	dcspp_gift_cert gc 
where pg.payment_group_id = gc.payment_group_id)
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(submitted_date) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="month"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, o.submitted_date), o.submitted_date), 101)) as month, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, o.submitted_date), o.submitted_date), 101))
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101)) as month, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		
select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, submitted_date), submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_gift_certs calculates the number of gift certificates
   ]]></comment>
   <comment><![CDATA[
       that were redeemed each quarter
   ]]></comment>
   <view name="drptq_gift_certs" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'Q') as quarter, 
	count(gc.payment_group_id) as num_of_gift_certs
from dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by trunc(o.submitted_date, 'Q')
UNION
select trunc(submitted_date, 'Q') as quarter, 
	0 as num_of_gift_certs
from dcspp_order
where order_id not in 
(select pg.order_ref 
from dcspp_pay_group pg, 
	dcspp_gift_cert gc 
where pg.payment_group_id = gc.payment_group_id)
group by trunc(submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'Q') as quarter, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	dbo.TRUNC(o.submitted_date, 'Q')
UNION
select 
	dbo.TRUNC(submitted_date, 'Q') as quarter, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	dbo.TRUNC(submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_ADD(DATE_FORMAT(o.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(o.submitted_date)-1)*3 MONTH) as quarter, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	DATE_ADD(DATE_FORMAT(o.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(o.submitted_date)-1)*3 MONTH)
UNION
select 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH) as quarter, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	DATE_ADD(DATE_FORMAT(submitted_date, '%Y-01-01'), INTERVAL (QUARTER(submitted_date)-1)*3 MONTH)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(o.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
	count(gc.payment_group_id) as num_of_gift_certs
from dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(o.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01')
UNION
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
	0 as num_of_gift_certs
from dcspp_order
where order_id not in 
(select pg.order_ref 
from dcspp_pay_group pg, 
	dcspp_gift_cert gc 
where pg.payment_group_id = gc.payment_group_id)
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(submitted_date) - 1)*3+1) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, o.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, o.submitted_date)), 101)  as quarter, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, o.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, o.submitted_date)), 101) 
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101)  as quarter, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		
select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, submitted_date)), 101) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_gift_certs calculates the number of gift certificates
   ]]></comment>
   <comment><![CDATA[
       that were redeemed each year
   ]]></comment>
   <view name="drpta_gift_certs" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'YEAR') as year, 
	count(gc.payment_group_id) as num_of_gift_certs
from dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by trunc(o.submitted_date, 'YEAR')
UNION
select trunc(submitted_date, 'YEAR') as year, 
	0 as num_of_gift_certs
from dcspp_order
where order_id not in 
(select pg.order_ref 
from dcspp_pay_group pg, 
	dcspp_gift_cert gc 
where pg.payment_group_id = gc.payment_group_id)
group by trunc(submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="year"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'YEAR') as year, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	dbo.TRUNC(o.submitted_date, 'YEAR')
UNION
select 
	dbo.TRUNC(submitted_date, 'YEAR') as year, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	dbo.TRUNC(submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="year"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(o.submitted_date, '%Y-01-01') as year, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	DATE_FORMAT(o.submitted_date, '%Y-01-01')
UNION
select 
	DATE_FORMAT(submitted_date, '%Y-01-01') as year, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	DATE_FORMAT(submitted_date, '%Y-01-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-1-1') as year, 
	count(gc.payment_group_id) as num_of_gift_certs
from dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-1-1')
UNION
select DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1') as year, 
	0 as num_of_gift_certs
from dcspp_order
where order_id not in 
(select pg.order_ref 
from dcspp_pay_group pg, 
	dcspp_gift_cert gc 
where pg.payment_group_id = gc.payment_group_id)
group by DATE(CAST(YEAR(submitted_date) AS CHAR(4))||'-1-1')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="year"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, o.submitted_date), o.submitted_date), 101))  as year, 
	count(gc.payment_group_id) as num_of_gift_certs
from 
	dcspp_order o, 
	dcspp_pay_group pg, 
	dcspp_gift_cert gc
where 
	o.order_id = pg.order_ref 
	and pg.payment_group_id = gc.payment_group_id
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, o.submitted_date), o.submitted_date), 101)) 
UNION
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101)) as year, 
	0 as num_of_gift_certs
from 
	dcspp_order
where 
	order_id not in (
		
select 
			pg.order_ref 
		from 
			dcspp_pay_group pg, 
			dcspp_gift_cert gc 
		where 
			pg.payment_group_id = gc.payment_group_id)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, submitted_date), submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_orders calculates various totals from orders over each week
   ]]></comment>
   <view name="drptw_orders" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(dri.submitted_date, 'DAY') as week, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(wct.amount + wct.shipping_cost + wct.tax) as dollar_cancels,
	(sum(ai.amount) - wct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - wct.shipping_cost - wct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(wct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - wct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	wdt.num_of_discounts as num_of_discounts,
	wgct.num_of_gift_certs as num_of_gift_certs
from dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptw_cancels wct, 
	drptw_discounts wdt,
	drptw_gift_certs wgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and trunc(dri.submitted_date, 'DAY') = wct.week 
	and trunc(dri.submitted_date, 'DAY') = wdt.week 
	and trunc(dri.submitted_date, 'DAY') = wgct.week 
	and dri.order_id = cog.order_id
group by trunc(dri.submitted_date, 'DAY'), 
	wct.number_of_cancels, 
	wct.amount, 
	wct.shipping_cost, 
	wct.tax, 
	wdt.num_of_discounts, 
	wgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(dri.submitted_date, 'DAY') as week, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(wct.amount + wct.shipping_cost + wct.tax) as dollar_cancels,
	(sum(ai.amount) - wct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - wct.shipping_cost - wct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(wct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - wct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	wdt.num_of_discounts as num_of_discounts,
	wgct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptw_cancels wct, 
	drptw_discounts wdt,
	drptw_gift_certs wgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and dbo.TRUNC(dri.submitted_date, 'DAY') = wct.week 
	and dbo.TRUNC(dri.submitted_date, 'DAY') = wdt.week 
	and dbo.TRUNC(dri.submitted_date, 'DAY') = wgct.week 
	and dri.order_id = cog.order_id
group by 
	dbo.TRUNC(dri.submitted_date, 'DAY'), 
	wct.number_of_cancels, 
	wct.amount, 
	wct.shipping_cost, 
	wct.tax, 
	wdt.num_of_discounts, 
	wgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_SUB(DATE(dri.submitted_date), INTERVAL DAYOFWEEK(dri.submitted_date)-1 DAY) as week, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(wct.amount + wct.shipping_cost + wct.tax) as dollar_cancels,
	(sum(ai.amount) - wct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - wct.shipping_cost - wct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(wct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - wct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	wdt.num_of_discounts as num_of_discounts,
	wgct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptw_cancels wct, 
	drptw_discounts wdt,
	drptw_gift_certs wgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and DATE_SUB(DATE(dri.submitted_date), INTERVAL DAYOFWEEK(dri.submitted_date)-1 DAY) = wct.week 
	and DATE_SUB(DATE(dri.submitted_date), INTERVAL DAYOFWEEK(dri.submitted_date)-1 DAY) = wdt.week 
	and DATE_SUB(DATE(dri.submitted_date), INTERVAL DAYOFWEEK(dri.submitted_date)-1 DAY) = wgct.week 
	and dri.order_id = cog.order_id
group by 
	DATE_SUB(DATE(dri.submitted_date), INTERVAL DAYOFWEEK(dri.submitted_date)-1 DAY), 
	wct.number_of_cancels, 
	wct.amount, 
	wct.shipping_cost, 
	wct.tax, 
	wdt.num_of_discounts, 
	wgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
      <view-db db="db2">
         <view-body><![CDATA[
select DATE(DAYS(dri.submitted_date) - DAYOFWEEK(dri.submitted_date) +1) as week, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(wct.amount + wct.shipping_cost + wct.tax) as dollar_cancels,
	(sum(ai.amount) - wct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - wct.shipping_cost - wct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(wct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - wct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	wdt.num_of_discounts as num_of_discounts,
	wgct.num_of_gift_certs as num_of_gift_certs
from dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptw_cancels wct, 
	drptw_discounts wdt,
	drptw_gift_certs wgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and DATE(DAYS(dri.submitted_date) - DAYOFWEEK(dri.submitted_date) +1) = wct.week 
	and DATE(DAYS(dri.submitted_date) - DAYOFWEEK(dri.submitted_date) +1) = wdt.week 
	and DATE(DAYS(dri.submitted_date) - DAYOFWEEK(dri.submitted_date) +1) = wgct.week 
	and dri.order_id = cog.order_id
group by DATE(DAYS(dri.submitted_date) - DAYOFWEEK(dri.submitted_date) +1), 
	wct.number_of_cancels, 
	wct.amount, 
	wct.shipping_cost, 
	wct.tax, 
	wdt.num_of_discounts, 
	wgct.num_of_gift_certs
	]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, dri.submitted_date), dri.submitted_date), 101)) as week, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(wct.amount + wct.shipping_cost + wct.tax) as dollar_cancels,
	(sum(ai.amount) - wct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - wct.shipping_cost - wct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(wct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - wct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	wdt.num_of_discounts as num_of_discounts,
	wgct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptw_cancels wct, 
	drptw_discounts wdt,
	drptw_gift_certs wgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, dri.submitted_date), dri.submitted_date), 101)) = wct.week 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, dri.submitted_date), dri.submitted_date), 101)) = wdt.week 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, dri.submitted_date), dri.submitted_date), 101)) = wgct.week 
	and dri.order_id = cog.order_id
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, dri.submitted_date), dri.submitted_date), 101)), 
	wct.number_of_cancels, 
	wct.amount, 
	wct.shipping_cost, 
	wct.tax, 
	wdt.num_of_discounts, 
	wgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_orders calculates various totals from orders over each month
   ]]></comment>
   <view name="drptm_orders" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(dri.submitted_date, 'MON') as month, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(mct.amount + mct.shipping_cost + mct.tax) as dollar_cancels,
	(sum(ai.amount) - mct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - mct.shipping_cost - mct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(mct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - mct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	mdt.num_of_discounts as num_of_discounts,
	mgct.num_of_gift_certs as num_of_gift_certs
from dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptm_cancels mct, 
	drptm_discounts mdt,
	drptm_gift_certs mgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and trunc(dri.submitted_date, 'MON') = mct.month 
	and trunc(dri.submitted_date, 'MON') = mdt.month 
	and trunc(dri.submitted_date, 'MON') = mgct.month 
	and dri.order_id = cog.order_id
group by trunc(dri.submitted_date, 'MON'), 
	mct.number_of_cancels, mct.amount, 
	mct.shipping_cost, 
	mct.tax, 
	mdt.num_of_discounts, 
	mgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(dri.submitted_date, 'MON') as month, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(mct.amount + mct.shipping_cost + mct.tax) as dollar_cancels,
	(sum(ai.amount) - mct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - mct.shipping_cost - mct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(mct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - mct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	mdt.num_of_discounts as num_of_discounts,
	mgct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptm_cancels mct, 
	drptm_discounts mdt,
	drptm_gift_certs mgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and dbo.TRUNC(dri.submitted_date, 'MON') = mct.month 
	and dbo.TRUNC(dri.submitted_date, 'MON') = mdt.month 
	and dbo.TRUNC(dri.submitted_date, 'MON') = mgct.month 
	and dri.order_id = cog.order_id
group by 
	dbo.TRUNC(dri.submitted_date, 'MON'), 
	mct.number_of_cancels, mct.amount, 
	mct.shipping_cost, 
	mct.tax, 
	mdt.num_of_discounts, 
	mgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(dri.submitted_date, '%Y-%m-01') as month, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(mct.amount + mct.shipping_cost + mct.tax) as dollar_cancels,
	(sum(ai.amount) - mct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - mct.shipping_cost - mct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(mct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - mct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	mdt.num_of_discounts as num_of_discounts,
	mgct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptm_cancels mct, 
	drptm_discounts mdt,
	drptm_gift_certs mgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and DATE_FORMAT(dri.submitted_date, '%Y-%m-01') = mct.month 
	and DATE_FORMAT(dri.submitted_date, '%Y-%m-01') = mdt.month 
	and DATE_FORMAT(dri.submitted_date, '%Y-%m-01') = mgct.month 
	and dri.order_id = cog.order_id
group by 
	DATE_FORMAT(dri.submitted_date, '%Y-%m-01'), 
	mct.number_of_cancels, mct.amount, 
	mct.shipping_cost, 
	mct.tax, 
	mdt.num_of_discounts, 
	mgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(dri.submitted_date) AS CHAR(2)))||'-01') as month, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(mct.amount + mct.shipping_cost + mct.tax) as dollar_cancels,
	(sum(ai.amount) - mct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - mct.shipping_cost - mct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(mct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - mct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	mdt.num_of_discounts as num_of_discounts,
	mgct.num_of_gift_certs as num_of_gift_certs
from dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptm_cancels mct, 
	drptm_discounts mdt,
	drptm_gift_certs mgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(dri.submitted_date) AS CHAR(2)))||'-01') = mct.month 
	and DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(dri.submitted_date) AS CHAR(2)))||'-01') = mdt.month 
	and DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(dri.submitted_date) AS CHAR(2)))||'-01') = mgct.month 
	and dri.order_id = cog.order_id
group by DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(dri.submitted_date) AS CHAR(2)))||'-01'), 
	mct.number_of_cancels, mct.amount, 
	mct.shipping_cost, 
	mct.tax, 
	mdt.num_of_discounts, 
	mgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, dri.submitted_date), dri.submitted_date), 101))  as month,
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(mct.amount + mct.shipping_cost + mct.tax) as dollar_cancels,
	(sum(ai.amount) - mct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - mct.shipping_cost - mct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(mct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - mct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	mdt.num_of_discounts as num_of_discounts,
	mgct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptm_cancels mct, 
	drptm_discounts mdt,
	drptm_gift_certs mgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, dri.submitted_date), dri.submitted_date), 101))  = mct.month 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, dri.submitted_date), dri.submitted_date), 101))  = mdt.month 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, dri.submitted_date), dri.submitted_date), 101))  = mgct.month 
	and dri.order_id = cog.order_id
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, dri.submitted_date), dri.submitted_date), 101)) , 
	mct.number_of_cancels, mct.amount, 
	mct.shipping_cost, 
	mct.tax, 
	mdt.num_of_discounts, 
	mgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_orders calculates various totals from orders over each quarter
   ]]></comment>
   <view name="drptq_orders" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(dri.submitted_date, 'Q') as quarter, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(qct.amount + qct.shipping_cost + qct.tax) as dollar_cancels,
	(sum(ai.amount) - qct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - qct.shipping_cost - qct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(qct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - qct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	qdt.num_of_discounts as num_of_discounts,
	qgct.num_of_gift_certs as num_of_gift_certs
from dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptq_cancels qct, 
	drptq_discounts qdt,
	drptq_gift_certs qgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and trunc(dri.submitted_date, 'Q') = qct.quarter 
	and trunc(dri.submitted_date, 'Q') = qdt.quarter 
	and trunc(dri.submitted_date, 'Q') = qgct.quarter 
	and dri.order_id = cog.order_id
group by trunc(dri.submitted_date, 'Q'), 
	qct.number_of_cancels, 
	qct.amount, 
	qct.shipping_cost, 
	qct.tax, 
	qdt.num_of_discounts, 
	qgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(dri.submitted_date, 'Q') as quarter, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(qct.amount + qct.shipping_cost + qct.tax) as dollar_cancels,
	(sum(ai.amount) - qct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - qct.shipping_cost - qct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(qct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - qct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	qdt.num_of_discounts as num_of_discounts,
	qgct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptq_cancels qct, 
	drptq_discounts qdt,
	drptq_gift_certs qgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and dbo.TRUNC(dri.submitted_date, 'Q') = qct.quarter 
	and dbo.TRUNC(dri.submitted_date, 'Q') = qdt.quarter 
	and dbo.TRUNC(dri.submitted_date, 'Q') = qgct.quarter 
	and dri.order_id = cog.order_id
group by 
	dbo.TRUNC(dri.submitted_date, 'Q'), 
	qct.number_of_cancels, 
	qct.amount, 
	qct.shipping_cost, 
	qct.tax, 
	qdt.num_of_discounts, 
	qgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_ADD(DATE_FORMAT(dri.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(dri.submitted_date)-1)*3 MONTH) as quarter, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(qct.amount + qct.shipping_cost + qct.tax) as dollar_cancels,
	(sum(ai.amount) - qct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - qct.shipping_cost - qct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(qct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - qct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	qdt.num_of_discounts as num_of_discounts,
	qgct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptq_cancels qct, 
	drptq_discounts qdt,
	drptq_gift_certs qgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and DATE_ADD(DATE_FORMAT(dri.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(dri.submitted_date)-1)*3 MONTH) = qct.quarter 
	and DATE_ADD(DATE_FORMAT(dri.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(dri.submitted_date)-1)*3 MONTH) = qdt.quarter 
	and DATE_ADD(DATE_FORMAT(dri.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(dri.submitted_date)-1)*3 MONTH) = qgct.quarter 
	and dri.order_id = cog.order_id
group by 
	DATE_ADD(DATE_FORMAT(dri.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(dri.submitted_date)-1)*3 MONTH), 
	qct.number_of_cancels, 
	qct.amount, 
	qct.shipping_cost, 
	qct.tax, 
	qdt.num_of_discounts, 
	qgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(dri.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(qct.amount + qct.shipping_cost + qct.tax) as dollar_cancels,
	(sum(ai.amount) - qct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - qct.shipping_cost - qct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(qct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - qct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	qdt.num_of_discounts as num_of_discounts,
	qgct.num_of_gift_certs as num_of_gift_certs
from dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptq_cancels qct, 
	drptq_discounts qdt,
	drptq_gift_certs qgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(dri.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') = qct.quarter 
	and DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(dri.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') = qdt.quarter 
	and DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(dri.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') = qgct.quarter 
	and dri.order_id = cog.order_id
group by DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(dri.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01'), 
	qct.number_of_cancels, 
	qct.amount, 
	qct.shipping_cost, 
	qct.tax, 
	qdt.num_of_discounts, 
	qgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, dri.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, dri.submitted_date)), 101)  as quarter, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(qct.amount + qct.shipping_cost + qct.tax) as dollar_cancels,
	(sum(ai.amount) - qct.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - qct.shipping_cost - qct.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(qct.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - qct.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	qdt.num_of_discounts as num_of_discounts,
	qgct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drptq_cancels qct, 
	drptq_discounts qdt,
	drptq_gift_certs qgct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, dri.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, dri.submitted_date)), 101)  = qct.quarter 
	and CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, dri.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, dri.submitted_date)), 101)  = qdt.quarter 
	and CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, dri.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, dri.submitted_date)), 101)  = qgct.quarter 
	and dri.order_id = cog.order_id
group by 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, dri.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, dri.submitted_date)), 101) , 
	qct.number_of_cancels, 
	qct.amount, 
	qct.shipping_cost, 
	qct.tax, 
	qdt.num_of_discounts, 
	qgct.num_of_gift_certs
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_orders calculates various totals from orders over each year
   ]]></comment>
   <view name="drpta_orders" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(dri.submitted_date, 'YEAR') as year, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(act.amount + act.shipping_cost + act.tax) as dollar_cancels,
	(sum(ai.amount) - act.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - act.shipping_cost - act.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(act.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - act.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	adt.num_of_discounts as num_of_discounts,
	agct.num_of_gift_certs as num_of_gift_certs
from dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drpta_cancels act, 
	drpta_discounts adt,
	drpta_gift_certs agct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and trunc(dri.submitted_date, 'YEAR') = act.year 
	and trunc(dri.submitted_date, 'YEAR') = adt.year 
	and trunc(dri.submitted_date, 'YEAR') = agct.year 
	and dri.order_id = cog.order_id
group by trunc(dri.submitted_date, 'YEAR'), 
	act.number_of_cancels, 
	act.amount, 
	act.shipping_cost, 
	act.tax, 
	adt.num_of_discounts, 
	agct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(dri.submitted_date, 'YEAR') as year, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(act.amount + act.shipping_cost + act.tax) as dollar_cancels,
	(sum(ai.amount) - act.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - act.shipping_cost - act.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(act.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - act.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	adt.num_of_discounts as num_of_discounts,
	agct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drpta_cancels act, 
	drpta_discounts adt,
	drpta_gift_certs agct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and dbo.TRUNC(dri.submitted_date, 'YEAR') = act.year 
	and dbo.TRUNC(dri.submitted_date, 'YEAR') = adt.year 
	and dbo.TRUNC(dri.submitted_date, 'YEAR') = agct.year 
	and dri.order_id = cog.order_id
group by 
	dbo.TRUNC(dri.submitted_date, 'YEAR'), 
	act.number_of_cancels, 
	act.amount, 
	act.shipping_cost, 
	act.tax, 
	adt.num_of_discounts, 
	agct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(dri.submitted_date, '%Y-01-01') as year, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(act.amount + act.shipping_cost + act.tax) as dollar_cancels,
	(sum(ai.amount) - act.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - act.shipping_cost - act.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(act.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - act.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	adt.num_of_discounts as num_of_discounts,
	agct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drpta_cancels act, 
	drpta_discounts adt,
	drpta_gift_certs agct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and DATE_FORMAT(dri.submitted_date, '%Y-01-01') = act.year 
	and DATE_FORMAT(dri.submitted_date, '%Y-01-01') = adt.year 
	and DATE_FORMAT(dri.submitted_date, '%Y-01-01') = agct.year 
	and dri.order_id = cog.order_id
group by 
	DATE_FORMAT(dri.submitted_date, '%Y-01-01'), 
	act.number_of_cancels, 
	act.amount, 
	act.shipping_cost, 
	act.tax, 
	adt.num_of_discounts, 
	agct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-1-1') as year, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(act.amount + act.shipping_cost + act.tax) as dollar_cancels,
	(sum(ai.amount) - act.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - act.shipping_cost - act.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(act.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - act.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	adt.num_of_discounts as num_of_discounts,
	agct.num_of_gift_certs as num_of_gift_certs
from dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drpta_cancels act, 
	drpta_discounts adt,
	drpta_gift_certs agct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-1-1') = act.year 
	and DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-1-1') = adt.year 
	and DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-1-1') = agct.year 
	and dri.order_id = cog.order_id
group by DATE(CAST(YEAR(dri.submitted_date) AS CHAR(4))||'-1-1'), 
	act.number_of_cancels, 
	act.amount, 
	act.shipping_cost, 
	act.tax, 
	adt.num_of_discounts, 
	agct.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="total_units_sold"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, dri.submitted_date), dri.submitted_date), 101)) as year, 
	(sum(ai.amount) + sum(si.shipping_cost) + sum(ti.tax)) as total_dollar_sales,
	(act.amount + act.shipping_cost + act.tax) as dollar_cancels,
	(sum(ai.amount) - act.amount) as merch_rev,
	(sum(si.shipping_cost) + sum(ti.tax) - act.shipping_cost - act.tax) as shipping_tax_rev,
	sum(cog.cost_of_goods) as cost_of_goods_sold,
	(count(dri.order_id)) as number_of_orders, 
	(act.number_of_cancels) as cancelled_orders,
	(count(dri.order_id) - act.number_of_cancels) as net_num_of_orders,
	sum(dri.total_items) as total_units_sold,
	adt.num_of_discounts as num_of_discounts,
	agct.num_of_gift_certs as num_of_gift_certs
from 
	dcspp_amount_info ai, 
	drpt_shipping si, 
	drpt_taxes ti,
	drpta_cancels act, 
	drpta_discounts adt,
	drpta_gift_certs agct, 
	drpt_order dri, 
	drpt_cost_of_goods cog
where 
	dri.price_info = ai.amount_info_id 
	and dri.order_id = si.order_id 
	and dri.order_id = ti.order_id 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, dri.submitted_date), dri.submitted_date), 101)) = act.year 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, dri.submitted_date), dri.submitted_date), 101)) = adt.year 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, dri.submitted_date), dri.submitted_date), 101)) = agct.year 
	and dri.order_id = cog.order_id
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, dri.submitted_date), dri.submitted_date), 101)), 
	act.number_of_cancels, 
	act.amount, 
	act.shipping_cost, 
	act.tax, 
	adt.num_of_discounts, 
	agct.num_of_gift_certs
         ]]></view-body>
      </view-db>
   </view>
   <view name="drpt_visitor" description="">
      <view-db db="oracle">
         <view-params>
            <view-param name="profileid"/>
            <view-param name="day"/>
            <view-param name="state"/>
            <view-param name="country"/>
         </view-params>
         <view-body><![CDATA[
 select distinct 
	vi.profileid, 
	TRUNC(vi.timestamp, 'DATE') as day, 
	ci.state, 
	ci.country
from 
	dss_dps_view_item vi, 
	dps_user_address ua, 
	dps_contact_info ci
where 
	vi.profileid = ua.id 
	and ua.billing_addr_id = ci.id
         ]]></view-body>
      </view-db>
      <view-db db="mssql">
         <view-params>
            <view-param name="profileid"/>
            <view-param name="day"/>
            <view-param name="state"/>
            <view-param name="country"/>
         </view-params>
         <view-body><![CDATA[
select distinct 
	vi.profileid, 
	dbo.TRUNC(vi.timestamp, 'DATE') as day, 
	ci.state, 
	ci.country
from 
	dss_dps_view_item vi, 
	dps_user_address ua, 
	dps_contact_info ci
where 
	vi.profileid = ua.id 
	and ua.billing_addr_id = ci.id
         ]]></view-body>
      </view-db>
      <view-db db="mysql">
         <view-params>
            <view-param name="profileid"/>
            <view-param name="day"/>
            <view-param name="state"/>
            <view-param name="country"/>
         </view-params>
         <view-body><![CDATA[
select distinct 
	vi.profileid, 
	DATE(vi.timestamp) as day, 
	ci.state, 
	ci.country
from 
	dss_dps_view_item vi, 
	dps_user_address ua, 
	dps_contact_info ci
where 
	vi.profileid = ua.id 
	and ua.billing_addr_id = ci.id
         ]]></view-body>
      </view-db>
      <view-db db="db2">
         <view-body><![CDATA[
select distinct
        vi.profileid,
        date(vi.timestamp) as day,
        ci.state,
        ci.country
from dss_dps_view_item vi, dps_user_address ua, dps_contact_info ci
     where vi.profileid = ua.id
           and ua.billing_addr_id = ci.id
         ]]></view-body>
      </view-db>
      <view-db db="sybase">
         <view-params>
            <view-param name="profileid"/>
            <view-param name="day"/>
            <view-param name="state"/>
            <view-param name="country"/>
         </view-params>
         <view-body><![CDATA[
select distinct 
	vi.profileid, 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, vi.timestamp), vi.timestamp), 101)) as day, 
	ci.state, 
	ci.country
from 
	dss_dps_view_item vi, 
	dps_user_address ua, 
	dps_contact_info ci
where 
	vi.profileid = ua.id 
	and ua.billing_addr_id = ci.id
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpt_cart calculates the total quantity and amount of
   ]]></comment>
   <comment><![CDATA[
       items that have been added to shopping carts over each day
   ]]></comment>
   <view name="drpt_cart" description="">
      <view-db db="oracle">
         <view-params>
            <view-param name="orderid"/>
            <view-param name="day"/>
            <view-param name="quantity"/>
            <view-param name="amount"/>
         </view-params>
         <view-body><![CDATA[
select 
	orderid as orderid, 
	trunc(timestamp) as day, 
	sum(quantity) as quantity, 
	sum(amount) as amount
from dcs_cart_event
group by orderid, 
	trunc(timestamp)
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="orderid"/>
            <view-param name="day"/>
            <view-param name="quantity"/>
            <view-param name="amount"/>
         </view-params>
         <view-body><![CDATA[
select 
	orderid as orderid, 
	dbo.TRUNC(timestamp, 'DATE') as day, 
	sum(quantity) as quantity, 
	sum(amount) as amount
from 
	dcs_cart_event
group by 
	orderid, 
	dbo.TRUNC(timestamp, 'DATE')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="orderid"/>
            <view-param name="day"/>
            <view-param name="quantity"/>
            <view-param name="amount"/>
         </view-params>
         <view-body><![CDATA[
select 
	orderid as orderid, 
	DATE(timestamp) as day, 
	sum(quantity) as quantity, 
	sum(amount) as amount
from 
	dcs_cart_event
group by 
	orderid, 
	DATE(timestamp)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select
        orderid as orderid, 
	date(timestamp) as day, 
	sum(quantity) as quantity, 
	sum(amount) as amount
from dcs_cart_event
group by orderid, 
	date(timestamp)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="orderid"/>
            <view-param name="day"/>
            <view-param name="quantity"/>
            <view-param name="amount"/>
         </view-params>
         <view-body><![CDATA[
select 
	orderid as orderid, 
	CONVERT(DATETIME, CONVERT(CHAR(10),timestamp, 101))  as day, 
	sum(quantity) as quantity, 
	sum(amount) as amount
from 
	dcs_cart_event
group by 
	orderid, 
	CONVERT(DATETIME, CONVERT(CHAR(10),timestamp, 101)) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_fiscal_info caclulates several revenue-related totals over each week
   ]]></comment>
   <view name="drptw_fiscal_info" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select wot.week as week, 
	wot.total_dollar_sales as total_dollar_sales,
	wot.dollar_cancels as dollar_cancels, 
	(wot.total_dollar_sales - wot.dollar_cancels) as net_dollar_sales,
	wot.merch_rev as merch_rev,
	wot.shipping_tax_rev as shipping_tax_rev, 
	wot.number_of_orders as number_of_orders,
	wot.cancelled_orders as cancelled_orders, 
	wot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((wot.total_dollar_sales - wot.dollar_cancels) / wot.net_num_of_orders) as avg_order_rev,
	(wot.merch_rev / wot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(wot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(wot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	wot.num_of_discounts as num_of_discounts, 
	wot.num_of_gift_certs as num_of_gift_certs
from drptw_orders wot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where trunc(ce.timestamp, 'DAY') = wot.week 
	and trunc(vi.timestamp, 'DAY') = wot.week
group by wot.week, 
	wot.total_dollar_sales, 
	wot.dollar_cancels,
	wot.merch_rev, 
	wot.shipping_tax_rev, 
	wot.number_of_orders,
	wot.cancelled_orders, 
	wot.net_num_of_orders, 
	wot.num_of_discounts,
	wot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	wot.week as week, 
	wot.total_dollar_sales as total_dollar_sales,
	wot.dollar_cancels as dollar_cancels, 
	(wot.total_dollar_sales - wot.dollar_cancels) as net_dollar_sales,
	wot.merch_rev as merch_rev,
	wot.shipping_tax_rev as shipping_tax_rev, 
	wot.number_of_orders as number_of_orders,
	wot.cancelled_orders as cancelled_orders, 
	wot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((wot.total_dollar_sales - wot.dollar_cancels) / wot.net_num_of_orders) as avg_order_rev,
	(wot.merch_rev / wot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(wot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(wot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	wot.num_of_discounts as num_of_discounts, 
	wot.num_of_gift_certs as num_of_gift_certs
from 
	drptw_orders wot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	dbo.TRUNC(ce.timestamp, 'DAY') = wot.week 
	and dbo.TRUNC(vi.timestamp, 'DAY') = wot.week
group by 
	wot.week, 
	wot.total_dollar_sales, 
	wot.dollar_cancels,
	wot.merch_rev, 
	wot.shipping_tax_rev, 
	wot.number_of_orders,
	wot.cancelled_orders, 
	wot.net_num_of_orders, 
	wot.num_of_discounts,
	wot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	wot.week as week, 
	wot.total_dollar_sales as total_dollar_sales,
	wot.dollar_cancels as dollar_cancels, 
	(wot.total_dollar_sales - wot.dollar_cancels) as net_dollar_sales,
	wot.merch_rev as merch_rev,
	wot.shipping_tax_rev as shipping_tax_rev, 
	wot.number_of_orders as number_of_orders,
	wot.cancelled_orders as cancelled_orders, 
	wot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((wot.total_dollar_sales - wot.dollar_cancels) / wot.net_num_of_orders) as avg_order_rev,
	(wot.merch_rev / wot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(wot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(wot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	wot.num_of_discounts as num_of_discounts, 
	wot.num_of_gift_certs as num_of_gift_certs
from 
	drptw_orders wot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	DATE_SUB(DATE(ce.timestamp), INTERVAL DAYOFWEEK(ce.timestamp)-1 DAY) = wot.week 
	and DATE_SUB(DATE(vi.timestamp), INTERVAL DAYOFWEEK(vi.timestamp)-1 DAY) = wot.week
group by 
	wot.week, 
	wot.total_dollar_sales, 
	wot.dollar_cancels,
	wot.merch_rev, 
	wot.shipping_tax_rev, 
	wot.number_of_orders,
	wot.cancelled_orders, 
	wot.net_num_of_orders, 
	wot.num_of_discounts,
	wot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select wot.week as week, 
	wot.total_dollar_sales as total_dollar_sales,
	wot.dollar_cancels as dollar_cancels, 
	(wot.total_dollar_sales - wot.dollar_cancels) as net_dollar_sales,
	wot.merch_rev as merch_rev,
	wot.shipping_tax_rev as shipping_tax_rev, 
	wot.number_of_orders as number_of_orders,
	wot.cancelled_orders as cancelled_orders, 
	wot.net_num_of_orders as net_num_of_orders,
	count(ce.orderid) as num_of_carts, 
	((wot.total_dollar_sales - wot.dollar_cancels) / wot.net_num_of_orders) as avg_order_rev,
	(wot.merch_rev / wot.net_num_of_orders) as avg_order_merc_rev,
	count(vi.profileid) as number_of_shoppers,
	(wot.number_of_orders / count(vi.profileid)) as shop_to_purc_conv,
	(count(ce.orderid) / count(vi.profileid)) as shop_to_cart_conv,
	(wot.number_of_orders / count(ce.orderid)) as cart_to_purc_conv,
	wot.num_of_discounts as num_of_discounts, 
	wot.num_of_gift_certs as num_of_gift_certs
from drptw_orders wot, 
	drpt_cart ce, 
	drpt_visitor vi
where  wot.week = DATE(DAYS(ce.day) - DAYOFWEEK(ce.day) +1)
	and wot.week = DATE(DAYS(vi.day) - DAYOFWEEK(vi.day) +1)
group by wot.week, 
	wot.total_dollar_sales, 
	wot.dollar_cancels,
	wot.merch_rev, 
	wot.shipping_tax_rev, 
	wot.number_of_orders,
	wot.cancelled_orders, 
	wot.net_num_of_orders, 
	wot.num_of_discounts,
	wot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	wot.week as week, 
	wot.total_dollar_sales as total_dollar_sales,
	wot.dollar_cancels as dollar_cancels, 
	(wot.total_dollar_sales - wot.dollar_cancels) as net_dollar_sales,
	wot.merch_rev as merch_rev,
	wot.shipping_tax_rev as shipping_tax_rev, 
	wot.number_of_orders as number_of_orders,
	wot.cancelled_orders as cancelled_orders, 
	wot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((wot.total_dollar_sales - wot.dollar_cancels) / wot.net_num_of_orders) as avg_order_rev,
	(wot.merch_rev / wot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(wot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(wot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	wot.num_of_discounts as num_of_discounts, 
	wot.num_of_gift_certs as num_of_gift_certs
from 
	drptw_orders wot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, ce.timestamp), ce.timestamp), 101)) = wot.week 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, vi.timestamp), vi.timestamp), 101)) = wot.week
group by 
	wot.week, 
	wot.total_dollar_sales, 
	wot.dollar_cancels,
	wot.merch_rev, 
	wot.shipping_tax_rev, 
	wot.number_of_orders,
	wot.cancelled_orders, 
	wot.net_num_of_orders, 
	wot.num_of_discounts,
	wot.num_of_gift_certs
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_fiscal_info caclulates several revenue-related totals over each month
   ]]></comment>
   <view name="drptm_fiscal_info" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select mot.month as month, 
	mot.total_dollar_sales as total_dollar_sales,
	mot.dollar_cancels as dollar_cancels, 
	(mot.total_dollar_sales - mot.dollar_cancels) as net_dollar_sales,
	mot.merch_rev as merch_rev,
	mot.shipping_tax_rev as shipping_tax_rev, 
	mot.number_of_orders as number_of_orders,
	mot.cancelled_orders as cancelled_orders, 
	mot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((mot.total_dollar_sales - mot.dollar_cancels) / mot.net_num_of_orders) as avg_order_rev,
	(mot.merch_rev / mot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(mot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(mot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	mot.num_of_discounts as num_of_discounts, 
	mot.num_of_gift_certs as num_of_gift_certs
from drptm_orders mot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where trunc(ce.timestamp, 'MON') = mot.month 
	and trunc(vi.timestamp, 'MON') = mot.month
group by mot.month, 
	mot.total_dollar_sales, 
	mot.dollar_cancels,
	mot.merch_rev, 
	mot.shipping_tax_rev, 
	mot.number_of_orders,
	mot.cancelled_orders, 
	mot.net_num_of_orders, 
	mot.num_of_discounts,
	mot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	mot.month as month, 
	mot.total_dollar_sales as total_dollar_sales,
	mot.dollar_cancels as dollar_cancels, 
	(mot.total_dollar_sales - mot.dollar_cancels) as net_dollar_sales,
	mot.merch_rev as merch_rev,
	mot.shipping_tax_rev as shipping_tax_rev, 
	mot.number_of_orders as number_of_orders,
	mot.cancelled_orders as cancelled_orders, 
	mot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((mot.total_dollar_sales - mot.dollar_cancels) / mot.net_num_of_orders) as avg_order_rev,
	(mot.merch_rev / mot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(mot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(mot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	mot.num_of_discounts as num_of_discounts, 
	mot.num_of_gift_certs as num_of_gift_certs
from 
	drptm_orders mot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	dbo.TRUNC(ce.timestamp, 'MON') = mot.month 
	and dbo.TRUNC(vi.timestamp, 'MON') = mot.month
group by 
	mot.month, 
	mot.total_dollar_sales, 
	mot.dollar_cancels,
	mot.merch_rev, 
	mot.shipping_tax_rev, 
	mot.number_of_orders,
	mot.cancelled_orders, 
	mot.net_num_of_orders, 
	mot.num_of_discounts,
	mot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	mot.month as month, 
	mot.total_dollar_sales as total_dollar_sales,
	mot.dollar_cancels as dollar_cancels, 
	(mot.total_dollar_sales - mot.dollar_cancels) as net_dollar_sales,
	mot.merch_rev as merch_rev,
	mot.shipping_tax_rev as shipping_tax_rev, 
	mot.number_of_orders as number_of_orders,
	mot.cancelled_orders as cancelled_orders, 
	mot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((mot.total_dollar_sales - mot.dollar_cancels) / mot.net_num_of_orders) as avg_order_rev,
	(mot.merch_rev / mot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(mot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(mot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	mot.num_of_discounts as num_of_discounts, 
	mot.num_of_gift_certs as num_of_gift_certs
from 
	drptm_orders mot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	DATE_FORMAT(ce.timestamp, '%Y-%m-01') = mot.month 
	and DATE_FORMAT(vi.timestamp, '%Y-%m-01') = mot.month
group by 
	mot.month, 
	mot.total_dollar_sales, 
	mot.dollar_cancels,
	mot.merch_rev, 
	mot.shipping_tax_rev, 
	mot.number_of_orders,
	mot.cancelled_orders, 
	mot.net_num_of_orders, 
	mot.num_of_discounts,
	mot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select mot.month as month, 
	mot.total_dollar_sales as total_dollar_sales,
	mot.dollar_cancels as dollar_cancels, 
	(mot.total_dollar_sales - mot.dollar_cancels) as net_dollar_sales,
	mot.merch_rev as merch_rev,
	mot.shipping_tax_rev as shipping_tax_rev, 
	mot.number_of_orders as number_of_orders,
	mot.cancelled_orders as cancelled_orders, 
	mot.net_num_of_orders as net_num_of_orders,
	count(ce.orderid) as num_of_carts, 
	((mot.total_dollar_sales - mot.dollar_cancels) / mot.net_num_of_orders) as avg_order_rev,
	(mot.merch_rev / mot.net_num_of_orders) as avg_order_merc_rev,
	count(vi.profileid) as number_of_shoppers,
	(mot.number_of_orders / count(vi.profileid)) as shop_to_purc_conv,
	(count(ce.orderid) / count(vi.profileid)) as shop_to_cart_conv,
	(mot.number_of_orders / count(ce.orderid)) as cart_to_purc_conv,
	mot.num_of_discounts as num_of_discounts, 
	mot.num_of_gift_certs as num_of_gift_certs
from drptm_orders mot, 
	drpt_cart ce, 
	drpt_visitor vi
where  mot.month  = DATE(CAST(YEAR(ce.day) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(ce.day) AS CHAR(2)))||'-01')
	and mot.month  = DATE(CAST(YEAR(vi.day) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(vi.day) AS CHAR(2)))||'-01')
group by mot.month, 
	mot.total_dollar_sales, 
	mot.dollar_cancels,
	mot.merch_rev, 
	mot.shipping_tax_rev, 
	mot.number_of_orders,
	mot.cancelled_orders, 
	mot.net_num_of_orders, 
	mot.num_of_discounts,
	mot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	mot.month as month, 
	mot.total_dollar_sales as total_dollar_sales,
	mot.dollar_cancels as dollar_cancels, 
	(mot.total_dollar_sales - mot.dollar_cancels) as net_dollar_sales,
	mot.merch_rev as merch_rev,
	mot.shipping_tax_rev as shipping_tax_rev, 
	mot.number_of_orders as number_of_orders,
	mot.cancelled_orders as cancelled_orders, 
	mot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((mot.total_dollar_sales - mot.dollar_cancels) / mot.net_num_of_orders) as avg_order_rev,
	(mot.merch_rev / mot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(mot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(mot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	mot.num_of_discounts as num_of_discounts, 
	mot.num_of_gift_certs as num_of_gift_certs
from 
	drptm_orders mot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, ce.timestamp), ce.timestamp), 101)) = mot.month 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, vi.timestamp), vi.timestamp), 101)) = mot.month	 
group by 
	mot.month, 
	mot.total_dollar_sales, 
	mot.dollar_cancels,
	mot.merch_rev, 
	mot.shipping_tax_rev, 
	mot.number_of_orders,
	mot.cancelled_orders, 
	mot.net_num_of_orders, 
	mot.num_of_discounts,
	mot.num_of_gift_certs
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_fiscal_info caclulates several revenue-related totals over each quarter
   ]]></comment>
   <view name="drptq_fiscal_info" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select qot.quarter as quarter, 
	qot.total_dollar_sales as total_dollar_sales,
	qot.dollar_cancels as dollar_cancels, 
	(qot.total_dollar_sales - qot.dollar_cancels) as net_dollar_sales,
	qot.merch_rev as merch_rev,
	qot.shipping_tax_rev as shipping_tax_rev, 
	qot.number_of_orders as number_of_orders,
	qot.cancelled_orders as cancelled_orders, 
	qot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((qot.total_dollar_sales - qot.dollar_cancels) / qot.net_num_of_orders) as avg_order_rev,
	(qot.merch_rev / qot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(qot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(qot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	qot.num_of_discounts as num_of_discounts, 
	qot.num_of_gift_certs as num_of_gift_certs
from drptq_orders qot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where trunc(ce.timestamp, 'Q') = qot.quarter 
	and trunc(vi.timestamp, 'Q') = qot.quarter
group by qot.quarter, 
	qot.total_dollar_sales, 
	qot.dollar_cancels,
	qot.merch_rev, 
	qot.shipping_tax_rev, 
	qot.number_of_orders,
	qot.cancelled_orders, 
	qot.net_num_of_orders, 
	qot.num_of_discounts,
	qot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	qot.quarter as quarter, 
	qot.total_dollar_sales as total_dollar_sales,
	qot.dollar_cancels as dollar_cancels, 
	(qot.total_dollar_sales - qot.dollar_cancels) as net_dollar_sales,
	qot.merch_rev as merch_rev,
	qot.shipping_tax_rev as shipping_tax_rev, 
	qot.number_of_orders as number_of_orders,
	qot.cancelled_orders as cancelled_orders, 
	qot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((qot.total_dollar_sales - qot.dollar_cancels) / qot.net_num_of_orders) as avg_order_rev,
	(qot.merch_rev / qot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(qot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(qot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	qot.num_of_discounts as num_of_discounts, 
	qot.num_of_gift_certs as num_of_gift_certs
from 
	drptq_orders qot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	dbo.TRUNC(ce.timestamp, 'Q') = qot.quarter 
	and dbo.TRUNC(vi.timestamp, 'Q') = qot.quarter
group by 
	qot.quarter, 
	qot.total_dollar_sales, 
	qot.dollar_cancels,
	qot.merch_rev, 
	qot.shipping_tax_rev, 
	qot.number_of_orders,
	qot.cancelled_orders, 
	qot.net_num_of_orders, 
	qot.num_of_discounts,
	qot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	qot.quarter as quarter, 
	qot.total_dollar_sales as total_dollar_sales,
	qot.dollar_cancels as dollar_cancels, 
	(qot.total_dollar_sales - qot.dollar_cancels) as net_dollar_sales,
	qot.merch_rev as merch_rev,
	qot.shipping_tax_rev as shipping_tax_rev, 
	qot.number_of_orders as number_of_orders,
	qot.cancelled_orders as cancelled_orders, 
	qot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((qot.total_dollar_sales - qot.dollar_cancels) / qot.net_num_of_orders) as avg_order_rev,
	(qot.merch_rev / qot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(qot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(qot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	qot.num_of_discounts as num_of_discounts, 
	qot.num_of_gift_certs as num_of_gift_certs
from 
	drptq_orders qot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	DATE_ADD(DATE_FORMAT(ce.timestamp, '%Y-01-01'), INTERVAL (QUARTER(ce.timestamp)-1)*3 MONTH) = qot.quarter 
	and DATE_ADD(DATE_FORMAT(vi.timestamp, '%Y-01-01'), INTERVAL (QUARTER(vi.timestamp)-1)*3 MONTH) = qot.quarter
group by 
	qot.quarter, 
	qot.total_dollar_sales, 
	qot.dollar_cancels,
	qot.merch_rev, 
	qot.shipping_tax_rev, 
	qot.number_of_orders,
	qot.cancelled_orders, 
	qot.net_num_of_orders, 
	qot.num_of_discounts,
	qot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select qot.quarter as quarter, 
	qot.total_dollar_sales as total_dollar_sales,
	qot.dollar_cancels as dollar_cancels, 
	(qot.total_dollar_sales - qot.dollar_cancels) as net_dollar_sales,
	qot.merch_rev as merch_rev,
	qot.shipping_tax_rev as shipping_tax_rev, 
	qot.number_of_orders as number_of_orders,
	qot.cancelled_orders as cancelled_orders, 
	qot.net_num_of_orders as net_num_of_orders,
	count(ce.orderid) as num_of_carts, 
	((qot.total_dollar_sales - qot.dollar_cancels) / qot.net_num_of_orders) as avg_order_rev,
	(qot.merch_rev / qot.net_num_of_orders) as avg_order_merc_rev,
	count(vi.profileid) as number_of_shoppers,
	(qot.number_of_orders / count(vi.profileid)) as shop_to_purc_conv,
	(count(ce.orderid) / count(vi.profileid)) as shop_to_cart_conv,
	(qot.number_of_orders / count(ce.orderid)) as cart_to_purc_conv,
	qot.num_of_discounts as num_of_discounts, 
	qot.num_of_gift_certs as num_of_gift_certs
from drptq_orders qot, 
	drpt_cart ce, 
	drpt_visitor vi
where  qot.quarter = DATE(CAST(YEAR(ce.day) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(ce.day) - 1)*3+1) AS CHAR(2)))||'-01')
	and qot.quarter = DATE(CAST(YEAR(vi.day) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(vi.day) - 1)*3+1) AS CHAR(2)))||'-01')
group by qot.quarter, 
	qot.total_dollar_sales, 
	qot.dollar_cancels,
	qot.merch_rev, 
	qot.shipping_tax_rev, 
	qot.number_of_orders,
	qot.cancelled_orders, 
	qot.net_num_of_orders, 
	qot.num_of_discounts,
	qot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	qot.quarter as quarter, 
	qot.total_dollar_sales as total_dollar_sales,
	qot.dollar_cancels as dollar_cancels, 
	(qot.total_dollar_sales - qot.dollar_cancels) as net_dollar_sales,
	qot.merch_rev as merch_rev,
	qot.shipping_tax_rev as shipping_tax_rev, 
	qot.number_of_orders as number_of_orders,
	qot.cancelled_orders as cancelled_orders, 
	qot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((qot.total_dollar_sales - qot.dollar_cancels) / qot.net_num_of_orders) as avg_order_rev,
	(qot.merch_rev / qot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(qot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(qot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	qot.num_of_discounts as num_of_discounts, 
	qot.num_of_gift_certs as num_of_gift_certs
from 
	drptq_orders qot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, ce.timestamp)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, ce.timestamp)), 101)  = qot.quarter 
	and CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, vi.timestamp)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, vi.timestamp)), 101)  = qot.quarter
group by 
	qot.quarter, 
	qot.total_dollar_sales, 
	qot.dollar_cancels,
	qot.merch_rev, 
	qot.shipping_tax_rev, 
	qot.number_of_orders,
	qot.cancelled_orders, 
	qot.net_num_of_orders, 
	qot.num_of_discounts,
	qot.num_of_gift_certs
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_fiscal_info caclulates several revenue-related totals over each year
   ]]></comment>
   <view name="drpta_fiscal_info" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select aot.year as year, 
	aot.total_dollar_sales as total_dollar_sales,
	aot.dollar_cancels as dollar_cancels, 
	(aot.total_dollar_sales - aot.dollar_cancels) as net_dollar_sales,
	aot.merch_rev as merch_rev,
	aot.shipping_tax_rev as shipping_tax_rev,
	aot.number_of_orders as number_of_orders,
	aot.cancelled_orders as cancelled_orders, 
	aot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((aot.total_dollar_sales - aot.dollar_cancels) / aot.net_num_of_orders) as avg_order_rev,
	(aot.merch_rev / aot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(aot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(aot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	aot.num_of_discounts as num_of_discounts, 
	aot.num_of_gift_certs as num_of_gift_certs
from drpta_orders aot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where trunc(ce.timestamp, 'YEAR') = aot.year 
	and trunc(vi.timestamp, 'YEAR') = aot.year
group by aot.year, 
	aot.total_dollar_sales, 
	aot.dollar_cancels,
	aot.merch_rev, 
	aot.shipping_tax_rev, 
	aot.number_of_orders,
	aot.cancelled_orders, 
	aot.net_num_of_orders, 
	aot.num_of_discounts,
	aot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	aot.year as year, 
	aot.total_dollar_sales as total_dollar_sales,
	aot.dollar_cancels as dollar_cancels, 
	(aot.total_dollar_sales - aot.dollar_cancels) as net_dollar_sales,
	aot.merch_rev as merch_rev,
	aot.shipping_tax_rev as shipping_tax_rev,
	aot.number_of_orders as number_of_orders,
	aot.cancelled_orders as cancelled_orders, 
	aot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((aot.total_dollar_sales - aot.dollar_cancels) / aot.net_num_of_orders) as avg_order_rev,
	(aot.merch_rev / aot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(aot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(aot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	aot.num_of_discounts as num_of_discounts, 
	aot.num_of_gift_certs as num_of_gift_certs
from 
	drpta_orders aot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	dbo.TRUNC(ce.timestamp, 'YEAR') = aot.year 
	and dbo.TRUNC(vi.timestamp, 'YEAR') = aot.year
group by 
	aot.year, 
	aot.total_dollar_sales, 
	aot.dollar_cancels,
	aot.merch_rev, 
	aot.shipping_tax_rev, 
	aot.number_of_orders,
	aot.cancelled_orders, 
	aot.net_num_of_orders, 
	aot.num_of_discounts,
	aot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
             select 
	aot.year as year, 
	aot.total_dollar_sales as total_dollar_sales,
	aot.dollar_cancels as dollar_cancels, 
	(aot.total_dollar_sales - aot.dollar_cancels) as net_dollar_sales,
	aot.merch_rev as merch_rev,
	aot.shipping_tax_rev as shipping_tax_rev,
	aot.number_of_orders as number_of_orders,
	aot.cancelled_orders as cancelled_orders, 
	aot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((aot.total_dollar_sales - aot.dollar_cancels) / aot.net_num_of_orders) as avg_order_rev,
	(aot.merch_rev / aot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(aot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(aot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	aot.num_of_discounts as num_of_discounts, 
	aot.num_of_gift_certs as num_of_gift_certs
from 
	drpta_orders aot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	DATE_FORMAT(ce.timestamp, '%Y-01-01') = aot.year 
	and DATE_FORMAT(vi.timestamp, '%Y-01-01') = aot.year
group by 
	aot.year, 
	aot.total_dollar_sales, 
	aot.dollar_cancels,
	aot.merch_rev, 
	aot.shipping_tax_rev, 
	aot.number_of_orders,
	aot.cancelled_orders, 
	aot.net_num_of_orders, 
	aot.num_of_discounts,
	aot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select aot.year as year, 
	aot.total_dollar_sales as total_dollar_sales,
	aot.dollar_cancels as dollar_cancels, 
	(aot.total_dollar_sales - aot.dollar_cancels) as net_dollar_sales,
	aot.merch_rev as merch_rev,
	aot.shipping_tax_rev as shipping_tax_rev,
	aot.number_of_orders as number_of_orders,
	aot.cancelled_orders as cancelled_orders, 
	aot.net_num_of_orders as net_num_of_orders,
	count(ce.orderid) as num_of_carts, 
	((aot.total_dollar_sales - aot.dollar_cancels) / aot.net_num_of_orders) as avg_order_rev,
	(aot.merch_rev / aot.net_num_of_orders) as avg_order_merc_rev,
	count(vi.profileid) as number_of_shoppers,
	(aot.number_of_orders / count(vi.profileid)) as shop_to_purc_conv,
	(count(ce.orderid) / count(vi.profileid)) as shop_to_cart_conv,
	(aot.number_of_orders / count(ce.orderid)) as cart_to_purc_conv,
	aot.num_of_discounts as num_of_discounts, 
	aot.num_of_gift_certs as num_of_gift_certs
from drpta_orders aot, 
	drpt_cart ce, 
	drpt_visitor vi
where  aot.year = DATE(CAST(YEAR(ce.day) AS CHAR(4))||'-1-1')
	and aot.year = DATE(CAST(YEAR(vi.day) AS CHAR(4))||'-1-1')
group by aot.year, 
	aot.total_dollar_sales, 
	aot.dollar_cancels,
	aot.merch_rev, 
	aot.shipping_tax_rev, 
	aot.number_of_orders,
	aot.cancelled_orders, 
	aot.net_num_of_orders, 
	aot.num_of_discounts,
	aot.num_of_gift_certs
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="dollar_cancels"/>
            <view-param name="net_dollar_sales"/>
            <view-param name="merch_rev"/>
            <view-param name="shipping_tax_rev"/>
            <view-param name="number_of_orders"/>
            <view-param name="cancelled_orders"/>
            <view-param name="net_num_of_orders"/>
            <view-param name="num_of_carts"/>
            <view-param name="avg_order_rev"/>
            <view-param name="avg_order_merc_rev"/>
            <view-param name="number_of_shoppers"/>
            <view-param name="shop_to_purc_conv"/>
            <view-param name="shop_to_cart_conv"/>
            <view-param name="cart_to_purc_conv"/>
            <view-param name="num_of_discounts"/>
            <view-param name="num_of_gift_certs"/>
         </view-params>
         <view-body><![CDATA[
select 
	aot.year as year, 
	aot.total_dollar_sales as total_dollar_sales,
	aot.dollar_cancels as dollar_cancels, 
	(aot.total_dollar_sales - aot.dollar_cancels) as net_dollar_sales,
	aot.merch_rev as merch_rev,
	aot.shipping_tax_rev as shipping_tax_rev,
	aot.number_of_orders as number_of_orders,
	aot.cancelled_orders as cancelled_orders, 
	aot.net_num_of_orders as net_num_of_orders,
	count(distinct ce.orderid) as num_of_carts, 
	((aot.total_dollar_sales - aot.dollar_cancels) / aot.net_num_of_orders) as avg_order_rev,
	(aot.merch_rev / aot.net_num_of_orders) as avg_order_merc_rev,
	count(distinct vi.sessionid) as number_of_shoppers,
	(aot.number_of_orders / count(distinct vi.sessionid)) as shop_to_purc_conv,
	(count(distinct ce.orderid) / count(distinct vi.sessionid)) as shop_to_cart_conv,
	(aot.number_of_orders / count(distinct ce.orderid)) as cart_to_purc_conv,
	aot.num_of_discounts as num_of_discounts, 
	aot.num_of_gift_certs as num_of_gift_certs
from 
	drpta_orders aot, 
	dcs_cart_event ce, 
	dss_dps_view_item vi
where 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, ce.timestamp), ce.timestamp), 101)) = aot.year 
	and CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, vi.timestamp), vi.timestamp), 101)) = aot.year
group by 
	aot.year, 
	aot.total_dollar_sales, 
	aot.dollar_cancels,
	aot.merch_rev, 
	aot.shipping_tax_rev, 
	aot.number_of_orders,
	aot.cancelled_orders, 
	aot.net_num_of_orders, 
	aot.num_of_discounts,
	aot.num_of_gift_certs
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_promotion calculates totals about orders that were discounted
   ]]></comment>
   <comment><![CDATA[
       by the sample 'promo60003' promotion over each week
   ]]></comment>
   <view name="drptw_promotion" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'DAY') as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by trunc(o.submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'DAY') as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	dbo.TRUNC(o.submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_SUB(DATE(o.submitted_date), INTERVAL DAYOFWEEK(o.submitted_date)-1 DAY) as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	DATE_SUB(DATE(o.submitted_date), INTERVAL DAYOFWEEK(o.submitted_date)-1 DAY)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(DAYS(o.submitted_date) - DAYOFWEEK(o.submitted_date) +1) as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by DATE(DAYS(o.submitted_date) - DAYOFWEEK(o.submitted_date) +1)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, o.submitted_date), o.submitted_date), 101)) as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, o.submitted_date), o.submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_promotion calculates totals about orders that were discounted
   ]]></comment>
   <comment><![CDATA[
       by the sample 'promo60003' promotion over each month
   ]]></comment>
   <view name="drptm_promotion" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'MON') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by trunc(o.submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'MON') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	dbo.TRUNC(o.submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(o.submitted_date, '%Y-%m-01') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	DATE_FORMAT(o.submitted_date, '%Y-%m-01')
         ]]></view-body>
      </view-db>
      <view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(o.submitted_date) AS CHAR(2)))||'-01') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(o.submitted_date) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, o.submitted_date), o.submitted_date), 101)) as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, o.submitted_date), o.submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_promotion calculates totals about orders that were discounted
   ]]></comment>
   <comment><![CDATA[
       by the sample 'promo60003' promotion over each quarter
   ]]></comment>
   <view name="drptq_promotion" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'Q') as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by trunc(o.submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'Q') as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	dbo.TRUNC(o.submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_ADD(DATE_FORMAT(o.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(o.submitted_date)-1)*3 MONTH) as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	DATE_ADD(DATE_FORMAT(o.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(o.submitted_date)-1)*3 MONTH)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(o.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(o.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, o.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, o.submitted_date)), 101)  as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, o.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, o.submitted_date)), 101) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_promotion calculates totals about orders that were discounted
   ]]></comment>
   <comment><![CDATA[
       by the sample 'promo60003' promotion over each year
   ]]></comment>
   <view name="drpta_promotion" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'YEAR') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by trunc(o.submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'YEAR') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	dbo.TRUNC(o.submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(o.submitted_date, '%Y-01-01') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	DATE_FORMAT(o.submitted_date, '%Y-01-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-1-1') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-1-1')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, o.submitted_date), o.submitted_date), 101))  as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dcspp_amtinfo_adj aa,
	dcspp_price_adjust pa
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and i.price_info = aa.amount_info_id 
	and aa.adjustments = pa.adjustment_id 
	and pa.pricing_model = 'promo60003'
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, o.submitted_date), o.submitted_date), 101)) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_male_18_25 calculates totals about orders that were placed
   ]]></comment>
   <comment><![CDATA[
       each week by males aged 18-25
   ]]></comment>
   <view name="drptw_male_18_25" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'DAY') as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18) 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25)
group by trunc(o.submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'DAY') as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 18) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 25)
group by 
	dbo.TRUNC(o.submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_SUB(DATE(o.submitted_date), INTERVAL DAYOFWEEK(o.submitted_date)-1 DAY) as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 >= 18) 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 < 25)
group by 
	DATE_SUB(DATE(o.submitted_date), INTERVAL DAYOFWEEK(o.submitted_date)-1 DAY)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(DAYS(o.submitted_date) - DAYOFWEEK(o.submitted_date) +1) as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2
	and (o.submitted_date - u.date_of_birth) >= 180000 
	and (o.submitted_date - u.date_of_birth) < 250000 
group by DATE(DAYS(o.submitted_date) - DAYOFWEEK(o.submitted_date) +1)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, o.submitted_date), o.submitted_date), 101)) as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 18) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 25)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, o.submitted_date), o.submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_male_18_25 calculates totals about orders that were placed
   ]]></comment>
   <comment><![CDATA[
       each month by males aged 18-25
   ]]></comment>
   <view name="drptm_male_18_25" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'MON') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18) 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25) 
group by trunc(o.submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'MON') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 18) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 25) 
group by 
	dbo.TRUNC(o.submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(o.submitted_date, '%Y-%m-01') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 >= 18) 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 < 25) 
group by 
	DATE_FORMAT(o.submitted_date, '%Y-%m-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(o.submitted_date) AS CHAR(2)))||'-01') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (o.submitted_date - u.date_of_birth) >= 180000 
	and (o.submitted_date - u.date_of_birth) < 250000 
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(o.submitted_date) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, o.submitted_date), o.submitted_date), 101)) as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 18) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 25) 
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, o.submitted_date), o.submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_male_18_25 calculates totals about orders that were placed
   ]]></comment>
   <comment><![CDATA[
       each quarter by males aged 18-25
   ]]></comment>
   <view name="drptq_male_18_25" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'Q') as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18) 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25) 
group by trunc(o.submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'Q') as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 18) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 25) 
group by 
	dbo.TRUNC(o.submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_ADD(DATE_FORMAT(o.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(o.submitted_date)-1)*3 MONTH) as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 >= 18) 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 < 25) 
group by 
	DATE_ADD(DATE_FORMAT(o.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(o.submitted_date)-1)*3 MONTH)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(o.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (o.submitted_date - u.date_of_birth) >= 180000 
	and (o.submitted_date - u.date_of_birth) < 250000 
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(o.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, o.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, o.submitted_date)), 101)  as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 18) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 25) 
group by 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, o.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, o.submitted_date)), 101) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_male_18_25 calculates totals about orders that were placed
   ]]></comment>
   <comment><![CDATA[
       each year by males aged 18-25
   ]]></comment>
   <view name="drpta_male_18_25" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'YEAR') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 18) 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 25) 
group by trunc(o.submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'YEAR') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 18) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 25) 
group by 
	dbo.TRUNC(o.submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(o.submitted_date, '%Y-01-01') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 >= 18) 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 < 25) 
group by 
	DATE_FORMAT(o.submitted_date, '%Y-01-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-1-1') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (o.submitted_date - u.date_of_birth) >= 180000 
	and (o.submitted_date - u.date_of_birth) < 250000 
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-1-1')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, o.submitted_date), o.submitted_date), 101))  as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 18) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 25) 
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, o.submitted_date), o.submitted_date), 101)) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptw_male_25_39 calculates totals about orders that were placed
   ]]></comment>
   <comment><![CDATA[
       each week by males aged 25-39
   ]]></comment>
   <view name="drptw_male_25_39" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'DAY') as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id
	and u.gender = 2 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25) 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39)
group by trunc(o.submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'DAY') as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 25) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 39)
group by 
	dbo.TRUNC(o.submitted_date, 'DAY')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_SUB(DATE(o.submitted_date), INTERVAL DAYOFWEEK(o.submitted_date)-1 DAY) as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id
	and u.gender = '2' 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 >= 25) 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 < 39)
group by 
	DATE_SUB(DATE(o.submitted_date), INTERVAL DAYOFWEEK(o.submitted_date)-1 DAY)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(DAYS(o.submitted_date) - DAYOFWEEK(o.submitted_date) +1) as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id
	and u.gender = 2
	and (o.submitted_date - u.date_of_birth) >= 250000 
	and (o.submitted_date - u.date_of_birth) < 390000
group by DATE(DAYS(o.submitted_date) - DAYOFWEEK(o.submitted_date) +1)
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="week"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, o.submitted_date), o.submitted_date), 101)) as week, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 25) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 39)
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(WEEKDAY, o.submitted_date), o.submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptm_male_25_39 calculates totals about orders that were placed
   ]]></comment>
   <comment><![CDATA[
       each month by males aged 25-39
   ]]></comment>
   <view name="drptm_male_25_39" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'MON') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25) 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39) 
group by trunc(o.submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'MON') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 25) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 39) 
group by 
	dbo.TRUNC(o.submitted_date, 'MON')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(o.submitted_date, '%Y-%m-01') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 >= 25) 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 < 39) 
group by 
	DATE_FORMAT(o.submitted_date, '%Y-%m-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(o.submitted_date) AS CHAR(2)))||'-01') as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2
	and (o.submitted_date - u.date_of_birth) >= 250000 
	and (o.submitted_date - u.date_of_birth) < 390000
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(MONTH(o.submitted_date) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="month"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, o.submitted_date), o.submitted_date), 101)) as month, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 25) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 39) 
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAY, o.submitted_date), o.submitted_date), 101))
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drptq_male_25_39 calculates totals about orders that were placed
   ]]></comment>
   <comment><![CDATA[
       each quarter by males aged 25-39
   ]]></comment>
   <view name="drptq_male_25_39" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'Q') as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25) 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39) 
group by trunc(o.submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'Q') as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 25) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 39) 
group by 
	dbo.TRUNC(o.submitted_date, 'Q')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_ADD(DATE_FORMAT(o.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(o.submitted_date)-1)*3 MONTH) as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 >= 25) 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 < 39) 
group by 
	DATE_ADD(DATE_FORMAT(o.submitted_date, '%Y-01-01'), INTERVAL (QUARTER(o.submitted_date)-1)*3 MONTH)
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(o.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01') as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2
	and (o.submitted_date - u.date_of_birth) >= 250000 
	and (o.submitted_date - u.date_of_birth) < 390000
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-'||RTRIM(CAST(((QUARTER(o.submitted_date) - 1)*3+1) AS CHAR(2)))||'-01')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="quarter"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, o.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, o.submitted_date)), 101)  as quarter, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 25) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 39) 
group by 
	CONVERT(DATETIME, CONVERT(CHAR(2),(DATEPART(QUARTER, o.submitted_date)-1)*3+1) + '/01/' + CONVERT(CHAR(4),DATEPART(YEAR, o.submitted_date)), 101) 
         ]]></view-body>
      </view-db>
   </view>
   <comment><![CDATA[
       drpta_male_25_39 calculates totals about orders that were placed
   ]]></comment>
   <comment><![CDATA[
       each year by males aged 25-39
   ]]></comment>
   <view name="drpta_male_25_39" description="">
      <view-db db="oracle">
         <view-body><![CDATA[
select trunc(o.submitted_date, 'YEAR') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 >= 25) 
	and (MONTHS_BETWEEN(o.submitted_date, u.date_of_birth)/12 < 39) 
group by trunc(o.submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mssql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	dbo.TRUNC(o.submitted_date, 'YEAR') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 25) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 39) 
group by 
	dbo.TRUNC(o.submitted_date, 'YEAR')
         ]]></view-body>
      </view-db>
<view-db db="mysql">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
             select 
	DATE_FORMAT(o.submitted_date, '%Y-01-01') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 >= 25) 
	and (PERIOD_DIFF(DATE_FORMAT(o.submitted_date, '%Y%m'), DATE_FORMAT(u.date_of_birth, '%Y%m'))/12 < 39) 
group by 
	DATE_FORMAT(o.submitted_date, '%Y-01-01')
         ]]></view-body>
      </view-db>
<view-db db="db2">
         <view-body><![CDATA[
select DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-1-1') as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = 2 
	and (o.submitted_date - u.date_of_birth) >= 250000 
	and (o.submitted_date - u.date_of_birth) < 390000
group by DATE(CAST(YEAR(o.submitted_date) AS CHAR(4))||'-1-1')
         ]]></view-body>
      </view-db>
<view-db db="sybase">
         <view-params>
            <view-param name="year"/>
            <view-param name="total_dollar_sales"/>
            <view-param name="cost_of_goods_sold"/>
            <view-param name="number_of_orders"/>
            <view-param name="total_units_sold"/>
         </view-params>
         <view-body><![CDATA[
select 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, o.submitted_date), o.submitted_date), 101))  as year, 
	sum(ai.amount) as total_dollar_sales,
	sum(s.wholesale_price * i.quantity) as cost_of_goods_sold,
	count(o.order_id) as number_of_orders, 
	sum(i.quantity) as total_units_sold
from 
	dcspp_order o, 
	dcspp_amount_info ai, 
	dcspp_item i, 
	dcs_sku s, 
	dps_user u
where 
	o.price_info = ai.amount_info_id 
	and o.state != 'FAILED' 
	and o.state != 'REMOVED' 
	and o.order_id = i.order_ref 
	and i.catalog_ref_id = s.sku_id 
	and o.profile_id = u.id 
	and u.gender = '2' 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 >= 25) 
	and (DATEDIFF(MONTH, u.date_of_birth, o.submitted_date)/12 < 39) 
group by 
	CONVERT(DATETIME, CONVERT(CHAR(10), DATEADD(DAY, 1-DATEPART(DAYOFYEAR, o.submitted_date), o.submitted_date), 101)) 
         ]]></view-body>
      </view-db>
   </view>
</schema>
<!-- @version $Id: //product/DCS/version/10.0.3/templates/DCS/sql/reporting_views.xml#3 $$Change: 655658 $ -->
