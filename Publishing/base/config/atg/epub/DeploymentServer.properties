# @version $Id: //product/Publishing/version/10.0.3/pws/config/atg/epub/DeploymentServer.properties#2 $$Change: 651448 $
##############################
#
# The deployment server.
#

$class=atg.deployment.server.DeploymentServer

useDafDeployment=true

# Service providing a unique name of/for this server.  By default,
# servers are given unique names by combining the server's IP address
# with the DRP port number.  However, the server name can be set
# explicitly in the ServerName service's properties file.
serverNameService=/atg/dynamo/service/ServerName

# There must be a source for all versioned data to be deployed and the
# VersionManager is that source.
versionManager=/atg/epub/version/VersionManagerService

#the transaction manager to use for various operations
transactionManager=/atg/dynamo/transaction/TransactionManager

# The RmiServer for this Dynamo that exports RMI accessible
# components.
rmiServer=/atg/dynamo/server/RmiServer

# The deployment topology manager
topologyManager=/atg/epub/deployment/TopologyManager

# manifest manager
manifestManager=ManifestManager

# agent status cache
agentStatusCache=AgentStatusCache

# The directory where persistent status and other data is stored. By
# default, we use the directory defined in ManifestManager
dataDirectory^=ManifestManager.directory

# When a deployment is started a new thread is spawned to separate the
# deployment process from calling threads.  If the deployment server
# needs to lessen the impact of the deployment process or prevent a
# deployment from being hindered by other threads, the
# deploymentThreadPriorityDelta can be set to increase or decrease the
# priority of the deployment process thread.  See JVM documentation
# about thread priorities.
#deploymentThreadPriorityDelta=0

# Deployment data application is done in parallel on all target
# agents.  As such the deployment thread must issue the apply phase
# command and then check every so often to see if data application is
# finished or if an error has occured.  This property sets the number
# of seconds to sleep between data application polls cycles.
deploymentPollSleepTime=5


# Determines whether or not the DistributedDeploymentAdapater actively polls
# the DeploymentManager to determine DAF deployment completion, or if it 
# passively waits for the deployment completion event from the 
# DeploymentManager.
activelyPollForDeploymentCompletion=false

# Deployment event listeners can be registered with the
# DeploymentServer to operate at various stages of deployment.
# Custom event listeners can be added to the list of registered event
# listeners.
#
# These are some system level listeners that perform needed
# functionality for the deployment infrastructure.  These listeners
# should not be removed.
deploymentEventListeners+=\
  /atg/epub/deployment/DeploymentEventConverter,\
  /atg/epub/deployment/WorkflowAdvancer,\
  /atg/epub/sci/SCIServerService,\
  
# Target initialization listerners can be registered with the
# DeploymentServer to operate before and after a target initialization.
#
# These are some system level listeners that perform needed
# functionality for the deployment infrastructure.  These listeners
# should not be removed.
targetInitializationEventListeners+=\
  /atg/epub/deployment/BatchProjectTagger
  
#the DeploymentQueueManager
deploymentQueueManager=/atg/epub/deployment/DeploymentQueueManager

# this enables deployment queue handlers to know of any topology change
topologyChangeEventListeners+=\
  /atg/epub/AgentStatusCache,\
  /atg/epub/deployment/DeploymentFulfiller,\
  /atg/epub/purge/PurgingService
    
# the fulfiller which maintains deployment target queues and runs deployments.
deploymentFulfiller=/atg/epub/deployment/DeploymentFulfiller

# the ClusterName component manages a unique identifier for this CA cluster
clusterName=/atg/dynamo/service/ClusterName

# the SCIServerService for selective cache invalidation
SCIServerService=/atg/epub/sci/SCIServerService
